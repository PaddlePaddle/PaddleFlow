---
# Source: pfchart/charts/volcano-admission/templates/ServiceAccount-volcano-admission.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: volcano-admission
  namespace: 'paddleflow'
---
# Source: pfchart/charts/volcano-controller/templates/ServiceAccount-volcano-controllers.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: volcano-controllers
  namespace: 'paddleflow'
---
# Source: pfchart/charts/volcano-scheduler/templates/ServiceAccount-volcano-scheduler.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: volcano-scheduler
  namespace: 'paddleflow'
---
# Source: pfchart/charts/volcano-admission-init/templates/volcano-admission-init-secret.yaml
kind: Secret
apiVersion: v1
metadata:
    labels:
        app: 'volcano-admission-init'
        app.kubernetes.io/instance: 'volcano'
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/name: 'volcano-admission-init'
        chart: 'volcano-admission-init-0.0.8-rrm1o4'
        helm.sh/chart: 'volcano-admission-init-0.0.8-rrm1o4'
        heritage: 'Helm'
        release: 'volcano'
    name: 'volcano-admission-init'
data: {}
---
# Source: pfchart/charts/volcano-admission/templates/volcano-admission-secret.yaml
kind: Secret
apiVersion: v1
metadata:
    labels:
        app: 'volcano-admission'
        app.kubernetes.io/instance: 'volcano'
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/name: 'volcano-admission'
        chart: 'volcano-admission-0.0.21-rrm1l0'
        helm.sh/chart: 'volcano-admission-0.0.21-rrm1l0'
        heritage: 'Helm'
        release: 'volcano'
    name: 'volcano-admission'
data: {}
---
# Source: pfchart/charts/volcano-controller/templates/volcano-controller-secret.yaml
kind: Secret
apiVersion: v1
metadata:
    labels:
        app: 'volcano-controller'
        app.kubernetes.io/instance: 'volcano'
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/name: 'volcano-controller'
        chart: 'volcano-controller-0.0.11-rrm1js'
        helm.sh/chart: 'volcano-controller-0.0.11-rrm1js'
        heritage: 'Helm'
        release: 'volcano'
    name: 'volcano-controller'
data: {}
---
# Source: pfchart/charts/volcano-scheduler/templates/volcano-scheduler-secret.yaml
kind: Secret
apiVersion: v1
metadata:
    labels:
        app: 'volcano-scheduler'
        app.kubernetes.io/instance: 'volcano'
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/name: 'volcano-scheduler'
        chart: 'volcano-scheduler-0.0.23-rrm1mf'
        helm.sh/chart: 'volcano-scheduler-0.0.23-rrm1mf'
        heritage: 'Helm'
        release: 'volcano'
    name: 'volcano-scheduler'
data: {}
---
# Source: pfchart/charts/volcano-admission-init/templates/volcano-admission-init-configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
    labels:
        app: 'volcano-admission-init'
        app.kubernetes.io/instance: 'volcano'
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/name: 'volcano-admission-init'
        chart: 'volcano-admission-init-0.0.8-rrm1o4'
        helm.sh/chart: 'volcano-admission-init-0.0.8-rrm1o4'
        heritage: 'Helm'
        release: 'volcano'
    name: 'volcano-admission-init'
data:
    telegraf.conf: |4
        [global_tags]
binaryData: {}
---
# Source: pfchart/charts/volcano-admission/templates/volcano-admission-configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
    labels:
        app: 'volcano-admission'
        app.kubernetes.io/instance: 'volcano'
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/name: 'volcano-admission'
        chart: 'volcano-admission-0.0.21-rrm1l0'
        helm.sh/chart: 'volcano-admission-0.0.21-rrm1l0'
        heritage: 'Helm'
        release: 'volcano'
    name: 'volcano-admission'
data:
    telegraf.conf: |4
        [global_tags]
binaryData: {}
---
# Source: pfchart/charts/volcano-controller/templates/volcano-controller-configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
    labels:
        app: 'volcano-controller'
        app.kubernetes.io/instance: 'volcano'
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/name: 'volcano-controller'
        chart: 'volcano-controller-0.0.11-rrm1js'
        helm.sh/chart: 'volcano-controller-0.0.11-rrm1js'
        heritage: 'Helm'
        release: 'volcano'
    name: 'volcano-controller'
data:
    telegraf.conf: |4
        [global_tags]
binaryData: {}
---
# Source: pfchart/charts/volcano-scheduler/templates/volcano-scheduler-configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
    labels:
        app: 'volcano-scheduler'
        app.kubernetes.io/instance: 'volcano'
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/name: 'volcano-scheduler'
        chart: 'volcano-scheduler-0.0.23-rrm1mf'
        helm.sh/chart: 'volcano-scheduler-0.0.23-rrm1mf'
        heritage: 'Helm'
        release: 'volcano'
    name: 'volcano-scheduler'
data:
    telegraf.conf: |4
        [global_tags]
    volcano-scheduler-pf.conf: |4
            actions: "enqueue, allocate, preemptpf, backfill"
            tiers:
            - plugins:
              - name: priority
                enableJobOrder: true
              - name: gang
              - name: conformance
            - plugins:
              - name: kmpredicates
                arguments:
                  kmpredicate.GPUTopoEnable: true
                  kmpredicate.AvailableGPUTypes: "baidu.com/gpu_p40_8,baidu.com/v100_cgpu,baidu.com/p40_cgpu"
              - name: proportionpf
                enableJobEnqueued: true
              - name: nodeorder
              - name: binpack
                arguments:
                  binpack.weight: 10
                  binpack.cpu: 3
                  binpack.memory: 1
                  binpack.resources: baidu.com/p40_cgpu, baidu.com/p40_cgpu_core, baidu.com/p40_cgpu_memory, baidu.com/v100_cgpu, baidu.com/v100_cgpu_core, baidu.com/v100_cgpu_memory
                  binpack.resources.baidu.com/v100_cgpu_memory: 6
                  binpack.resources.baidu.com/p40_cgpu: 0
                  binpack.resources.baidu.com/p40_cgpu_core: 0
                  binpack.resources.baidu.com/p40_cgpu_memory: 6
binaryData: {}
---
# Source: pfchart/charts/volcano-admission/templates/ClusterRole-volcano-admission.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: volcano-admission
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - nodes
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - create
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - patch
- apiGroups:
  - scheduling.incubator.k8s.io
  - scheduling.volcano.sh
  resources:
  - queues
  verbs:
  - get
  - list
- apiGroups:
  - scheduling.incubator.k8s.io
  - scheduling.volcano.sh
  resources:
  - elasticresourcequotas
  - elasticresourcequotas/status
  verbs:
  - get
  - list
  - update
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
- apiGroups:
  - scheduling.incubator.k8s.io
  - scheduling.volcano.sh
  resources:
  - podgroups
  verbs:
  - get
  - list
  - watch
---
# Source: pfchart/charts/volcano-controller/templates/ClusterRole-volcano-controllers.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: volcano-controllers
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
  - delete
- apiGroups:
  - batch.volcano.sh
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - batch.volcano.sh
  resources:
  - jobs/status
  - jobs/finalizers
  verbs:
  - update
  - patch
- apiGroups:
  - bus.volcano.sh
  resources:
  - commands
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - bind
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - create
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
- apiGroups:
  - scheduling.incubator.k8s.io
  - scheduling.volcano.sh
  resources:
  - podgroups
  - queues
  - queues/status
  - elasticresourcequotas
  - elasticresourcequotas/status
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - create
  - delete
---
# Source: pfchart/charts/volcano-scheduler/templates/ClusterRole-volcano-scheduler.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: volcano-scheduler
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
  - delete
- apiGroups:
  - batch.volcano.sh
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - batch.volcano.sh
  resources:
  - jobs/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - bind
  - updateStatus
  - delete
- apiGroups:
  - ""
  resources:
  - pods/binding
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - resourcequotas
  verbs:
  - list
  - watch
  - create
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - list
  - watch
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - scheduling.incubator.k8s.io
  - scheduling.volcano.sh
  resources:
  - queues
  - elasticresourcequotas
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - scheduling.incubator.k8s.io
  - scheduling.volcano.sh
  resources:
  - podgroups
  verbs:
  - list
  - watch
  - update
---
# Source: pfchart/charts/volcano-admission/templates/ClusterRoleBinding-volcano-admission-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: volcano-admission-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: volcano-admission
subjects:
- kind: ServiceAccount
  name: volcano-admission
  namespace: paddleflow
---
# Source: pfchart/charts/volcano-controller/templates/ClusterRoleBinding-volcano-controllers-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: volcano-controllers-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: volcano-controllers
subjects:
- kind: ServiceAccount
  name: volcano-controllers
  namespace: paddleflow
---
# Source: pfchart/charts/volcano-scheduler/templates/ClusterRoleBinding-volcano-scheduler-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: volcano-scheduler-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: volcano-scheduler
subjects:
- kind: ServiceAccount
  name: volcano-scheduler
  namespace: paddleflow
---
# Source: pfchart/charts/volcano-admission/templates/volcano-admission-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: volcano-admission-service
  labels:
    app: volcano-admission
    chart: "volcano-admission-0.0.21-rrm1l0"
    release: "volcano"
    heritage: "Helm"
    app.kubernetes.io/managed-by: 'Helm'
    app.kubernetes.io/instance: 'volcano'
    helm.sh/chart: 'volcano-admission-0.0.21-rrm1l0'
    app.kubernetes.io/name: 'volcano-admission'

  annotations:
spec:
  type: NodePort
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: 
    port: 443
    nodePort: 18443
    protocol: TCP
    targetPort: 8443
  selector:
    app: volcano-admission
---
# Source: pfchart/charts/volcano-scheduler/templates/volcano-scheduler-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: volcano-scheduler-service
  labels:
    app: volcano-scheduler
    chart: "volcano-scheduler-0.0.23-rrm1mf"
    release: "volcano"
    heritage: "Helm"
    app.kubernetes.io/managed-by: 'Helm'
    app.kubernetes.io/instance: 'volcano'
    helm.sh/chart: 'volcano-scheduler-0.0.23-rrm1mf'
    app.kubernetes.io/name: 'volcano-scheduler'

  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: port-0
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: volcano-scheduler
---
kind: ElasticResourceQuota
spec:
  max:
    cpu: '0'
    memory: '0'
  min:
    cpu: '0'
    memory: '0'
  namespace: default
metadata:
  name: root
  labels:
    paddleflow.baidu.com/resource-isolation-type: logical
apiVersion: scheduling.volcano.sh/v1beta1
---
# Source: pfchart/charts/volcano-admission/templates/volcano-admission-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  #文件里的所有volcano-admission、volcano_admission都替换成实际名称
  name: volcano-admission
  labels:
    app: volcano-admission
    chart: "volcano-admission-0.0.21-rrm1l0"
    release: "volcano"
    heritage: "Helm"
    app.kubernetes.io/managed-by: 'Helm'
    app.kubernetes.io/instance: 'volcano'
    helm.sh/chart: 'volcano-admission-0.0.21-rrm1l0'
    app.kubernetes.io/name: 'volcano-admission'
    app: volcano-admission
  annotations:
    app: volcano-admission
    reloader.stakater.com/auto: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: volcano-admission
  template:
    metadata:
      labels:
        app: volcano-admission
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/instance: 'volcano'
        helm.sh/chart: 'volcano-admission-0.0.21-rrm1l0'
        app.kubernetes.io/name: 'volcano-admission'
        app: volcano-admission
      annotations:
        app: volcano-admission
    spec:

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: volcano-admission
      containers:
      - name: volcano-admission
        image: "paddleflow/vc-webhook-manager:pf1.4-vc1.3-rc3"
        imagePullPolicy: "IfNotPresent"
        args:
        #container_args list
          - --tls-cert-file=/admission.local.config/certificates/tls.crt
          - --tls-private-key-file=/admission.local.config/certificates/tls.key
          - --ca-cert-file=/admission.local.config/certificates/ca.crt
          - --webhook-namespace=paddleflow
          - --webhook-service-name=volcano-admission-service
          - --logtostderr=false
          - --port=8443
          - -v=4
          - 2>&1
          - --alsologtostderr
          - --log_dir=/tmp/log
          - --log_file=/tmp/log/webhook.log
          - --log_file_max_size=300
        securityContext:
          privileged: false
        #服务启动暴露的端口，list形式，根据服务情况增加或删减
        #注意：这个要跟volcano_admission-service.yaml里的ports一一对应
        ports:
        #服务的环境变量，list形式，根据服务情况增加或删减
        env:
        #container_envs list
        #注意：这里的name跟后面volumes里name是一一对应的
        volumeMounts:
        - name: logdir
          mountPath: /tmp/log
          mountPropagation: None
          subPath: 
        - name: volcano-admission-secret
          #容器里配置文件存放路径
          mountPath: /admission.local.config/certificates
          #容器里配置文件名称
          subPath: 
      initContainers:
      volumes:
      - name: logdir
        hostPath: 
          path: /mnt/log/volcano/admission
          type: DirectoryOrCreate
      # 集群已存在的configMap和secret
      - name: volcano-admission-secret
        secret:
          secretName: volcano-admission-secret
---
# Source: pfchart/charts/volcano-controller/templates/volcano-controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  #文件里的所有volcano-controller、volcano_controller都替换成实际名称
  name: volcano-controller
  labels:
    app: volcano-controller
    chart: "volcano-controller-0.0.11-rrm1js"
    release: "volcano"
    heritage: "Helm"
    app.kubernetes.io/managed-by: 'Helm'
    app.kubernetes.io/instance: 'volcano'
    helm.sh/chart: 'volcano-controller-0.0.11-rrm1js'
    app.kubernetes.io/name: 'volcano-controller'
    app: volcano-controller
  annotations:
    app: volcano-controller
    reloader.stakater.com/auto: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: volcano-controller
  template:
    metadata:
      labels:
        app: volcano-controller
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/instance: 'volcano'
        helm.sh/chart: 'volcano-controller-0.0.11-rrm1js'
        app.kubernetes.io/name: 'volcano-controller'
        app: volcano-controller
      annotations:
        app: volcano-controller
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: volcano-controllers
      containers:
      - name: volcano-controller
        image: "paddleflow/vc-controller-manager:pf1.4-vc1.3-rc3"
        imagePullPolicy: "IfNotPresent"
        args:
        #container_args list
          - --logtostderr=false
          - -v=4
          - 2>&1
          - --log_dir=/tmp/log
          - --alsologtostderr
          - --log_file=/tmp/log/controller.log
          - --log_file_max_size=300
        securityContext:
          privileged: false
        #服务启动暴露的端口，list形式，根据服务情况增加或删减
        #注意：这个要跟volcano_controller-service.yaml里的ports一一对应
        ports:
        #服务的环境变量，list形式，根据服务情况增加或删减
        env:
        #container_envs list
        #注意：这里的name跟后面volumes里name是一一对应的
        volumeMounts:
        - name: logdir
          mountPath: /tmp/log
          mountPropagation: None
          subPath: 
      initContainers:
      volumes:
      - name: logdir
        hostPath: 
          path: /mnt/log/volcano/controller
          type: DirectoryOrCreate
      # 集群已存在的configMap和secret
---
# Source: pfchart/charts/volcano-scheduler/templates/volcano-scheduler-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  #文件里的所有volcano-scheduler、volcano_scheduler都替换成实际名称
  name: volcano-scheduler
  labels:
    app: volcano-scheduler
    chart: "volcano-scheduler-0.0.23-rrm1mf"
    release: "volcano"
    heritage: "Helm"
    app.kubernetes.io/managed-by: 'Helm'
    app.kubernetes.io/instance: 'volcano'
    helm.sh/chart: 'volcano-scheduler-0.0.23-rrm1mf'
    app.kubernetes.io/name: 'volcano-scheduler'
    app: volcano-scheduler
  annotations:
    app: volcano-scheduler
    reloader.stakater.com/auto: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: volcano-scheduler
  template:
    metadata:
      labels:
        app: volcano-scheduler
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/instance: 'volcano'
        helm.sh/chart: 'volcano-scheduler-0.0.23-rrm1mf'
        app.kubernetes.io/name: 'volcano-scheduler'
        app: volcano-scheduler
      annotations:
        app: volcano-scheduler
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: volcano-scheduler
      containers:
      - name: volcano-scheduler
        image: "paddleflow/vc-scheduler:pf1.4-vc1.3-rc3"
        imagePullPolicy: "IfNotPresent"
        args:
        #container_args list
          - --alsologtostderr
          - --scheduler-conf=/volcano.scheduler/volcano-scheduler-pf.conf
          - -v=4
          - 2>&1
          - --scheduler-name=volcano
          - --log_dir=/tmp/log
          - --logtostderr=false
          - --log_file_max_size=100
          - --log_file=/tmp/log/scheduler.log
        securityContext:
          privileged: false
        #服务启动暴露的端口，list形式，根据服务情况增加或删减
        #注意：这个要跟volcano_scheduler-service.yaml里的ports一一对应
        ports:
        #服务的环境变量，list形式，根据服务情况增加或删减
        env:
        #container_envs list
        #注意：这里的name跟后面volumes里name是一一对应的
        volumeMounts:
        - name: scheduler-logdir
          mountPath: /tmp/log
          mountPropagation: None
          subPath: 
        - name: conf
          #容器里配置文件存放路径
          mountPath: /volcano.scheduler/volcano-scheduler-pf.conf
          #容器里配置文件名称
          subPath: volcano-scheduler-pf.conf
      initContainers:
      volumes:
      - name: scheduler-logdir
        hostPath: 
          path: /mnt/log/volcano/scheduler
          type: DirectoryOrCreate
      # 集群已存在的configMap和secret
      - name: conf
        configMap:
          name: volcano-scheduler
---
# Source: pfchart/charts/volcano-admission-init/templates/volcano-admission-init-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  #文件里的所有volcano-admission-init、volcano_admission_init都替换成实际名称
  name: volcano-admission-init
  labels:
    app: volcano-admission-init
    chart: "volcano-admission-init-0.0.8-rrm1o4"
    release: "volcano"
    heritage: "Helm"
    app.kubernetes.io/managed-by: 'Helm'
    app.kubernetes.io/instance: 'volcano'
    helm.sh/chart: 'volcano-admission-init-0.0.8-rrm1o4'
    app.kubernetes.io/name: 'volcano-admission-init'
    app: volcano-admission-init
  annotations:
    reloader.stakater.com/auto: "false"
spec:
  backoffLimit: 3
  completions: 1
  parallelism: 1
  activeDeadlineSeconds: 120
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/instance: 'volcano'
        helm.sh/chart: 'volcano-admission-init-0.0.8-rrm1o4'
        app.kubernetes.io/name: 'volcano-admission-init'
    spec:
      serviceAccountName: volcano-admission
      containers:
      - name: volcano-admission-init
        image: "paddleflow/vc-webhook-manager:pf1.4-vc1.3-rc3"
        imagePullPolicy: "IfNotPresent"
        command:
        - ./gen-admission-secret.sh
        - --service
        - volcano-admission-service
        - --namespace
        - $(K8Sns)
        - --secret
        - volcano-admission-secret
        env:
        - name: "K8Sns"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          privileged: false
        #服务的环境变量，list形式，根据服务情况增加或删减
        #container_envs list
        #注意：这里的name跟后面volumes里name是一一对应的
        volumeMounts:
      initContainers:
      volumes:
      # 集群已存在的configMap和secret
      restartPolicy: OnFailure
---
# Source: pfchart/charts/volcano-scheduler/templates/high.yaml
apiVersion: scheduling.k8s.io/v1
description: Used for critical pods that must not be moved from their current node.
kind: PriorityClass
metadata:
    name: high
    selfLink: /apis/scheduling.k8s.io/v1/priorityclasses/high
value: 1000
---
# Source: pfchart/charts/volcano-scheduler/templates/low.yaml
apiVersion: scheduling.k8s.io/v1
description: Used for low-priority Pods that are easily preempted.
kind: PriorityClass
metadata:
    name: low
    selfLink: /apis/scheduling.k8s.io/v1/priorityclasses/low
value: 50
---
# Source: pfchart/charts/volcano-scheduler/templates/normal.yaml
apiVersion: scheduling.k8s.io/v1
description: Used for normal pods.
globalDefault: true
kind: PriorityClass
metadata:
    name: normal
    selfLink: /apis/scheduling.k8s.io/v1/priorityclasses/normal
value: 100
---
# Source: pfchart/charts/volcano-scheduler/templates/very-high.yaml
apiVersion: scheduling.k8s.io/v1
description: Used for system critical pods that must not be moved from their current node.
kind: PriorityClass
metadata:
    name: very-high
    selfLink: /apis/scheduling.k8s.io/v1/priorityclasses/very-high
value: 2000
---
# Source: pfchart/charts/volcano-scheduler/templates/very-low.yaml
apiVersion: scheduling.k8s.io/v1
description: Used for pods that are easily preempted and unimportant.
kind: PriorityClass
metadata:
    name: very-low
    selfLink: /apis/scheduling.k8s.io/v1/priorityclasses/very-low
value: 10