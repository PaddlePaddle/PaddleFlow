---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: commands.bus.volcano.sh
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
spec:
  group: bus.volcano.sh
  names:
    kind: Command
    plural: commands
    listKind: CommandList
    singular: command
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            kind:
              type: string
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            action:
              type: string
              description: >-
                Action defines the action that will be took to the target
                object.
            reason:
              type: string
              description: 'Unique, one-word, CamelCase reason for this command.'
            target:
              type: object
              required:
                - apiVersion
                - kind
                - name
                - uid
              properties:
                uid:
                  type: string
                  description: >-
                    UID of the referent. More info:
                    http://kubernetes.io/docs/user-guide/identifiers#uids
                kind:
                  type: string
                  description: >-
                    Kind of the referent. More info:
                    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                name:
                  type: string
                  description: >-
                    Name of the referent. More info:
                    http://kubernetes.io/docs/user-guide/identifiers#names
                apiVersion:
                  type: string
                  description: API version of the referent.
                controller:
                  type: boolean
                  description: 'If true, this reference points to the managing controller.'
                blockOwnerDeletion:
                  type: boolean
                  description: >-
                    If true, AND if the owner has the "foregroundDeletion"
                    finalizer, then the owner cannot be deleted from the
                    key-value store until this reference is removed. Defaults to
                    false. To set this field, a user needs "delete" permission
                    of the owner, otherwise 422 (Unprocessable Entity) will be
                    returned.
              description: TargetObject defines the target object of this command.
            message:
              type: string
              description: Human-readable message indicating details of this command.
            metadata:
              type: object
            apiVersion:
              type: string
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          description: Command defines command structure.
      served: true
      storage: true
  conversion:
    strategy: None
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: elasticresourcequotas.scheduling.volcano.sh
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
spec:
  group: scheduling.volcano.sh
  names:
    kind: ElasticResourceQuota
    plural: elasticresourcequotas
    listKind: ElasticResourceQuotaList
    singular: elasticresourcequota
    shortNames:
      - equota
      - equota-v1beta1
  scope: Cluster
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            kind:
              type: string
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            spec:
              type: object
              properties:
                max:
                  type: object
                  description: Max is the upper bound of elastic resource quota
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: >-
                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                min:
                  type: object
                  description: Min is the lower bound of elastic resource quota
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: >-
                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                namespace:
                  type: string
                  description: >-
                    namespace defines elastic resource quota belongs to one
                    namespace
                reclaimable:
                  type: boolean
                  description: >-
                    Reclaimable indicate whether the elastic quota can be
                    reclaimed by other elastic resource quota
                hardwareTypes:
                  type: array
                  items:
                    type: string
                  description: >-
                    HardwareTypes defines hardware types of elastic resource
                    quota
              description: >-
                Specification of the desired behavior of the
                ElasticResourceQuota. More info:
                https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            status:
              type: object
              properties:
                used:
                  type: object
                  description: Used resource of elastic resource quota
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: >-
                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                isLeaf:
                  type: boolean
                  description: IsLeaf defines whether elastic resource quota is leaf or not
                queueName:
                  type: string
                  description: QueueName indicate bound queue
              description: The status of ElasticResourceQuota.
            metadata:
              type: object
            apiVersion:
              type: string
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          description: Elastic Resource Quota
      served: true
      storage: true
      subresources:
        status: {}
  conversion:
    strategy: None
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: jobs.batch.volcano.sh
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
spec:
  group: batch.volcano.sh
  names:
    kind: Job
    plural: jobs
    listKind: JobList
    singular: job
    shortNames:
      - vcjob
      - vj
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            kind:
              type: string
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            spec:
              type: object
              properties:
                queue:
                  type: string
                  description: >-
                    Specifies the queue that will be used in the scheduler,
                    "default" queue is used this leaves empty.
                tasks:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Name specifies the name of tasks
                      maxRetry:
                        type: integer
                        format: int32
                        description: >-
                          Specifies the maximum number of retries before marking
                          this Task failed. Defaults to 3.
                      policies:
                        type: array
                        items:
                          type: object
                          properties:
                            event:
                              type: string
                              description: >-
                                The Event recorded by scheduler; the controller
                                takes actions according to this Event.
                            action:
                              type: string
                              description: >-
                                The action that will be taken to the PodGroup
                                according to Event. One of "Restart", "None".
                                Default to None.
                            events:
                              type: array
                              items:
                                type: string
                                description: >-
                                  Event represent the phase of Job, e.g.
                                  pod-failed.
                              description: >-
                                The Events recorded by scheduler; the controller
                                takes actions according to this Events.
                            timeout:
                              type: string
                              description: >-
                                Timeout is the grace period for controller to
                                take actions. Default to nil (take action
                                immediately).
                            exitCode:
                              type: integer
                              format: int32
                              description: >-
                                The exit code of the pod container, controller
                                will take action according to this code. Note:
                                only one of `Event` or `ExitCode` can be
                                specified.
                          description: >-
                            LifecyclePolicy specifies the lifecycle and error
                            handling of task and job.
                        description: Specifies the lifecycle of task
                      replicas:
                        type: integer
                        format: int32
                        description: >-
                          Replicas specifies the replicas of this TaskSpec in
                          Job
                      template:
                        type: object
                        properties:
                          spec:
                            type: object
                            required:
                              - containers
                            properties:
                              hostIPC:
                                type: boolean
                                description: >-
                                  Use the host's ipc namespace. Optional:
                                  Default to false.
                              hostPID:
                                type: boolean
                                description: >-
                                  Use the host's pid namespace. Optional:
                                  Default to false.
                              volumes:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    fc:
                                      type: object
                                      properties:
                                        lun:
                                          type: integer
                                          format: int32
                                          description: 'Optional: FC target lun number'
                                        wwids:
                                          type: array
                                          items:
                                            type: string
                                          description: >-
                                            Optional: FC volume world wide
                                            identifiers (wwids) Either wwids or
                                            combination of targetWWNs and lun must
                                            be set, but not both simultaneously.
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type to mount. Must be a
                                            filesystem type supported by the host
                                            operating system. Ex. "ext4", "xfs",
                                            "ntfs". Implicitly inferred to be "ext4"
                                            if unspecified. TODO: how do we prevent
                                            errors in the filesystem from
                                            compromising the machine
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Optional: Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                        targetWWNs:
                                          type: array
                                          items:
                                            type: string
                                          description: >-
                                            Optional: FC target worldwide names
                                            (WWNs)
                                      description: >-
                                        FC represents a Fibre Channel resource
                                        that is attached to a kubelet's host
                                        machine and then exposed to the pod.
                                    csi:
                                      type: object
                                      required:
                                        - driver
                                      properties:
                                        driver:
                                          type: string
                                          description: >-
                                            Driver is the name of the CSI driver
                                            that handles this volume. Consult with
                                            your admin for the correct name as
                                            registered in the cluster.
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type to mount. Ex. "ext4",
                                            "xfs", "ntfs". If not provided, the
                                            empty value is passed to the associated
                                            CSI driver which will determine the
                                            default filesystem to apply.
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Specifies a read-only configuration for
                                            the volume. Defaults to false
                                            (read/write).
                                        volumeAttributes:
                                          type: object
                                          description: >-
                                            VolumeAttributes stores driver-specific
                                            properties that are passed to the CSI
                                            driver. Consult your driver's
                                            documentation for supported values.
                                          additionalProperties:
                                            type: string
                                        nodePublishSecretRef:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                              description: >-
                                                Name of the referent. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields.
                                                apiVersion, kind, uid?
                                          description: >-
                                            NodePublishSecretRef is a reference to
                                            the secret object containing sensitive
                                            information to pass to the CSI driver to
                                            complete the CSI NodePublishVolume and
                                            NodeUnpublishVolume calls. This field is
                                            optional, and  may be empty if no secret
                                            is required. If the secret object
                                            contains more than one secret, all
                                            secret references are passed.
                                      description: >-
                                        CSI (Container Storage Interface)
                                        represents ephemeral storage that is
                                        handled by certain external CSI drivers
                                        (Beta feature).
                                    nfs:
                                      type: object
                                      required:
                                        - path
                                        - server
                                      properties:
                                        path:
                                          type: string
                                          description: >-
                                            Path that is exported by the NFS server.
                                            More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                        server:
                                          type: string
                                          description: >-
                                            Server is the hostname or IP address of
                                            the NFS server. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            ReadOnly here will force the NFS export
                                            to be mounted with read-only
                                            permissions. Defaults to false. More
                                            info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                      description: >-
                                        NFS represents an NFS mount on the host
                                        that shares a pod's lifetime More info:
                                        https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                    rbd:
                                      type: object
                                      required:
                                        - image
                                        - monitors
                                      properties:
                                        pool:
                                          type: string
                                          description: >-
                                            The rados pool name. Default is rbd.
                                            More info:
                                            https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                        user:
                                          type: string
                                          description: >-
                                            The rados user name. Default is admin.
                                            More info:
                                            https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                        image:
                                          type: string
                                          description: >-
                                            The rados image name. More info:
                                            https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type of the volume that you
                                            want to mount. Tip: Ensure that the
                                            filesystem type is supported by the host
                                            operating system. Examples: "ext4",
                                            "xfs", "ntfs". Implicitly inferred to be
                                            "ext4" if unspecified. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine
                                        keyring:
                                          type: string
                                          description: >-
                                            Keyring is the path to key ring for
                                            RBDUser. Default is /etc/ceph/keyring.
                                            More info:
                                            https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                        monitors:
                                          type: array
                                          items:
                                            type: string
                                          description: >-
                                            A collection of Ceph monitors. More
                                            info:
                                            https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            ReadOnly here will force the ReadOnly
                                            setting in VolumeMounts. Defaults to
                                            false. More info:
                                            https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                        secretRef:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                              description: >-
                                                Name of the referent. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields.
                                                apiVersion, kind, uid?
                                          description: >-
                                            SecretRef is name of the authentication
                                            secret for RBDUser. If provided
                                            overrides keyring. Default is nil. More
                                            info:
                                            https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                      description: >-
                                        RBD represents a Rados Block Device
                                        mount on the host that shares a pod's
                                        lifetime. More info:
                                        https://examples.k8s.io/volumes/rbd/README.md
                                    name:
                                      type: string
                                      description: >-
                                        Volume's name. Must be a DNS_LABEL and
                                        unique within the pod. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    iscsi:
                                      type: object
                                      required:
                                        - iqn
                                        - lun
                                        - targetPortal
                                      properties:
                                        iqn:
                                          type: string
                                          description: Target iSCSI Qualified Name.
                                        lun:
                                          type: integer
                                          format: int32
                                          description: iSCSI Target Lun number.
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type of the volume that you
                                            want to mount. Tip: Ensure that the
                                            filesystem type is supported by the host
                                            operating system. Examples: "ext4",
                                            "xfs", "ntfs". Implicitly inferred to be
                                            "ext4" if unspecified. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine
                                        portals:
                                          type: array
                                          items:
                                            type: string
                                          description: >-
                                            iSCSI Target Portal List. The portal is
                                            either an IP or ip_addr:port if the port
                                            is other than default (typically TCP
                                            ports 860 and 3260).
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            ReadOnly here will force the ReadOnly
                                            setting in VolumeMounts. Defaults to
                                            false.
                                        secretRef:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                              description: >-
                                                Name of the referent. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields.
                                                apiVersion, kind, uid?
                                          description: >-
                                            CHAP Secret for iSCSI target and
                                            initiator authentication
                                        targetPortal:
                                          type: string
                                          description: >-
                                            iSCSI Target Portal. The Portal is
                                            either an IP or ip_addr:port if the port
                                            is other than default (typically TCP
                                            ports 860 and 3260).
                                        initiatorName:
                                          type: string
                                          description: >-
                                            Custom iSCSI Initiator Name. If
                                            initiatorName is specified with
                                            iscsiInterface simultaneously, new iSCSI
                                            interface <target portal>:<volume name>
                                            will be created for the connection.
                                        iscsiInterface:
                                          type: string
                                          description: >-
                                            iSCSI Interface Name that uses an iSCSI
                                            transport. Defaults to 'default' (tcp).
                                        chapAuthSession:
                                          type: boolean
                                          description: >-
                                            whether support iSCSI Session CHAP
                                            authentication
                                        chapAuthDiscovery:
                                          type: boolean
                                          description: >-
                                            whether support iSCSI Discovery CHAP
                                            authentication
                                      description: >-
                                        ISCSI represents an ISCSI Disk resource
                                        that is attached to a kubelet's host
                                        machine and then exposed to the pod.
                                        More info:
                                        https://examples.k8s.io/volumes/iscsi/README.md
                                    cephfs:
                                      type: object
                                      required:
                                        - monitors
                                      properties:
                                        path:
                                          type: string
                                          description: >-
                                            Optional: Used as the mounted root,
                                            rather than the full Ceph tree, default
                                            is /
                                        user:
                                          type: string
                                          description: >-
                                            Optional: User is the rados user name,
                                            default is admin More info:
                                            https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                        monitors:
                                          type: array
                                          items:
                                            type: string
                                          description: >-
                                            Required: Monitors is a collection of
                                            Ceph monitors More info:
                                            https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Optional: Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info:
                                            https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                        secretRef:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                              description: >-
                                                Name of the referent. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields.
                                                apiVersion, kind, uid?
                                          description: >-
                                            Optional: SecretRef is reference to the
                                            authentication secret for User, default
                                            is empty. More info:
                                            https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                        secretFile:
                                          type: string
                                          description: >-
                                            Optional: SecretFile is the path to key
                                            ring for User, default is
                                            /etc/ceph/user.secret More info:
                                            https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                      description: >-
                                        CephFS represents a Ceph FS mount on the
                                        host that shares a pod's lifetime
                                    cinder:
                                      type: object
                                      required:
                                        - volumeID
                                      properties:
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type to mount. Must be a
                                            filesystem type supported by the host
                                            operating system. Examples: "ext4",
                                            "xfs", "ntfs". Implicitly inferred to be
                                            "ext4" if unspecified. More info:
                                            https://examples.k8s.io/mysql-cinder-pd/README.md
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Optional: Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info:
                                            https://examples.k8s.io/mysql-cinder-pd/README.md
                                        volumeID:
                                          type: string
                                          description: >-
                                            volume id used to identify the volume in
                                            cinder. More info:
                                            https://examples.k8s.io/mysql-cinder-pd/README.md
                                        secretRef:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                              description: >-
                                                Name of the referent. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields.
                                                apiVersion, kind, uid?
                                          description: >-
                                            Optional: points to a secret object
                                            containing parameters used to connect to
                                            OpenStack.
                                      description: >-
                                        Cinder represents a cinder volume
                                        attached and mounted on kubelets host
                                        machine. More info:
                                        https://examples.k8s.io/mysql-cinder-pd/README.md
                                    secret:
                                      type: object
                                      properties:
                                        items:
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - key
                                              - path
                                            properties:
                                              key:
                                                type: string
                                                description: The key to project.
                                              mode:
                                                type: integer
                                                format: int32
                                                description: >-
                                                  Optional: mode bits used to set
                                                  permissions on this file. Must be an
                                                  octal value between 0000 and 0777 or a
                                                  decimal value between 0 and 511. YAML
                                                  accepts both octal and decimal values,
                                                  JSON requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might be
                                                  in conflict with other options that
                                                  affect the file mode, like fsGroup, and
                                                  the result can be other mode bits set.
                                              path:
                                                type: string
                                                description: >-
                                                  The relative path of the file to map the
                                                  key to. May not be an absolute path. May
                                                  not contain the path element '..'. May
                                                  not start with the string '..'.
                                            description: >-
                                              Maps a string key to a path within a
                                              volume.
                                          description: >-
                                            If unspecified, each key-value pair in
                                            the Data field of the referenced Secret
                                            will be projected into the volume as a
                                            file whose name is the key and content
                                            is the value. If specified, the listed
                                            keys will be projected into the
                                            specified paths, and unlisted keys will
                                            not be present. If a key is specified
                                            which is not present in the Secret, the
                                            volume setup will error unless it is
                                            marked optional. Paths must be relative
                                            and may not contain the '..' path or
                                            start with '..'.
                                        optional:
                                          type: boolean
                                          description: >-
                                            Specify whether the Secret or its keys
                                            must be defined
                                        secretName:
                                          type: string
                                          description: >-
                                            Name of the secret in the pod's
                                            namespace to use. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#secret
                                        defaultMode:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Optional: mode bits used to set
                                            permissions on created files by default.
                                            Must be an octal value between 0000 and
                                            0777 or a decimal value between 0 and
                                            511. YAML accepts both octal and decimal
                                            values, JSON requires decimal values for
                                            mode bits. Defaults to 0644. Directories
                                            within the path are not affected by this
                                            setting. This might be in conflict with
                                            other options that affect the file mode,
                                            like fsGroup, and the result can be
                                            other mode bits set.
                                      description: >-
                                        Secret represents a secret that should
                                        populate this volume. More info:
                                        https://kubernetes.io/docs/concepts/storage/volumes#secret
                                    flocker:
                                      type: object
                                      properties:
                                        datasetName:
                                          type: string
                                          description: >-
                                            Name of the dataset stored as metadata
                                            -> name on the dataset for Flocker
                                            should be considered as deprecated
                                        datasetUUID:
                                          type: string
                                          description: >-
                                            UUID of the dataset. This is unique
                                            identifier of a Flocker dataset
                                      description: >-
                                        Flocker represents a Flocker volume
                                        attached to a kubelet's host machine.
                                        This depends on the Flocker control
                                        service being running
                                    gitRepo:
                                      type: object
                                      required:
                                        - repository
                                      properties:
                                        revision:
                                          type: string
                                          description: Commit hash for the specified revision.
                                        directory:
                                          type: string
                                          description: >-
                                            Target directory name. Must not contain
                                            or start with '..'.  If '.' is supplied,
                                            the volume directory will be the git
                                            repository.  Otherwise, if specified,
                                            the volume will contain the git
                                            repository in the subdirectory with the
                                            given name.
                                        repository:
                                          type: string
                                          description: Repository URL
                                      description: >-
                                        GitRepo represents a git repository at a
                                        particular revision. DEPRECATED: GitRepo
                                        is deprecated. To provision a container
                                        with a git repo, mount an EmptyDir into
                                        an InitContainer that clones the repo
                                        using git, then mount the EmptyDir into
                                        the Pod's container.
                                    quobyte:
                                      type: object
                                      required:
                                        - registry
                                        - volume
                                      properties:
                                        user:
                                          type: string
                                          description: >-
                                            User to map volume access to Defaults to
                                            serivceaccount user
                                        group:
                                          type: string
                                          description: >-
                                            Group to map volume access to Default is
                                            no group
                                        tenant:
                                          type: string
                                          description: >-
                                            Tenant owning the given Quobyte volume
                                            in the Backend Used with dynamically
                                            provisioned Quobyte volumes, value is
                                            set by the plugin
                                        volume:
                                          type: string
                                          description: >-
                                            Volume is a string that references an
                                            already created Quobyte volume by name.
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            ReadOnly here will force the Quobyte
                                            volume to be mounted with read-only
                                            permissions. Defaults to false.
                                        registry:
                                          type: string
                                          description: >-
                                            Registry represents a single or multiple
                                            Quobyte Registry services specified as a
                                            string as host:port pair (multiple
                                            entries are separated with commas) which
                                            acts as the central registry for volumes
                                      description: >-
                                        Quobyte represents a Quobyte mount on
                                        the host that shares a pod's lifetime
                                    scaleIO:
                                      type: object
                                      required:
                                        - gateway
                                        - secretRef
                                        - system
                                      properties:
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type to mount. Must be a
                                            filesystem type supported by the host
                                            operating system. Ex. "ext4", "xfs",
                                            "ntfs". Default is "xfs".
                                        system:
                                          type: string
                                          description: >-
                                            The name of the storage system as
                                            configured in ScaleIO.
                                        gateway:
                                          type: string
                                          description: >-
                                            The host address of the ScaleIO API
                                            Gateway.
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Defaults to false (read/write). ReadOnly
                                            here will force the ReadOnly setting in
                                            VolumeMounts.
                                        secretRef:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                              description: >-
                                                Name of the referent. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields.
                                                apiVersion, kind, uid?
                                          description: >-
                                            SecretRef references to the secret for
                                            ScaleIO user and other sensitive
                                            information. If this is not provided,
                                            Login operation will fail.
                                        sslEnabled:
                                          type: boolean
                                          description: >-
                                            Flag to enable/disable SSL communication
                                            with Gateway, default false
                                        volumeName:
                                          type: string
                                          description: >-
                                            The name of a volume already created in
                                            the ScaleIO system that is associated
                                            with this volume source.
                                        storageMode:
                                          type: string
                                          description: >-
                                            Indicates whether the storage for a
                                            volume should be ThickProvisioned or
                                            ThinProvisioned. Default is
                                            ThinProvisioned.
                                        storagePool:
                                          type: string
                                          description: >-
                                            The ScaleIO Storage Pool associated with
                                            the protection domain.
                                        protectionDomain:
                                          type: string
                                          description: >-
                                            The name of the ScaleIO Protection
                                            Domain for the configured storage.
                                      description: >-
                                        ScaleIO represents a ScaleIO persistent
                                        volume attached and mounted on
                                        Kubernetes nodes.
                                    emptyDir:
                                      type: object
                                      properties:
                                        medium:
                                          type: string
                                          description: >-
                                            What type of storage medium should back
                                            this directory. The default is "" which
                                            means to use the node's default medium.
                                            Must be an empty string (default) or
                                            Memory. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                        sizeLimit:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          pattern: >-
                                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          description: >-
                                            Total amount of local storage required
                                            for this EmptyDir volume. The size limit
                                            is also applicable for memory medium.
                                            The maximum usage on memory medium
                                            EmptyDir would be the minimum value
                                            between the SizeLimit specified here and
                                            the sum of memory limits of all
                                            containers in a pod. The default is nil
                                            which means that the limit is undefined.
                                            More info:
                                            http://kubernetes.io/docs/user-guide/volumes#emptydir
                                          x-kubernetes-int-or-string: true
                                      description: >-
                                        EmptyDir represents a temporary
                                        directory that shares a pod's lifetime.
                                        More info:
                                        https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                    hostPath:
                                      type: object
                                      required:
                                        - path
                                      properties:
                                        path:
                                          type: string
                                          description: >-
                                            Path of the directory on the host. If
                                            the path is a symlink, it will follow
                                            the link to the real path. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                        type:
                                          type: string
                                          description: >-
                                            Type for HostPath Volume Defaults to ""
                                            More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                      description: >-
                                        HostPath represents a pre-existing file
                                        or directory on the host machine that is
                                        directly exposed to the container. This
                                        is generally used for system agents or
                                        other privileged things that are allowed
                                        to see the host machine. Most containers
                                        will NOT need this. More info:
                                        https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                        --- TODO(jonesdl) We need to restrict
                                        who can use host directory mounts and
                                        who can/can not mount host directories
                                        as read/write.
                                    azureDisk:
                                      type: object
                                      required:
                                        - diskName
                                        - diskURI
                                      properties:
                                        kind:
                                          type: string
                                          description: >-
                                            Expected values Shared: multiple blob
                                            disks per storage account  Dedicated:
                                            single blob disk per storage account 
                                            Managed: azure managed data disk (only
                                            in managed availability set). defaults
                                            to shared
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type to mount. Must be a
                                            filesystem type supported by the host
                                            operating system. Ex. "ext4", "xfs",
                                            "ntfs". Implicitly inferred to be "ext4"
                                            if unspecified.
                                        diskURI:
                                          type: string
                                          description: >-
                                            The URI the data disk in the blob
                                            storage
                                        diskName:
                                          type: string
                                          description: >-
                                            The Name of the data disk in the blob
                                            storage
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Defaults to false (read/write). ReadOnly
                                            here will force the ReadOnly setting in
                                            VolumeMounts.
                                        cachingMode:
                                          type: string
                                          description: >-
                                            Host Caching mode: None, Read Only, Read
                                            Write.
                                      description: >-
                                        AzureDisk represents an Azure Data Disk
                                        mount on the host and bind mount to the
                                        pod.
                                    azureFile:
                                      type: object
                                      required:
                                        - secretName
                                        - shareName
                                      properties:
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Defaults to false (read/write). ReadOnly
                                            here will force the ReadOnly setting in
                                            VolumeMounts.
                                        shareName:
                                          type: string
                                          description: Share Name
                                        secretName:
                                          type: string
                                          description: >-
                                            the name of secret that contains Azure
                                            Storage Account Name and Key
                                      description: >-
                                        AzureFile represents an Azure File
                                        Service mount on the host and bind mount
                                        to the pod.
                                    configMap:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                          description: >-
                                            Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields.
                                            apiVersion, kind, uid?
                                        items:
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - key
                                              - path
                                            properties:
                                              key:
                                                type: string
                                                description: The key to project.
                                              mode:
                                                type: integer
                                                format: int32
                                                description: >-
                                                  Optional: mode bits used to set
                                                  permissions on this file. Must be an
                                                  octal value between 0000 and 0777 or a
                                                  decimal value between 0 and 511. YAML
                                                  accepts both octal and decimal values,
                                                  JSON requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might be
                                                  in conflict with other options that
                                                  affect the file mode, like fsGroup, and
                                                  the result can be other mode bits set.
                                              path:
                                                type: string
                                                description: >-
                                                  The relative path of the file to map the
                                                  key to. May not be an absolute path. May
                                                  not contain the path element '..'. May
                                                  not start with the string '..'.
                                            description: >-
                                              Maps a string key to a path within a
                                              volume.
                                          description: >-
                                            If unspecified, each key-value pair in
                                            the Data field of the referenced
                                            ConfigMap will be projected into the
                                            volume as a file whose name is the key
                                            and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is
                                            specified which is not present in the
                                            ConfigMap, the volume setup will error
                                            unless it is marked optional. Paths must
                                            be relative and may not contain the '..'
                                            path or start with '..'.
                                        optional:
                                          type: boolean
                                          description: >-
                                            Specify whether the ConfigMap or its
                                            keys must be defined
                                        defaultMode:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Optional: mode bits used to set
                                            permissions on created files by default.
                                            Must be an octal value between 0000 and
                                            0777 or a decimal value between 0 and
                                            511. YAML accepts both octal and decimal
                                            values, JSON requires decimal values for
                                            mode bits. Defaults to 0644. Directories
                                            within the path are not affected by this
                                            setting. This might be in conflict with
                                            other options that affect the file mode,
                                            like fsGroup, and the result can be
                                            other mode bits set.
                                      description: >-
                                        ConfigMap represents a configMap that
                                        should populate this volume
                                    ephemeral:
                                      type: object
                                      properties:
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Specifies a read-only configuration for
                                            the volume. Defaults to false
                                            (read/write).
                                        volumeClaimTemplate:
                                          type: object
                                          required:
                                            - spec
                                          properties:
                                            spec:
                                              type: object
                                              properties:
                                                selector:
                                                  type: object
                                                  properties:
                                                    matchLabels:
                                                      type: object
                                                      description: >-
                                                        matchLabels is a map of {key,value}
                                                        pairs. A single {key,value} in the
                                                        matchLabels map is equivalent to an
                                                        element of matchExpressions, whose key
                                                        field is "key", the operator is "In",
                                                        and the values array contains only
                                                        "value". The requirements are ANDed.
                                                      additionalProperties:
                                                        type: string
                                                    matchExpressions:
                                                      type: array
                                                      items:
                                                        type: object
                                                        required:
                                                          - key
                                                          - operator
                                                        properties:
                                                          key:
                                                            type: string
                                                            description: >-
                                                              key is the label key that the selector
                                                              applies to.
                                                          values:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              values is an array of string values. If
                                                              the operator is In or NotIn, the values
                                                              array must be non-empty. If the operator
                                                              is Exists or DoesNotExist, the values
                                                              array must be empty. This array is
                                                              replaced during a strategic merge patch.
                                                          operator:
                                                            type: string
                                                            description: >-
                                                              operator represents a key's relationship
                                                              to a set of values. Valid operators are
                                                              In, NotIn, Exists and DoesNotExist.
                                                        description: >-
                                                          A label selector requirement is a
                                                          selector that contains values, a key,
                                                          and an operator that relates the key and
                                                          values.
                                                      description: >-
                                                        matchExpressions is a list of label
                                                        selector requirements. The requirements
                                                        are ANDed.
                                                  description: >-
                                                    A label query over volumes to consider
                                                    for binding.
                                                resources:
                                                  type: object
                                                  properties:
                                                    limits:
                                                      type: object
                                                      description: >-
                                                        Limits describes the maximum amount of
                                                        compute resources allowed. More info:
                                                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                                      additionalProperties:
                                                        anyOf:
                                                          - type: integer
                                                          - type: string
                                                        pattern: >-
                                                          ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                    requests:
                                                      type: object
                                                      description: >-
                                                        Requests describes the minimum amount of
                                                        compute resources required. If Requests
                                                        is omitted for a container, it defaults
                                                        to Limits if that is explicitly
                                                        specified, otherwise to an
                                                        implementation-defined value. More info:
                                                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                                      additionalProperties:
                                                        anyOf:
                                                          - type: integer
                                                          - type: string
                                                        pattern: >-
                                                          ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                  description: >-
                                                    Resources represents the minimum
                                                    resources the volume should have. More
                                                    info:
                                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                                dataSource:
                                                  type: object
                                                  required:
                                                    - kind
                                                    - name
                                                  properties:
                                                    kind:
                                                      type: string
                                                      description: >-
                                                        Kind is the type of resource being
                                                        referenced
                                                    name:
                                                      type: string
                                                      description: >-
                                                        Name is the name of resource being
                                                        referenced
                                                    apiGroup:
                                                      type: string
                                                      description: >-
                                                        APIGroup is the group for the resource
                                                        being referenced. If APIGroup is not
                                                        specified, the specified Kind must be in
                                                        the core API group. For any other
                                                        third-party types, APIGroup is required.
                                                  description: >-
                                                    This field can be used to specify
                                                    either: * An existing VolumeSnapshot
                                                    object
                                                    (snapshot.storage.k8s.io/VolumeSnapshot
                                                    - Beta) * An existing PVC
                                                    (PersistentVolumeClaim) * An existing
                                                    custom resource/object that implements
                                                    data population (Alpha) In order to use
                                                    VolumeSnapshot object types, the
                                                    appropriate feature gate must be enabled
                                                    (VolumeSnapshotDataSource or
                                                    AnyVolumeDataSource) If the provisioner
                                                    or an external controller can support
                                                    the specified data source, it will
                                                    create a new volume based on the
                                                    contents of the specified data source.
                                                    If the specified data source is not
                                                    supported, the volume will not be
                                                    created and the failure will be reported
                                                    as an event. In the future, we plan to
                                                    support more data source types and the
                                                    behavior of the provisioner may change.
                                                volumeMode:
                                                  type: string
                                                  description: >-
                                                    volumeMode defines what type of volume
                                                    is required by the claim. Value of
                                                    Filesystem is implied when not included
                                                    in claim spec.
                                                volumeName:
                                                  type: string
                                                  description: >-
                                                    VolumeName is the binding reference to
                                                    the PersistentVolume backing this claim.
                                                accessModes:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    AccessModes contains the desired access
                                                    modes the volume should have. More info:
                                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                                storageClassName:
                                                  type: string
                                                  description: >-
                                                    Name of the StorageClass required by the
                                                    claim. More info:
                                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                              description: >-
                                                The specification for the
                                                PersistentVolumeClaim. The entire
                                                content is copied unchanged into the PVC
                                                that gets created from this template.
                                                The same fields as in a
                                                PersistentVolumeClaim are also valid
                                                here.
                                            metadata:
                                              type: object
                                              description: >-
                                                May contain labels and annotations that
                                                will be copied into the PVC when
                                                creating it. No other fields are allowed
                                                and will be rejected during validation.
                                          description: >-
                                            Will be used to create a stand-alone PVC
                                            to provision the volume. The pod in
                                            which this EphemeralVolumeSource is
                                            embedded will be the owner of the PVC,
                                            i.e. the PVC will be deleted together
                                            with the pod.  The name of the PVC will
                                            be `<pod name>-<volume name>` where
                                            `<volume name>` is the name from the
                                            `PodSpec.Volumes` array entry. Pod
                                            validation will reject the pod if the
                                            concatenated name is not valid for a PVC
                                            (for example, too long). 
                                             An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
                                             This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
                                             Required, must not be nil.
                                      description: >-
                                        Ephemeral represents a volume that is
                                        handled by a cluster storage driver
                                        (Alpha feature). The volume's lifecycle
                                        is tied to the pod that defines it - it
                                        will be created before the pod starts,
                                        and deleted when the pod is removed. 
                                         Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim). 
                                         Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. 
                                         Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. 
                                         A pod can use both types of ephemeral volumes and persistent volumes at the same time.
                                    glusterfs:
                                      type: object
                                      required:
                                        - endpoints
                                        - path
                                      properties:
                                        path:
                                          type: string
                                          description: >-
                                            Path is the Glusterfs volume path. More
                                            info:
                                            https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            ReadOnly here will force the Glusterfs
                                            volume to be mounted with read-only
                                            permissions. Defaults to false. More
                                            info:
                                            https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                        endpoints:
                                          type: string
                                          description: >-
                                            EndpointsName is the endpoint name that
                                            details Glusterfs topology. More info:
                                            https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                      description: >-
                                        Glusterfs represents a Glusterfs mount
                                        on the host that shares a pod's
                                        lifetime. More info:
                                        https://examples.k8s.io/volumes/glusterfs/README.md
                                    projected:
                                      type: object
                                      required:
                                        - sources
                                      properties:
                                        sources:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              secret:
                                                type: object
                                                properties:
                                                  name:
                                                    type: string
                                                    description: >-
                                                      Name of the referent. More info:
                                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?
                                                  items:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - path
                                                      properties:
                                                        key:
                                                          type: string
                                                          description: The key to project.
                                                        mode:
                                                          type: integer
                                                          format: int32
                                                          description: >-
                                                            Optional: mode bits used to set
                                                            permissions on this file. Must be an
                                                            octal value between 0000 and 0777 or a
                                                            decimal value between 0 and 511. YAML
                                                            accepts both octal and decimal values,
                                                            JSON requires decimal values for mode
                                                            bits. If not specified, the volume
                                                            defaultMode will be used. This might be
                                                            in conflict with other options that
                                                            affect the file mode, like fsGroup, and
                                                            the result can be other mode bits set.
                                                        path:
                                                          type: string
                                                          description: >-
                                                            The relative path of the file to map the
                                                            key to. May not be an absolute path. May
                                                            not contain the path element '..'. May
                                                            not start with the string '..'.
                                                      description: >-
                                                        Maps a string key to a path within a
                                                        volume.
                                                    description: >-
                                                      If unspecified, each key-value pair in
                                                      the Data field of the referenced Secret
                                                      will be projected into the volume as a
                                                      file whose name is the key and content
                                                      is the value. If specified, the listed
                                                      keys will be projected into the
                                                      specified paths, and unlisted keys will
                                                      not be present. If a key is specified
                                                      which is not present in the Secret, the
                                                      volume setup will error unless it is
                                                      marked optional. Paths must be relative
                                                      and may not contain the '..' path or
                                                      start with '..'.
                                                  optional:
                                                    type: boolean
                                                    description: >-
                                                      Specify whether the Secret or its key
                                                      must be defined
                                                description: >-
                                                  information about the secret data to
                                                  project
                                              configMap:
                                                type: object
                                                properties:
                                                  name:
                                                    type: string
                                                    description: >-
                                                      Name of the referent. More info:
                                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?
                                                  items:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - path
                                                      properties:
                                                        key:
                                                          type: string
                                                          description: The key to project.
                                                        mode:
                                                          type: integer
                                                          format: int32
                                                          description: >-
                                                            Optional: mode bits used to set
                                                            permissions on this file. Must be an
                                                            octal value between 0000 and 0777 or a
                                                            decimal value between 0 and 511. YAML
                                                            accepts both octal and decimal values,
                                                            JSON requires decimal values for mode
                                                            bits. If not specified, the volume
                                                            defaultMode will be used. This might be
                                                            in conflict with other options that
                                                            affect the file mode, like fsGroup, and
                                                            the result can be other mode bits set.
                                                        path:
                                                          type: string
                                                          description: >-
                                                            The relative path of the file to map the
                                                            key to. May not be an absolute path. May
                                                            not contain the path element '..'. May
                                                            not start with the string '..'.
                                                      description: >-
                                                        Maps a string key to a path within a
                                                        volume.
                                                    description: >-
                                                      If unspecified, each key-value pair in
                                                      the Data field of the referenced
                                                      ConfigMap will be projected into the
                                                      volume as a file whose name is the key
                                                      and content is the value. If specified,
                                                      the listed keys will be projected into
                                                      the specified paths, and unlisted keys
                                                      will not be present. If a key is
                                                      specified which is not present in the
                                                      ConfigMap, the volume setup will error
                                                      unless it is marked optional. Paths must
                                                      be relative and may not contain the '..'
                                                      path or start with '..'.
                                                  optional:
                                                    type: boolean
                                                    description: >-
                                                      Specify whether the ConfigMap or its
                                                      keys must be defined
                                                description: >-
                                                  information about the configMap data to
                                                  project
                                              downwardAPI:
                                                type: object
                                                properties:
                                                  items:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - path
                                                      properties:
                                                        mode:
                                                          type: integer
                                                          format: int32
                                                          description: >-
                                                            Optional: mode bits used to set
                                                            permissions on this file, must be an
                                                            octal value between 0000 and 0777 or a
                                                            decimal value between 0 and 511. YAML
                                                            accepts both octal and decimal values,
                                                            JSON requires decimal values for mode
                                                            bits. If not specified, the volume
                                                            defaultMode will be used. This might be
                                                            in conflict with other options that
                                                            affect the file mode, like fsGroup, and
                                                            the result can be other mode bits set.
                                                        path:
                                                          type: string
                                                          description: >-
                                                            Required: Path is  the relative path
                                                            name of the file to be created. Must not
                                                            be absolute or contain the '..' path.
                                                            Must be utf-8 encoded. The first item of
                                                            the relative path must not start with
                                                            '..'
                                                        fieldRef:
                                                          type: object
                                                          required:
                                                            - fieldPath
                                                          properties:
                                                            fieldPath:
                                                              type: string
                                                              description: >-
                                                                Path of the field to select in the
                                                                specified API version.
                                                            apiVersion:
                                                              type: string
                                                              description: >-
                                                                Version of the schema the FieldPath is
                                                                written in terms of, defaults to "v1".
                                                          description: >-
                                                            Required: Selects a field of the pod:
                                                            only annotations, labels, name and
                                                            namespace are supported.
                                                        resourceFieldRef:
                                                          type: object
                                                          required:
                                                            - resource
                                                          properties:
                                                            divisor:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              pattern: >-
                                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              description: >-
                                                                Specifies the output format of the
                                                                exposed resources, defaults to "1"
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              type: string
                                                              description: 'Required: resource to select'
                                                            containerName:
                                                              type: string
                                                              description: >-
                                                                Container name: required for volumes,
                                                                optional for env vars
                                                          description: >-
                                                            Selects a resource of the container:
                                                            only resources limits and requests
                                                            (limits.cpu, limits.memory, requests.cpu
                                                            and requests.memory) are currently
                                                            supported.
                                                      description: >-
                                                        DownwardAPIVolumeFile represents
                                                        information to create the file
                                                        containing the pod field
                                                    description: >-
                                                      Items is a list of DownwardAPIVolume
                                                      file
                                                description: >-
                                                  information about the downwardAPI data
                                                  to project
                                              serviceAccountToken:
                                                type: object
                                                required:
                                                  - path
                                                properties:
                                                  path:
                                                    type: string
                                                    description: >-
                                                      Path is the path relative to the mount
                                                      point of the file to project the token
                                                      into.
                                                  audience:
                                                    type: string
                                                    description: >-
                                                      Audience is the intended audience of the
                                                      token. A recipient of a token must
                                                      identify itself with an identifier
                                                      specified in the audience of the token,
                                                      and otherwise should reject the token.
                                                      The audience defaults to the identifier
                                                      of the apiserver.
                                                  expirationSeconds:
                                                    type: integer
                                                    format: int64
                                                    description: >-
                                                      ExpirationSeconds is the requested
                                                      duration of validity of the service
                                                      account token. As the token approaches
                                                      expiration, the kubelet volume plugin
                                                      will proactively rotate the service
                                                      account token. The kubelet will start
                                                      trying to rotate the token if the token
                                                      is older than 80 percent of its time to
                                                      live or if the token is older than 24
                                                      hours.Defaults to 1 hour and must be at
                                                      least 10 minutes.
                                                description: >-
                                                  information about the
                                                  serviceAccountToken data to project
                                            description: >-
                                              Projection that may be projected along
                                              with other supported volume types
                                          description: list of volume projections
                                        defaultMode:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Mode bits used to set permissions on
                                            created files by default. Must be an
                                            octal value between 0000 and 0777 or a
                                            decimal value between 0 and 511. YAML
                                            accepts both octal and decimal values,
                                            JSON requires decimal values for mode
                                            bits. Directories within the path are
                                            not affected by this setting. This might
                                            be in conflict with other options that
                                            affect the file mode, like fsGroup, and
                                            the result can be other mode bits set.
                                      description: >-
                                        Items for all in one resources secrets,
                                        configmaps, and downward API
                                    storageos:
                                      type: object
                                      properties:
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type to mount. Must be a
                                            filesystem type supported by the host
                                            operating system. Ex. "ext4", "xfs",
                                            "ntfs". Implicitly inferred to be "ext4"
                                            if unspecified.
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Defaults to false (read/write). ReadOnly
                                            here will force the ReadOnly setting in
                                            VolumeMounts.
                                        secretRef:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                              description: >-
                                                Name of the referent. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields.
                                                apiVersion, kind, uid?
                                          description: >-
                                            SecretRef specifies the secret to use
                                            for obtaining the StorageOS API
                                            credentials.  If not specified, default
                                            values will be attempted.
                                        volumeName:
                                          type: string
                                          description: >-
                                            VolumeName is the human-readable name of
                                            the StorageOS volume.  Volume names are
                                            only unique within a namespace.
                                        volumeNamespace:
                                          type: string
                                          description: >-
                                            VolumeNamespace specifies the scope of
                                            the volume within StorageOS.  If no
                                            namespace is specified then the Pod's
                                            namespace will be used.  This allows the
                                            Kubernetes name scoping to be mirrored
                                            within StorageOS for tighter
                                            integration. Set VolumeName to any name
                                            to override the default behaviour. Set
                                            to "default" if you are not using
                                            namespaces within StorageOS. Namespaces
                                            that do not pre-exist within StorageOS
                                            will be created.
                                      description: >-
                                        StorageOS represents a StorageOS volume
                                        attached and mounted on Kubernetes
                                        nodes.
                                    flexVolume:
                                      type: object
                                      required:
                                        - driver
                                      properties:
                                        driver:
                                          type: string
                                          description: >-
                                            Driver is the name of the driver to use
                                            for this volume.
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type to mount. Must be a
                                            filesystem type supported by the host
                                            operating system. Ex. "ext4", "xfs",
                                            "ntfs". The default filesystem depends
                                            on FlexVolume script.
                                        options:
                                          type: object
                                          description: 'Optional: Extra command options if any.'
                                          additionalProperties:
                                            type: string
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Optional: Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                        secretRef:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                              description: >-
                                                Name of the referent. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields.
                                                apiVersion, kind, uid?
                                          description: >-
                                            Optional: SecretRef is reference to the
                                            secret object containing sensitive
                                            information to pass to the plugin
                                            scripts. This may be empty if no secret
                                            object is specified. If the secret
                                            object contains more than one secret,
                                            all secrets are passed to the plugin
                                            scripts.
                                      description: >-
                                        FlexVolume represents a generic volume
                                        resource that is provisioned/attached
                                        using an exec based plugin.
                                    downwardAPI:
                                      type: object
                                      properties:
                                        items:
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - path
                                            properties:
                                              mode:
                                                type: integer
                                                format: int32
                                                description: >-
                                                  Optional: mode bits used to set
                                                  permissions on this file, must be an
                                                  octal value between 0000 and 0777 or a
                                                  decimal value between 0 and 511. YAML
                                                  accepts both octal and decimal values,
                                                  JSON requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might be
                                                  in conflict with other options that
                                                  affect the file mode, like fsGroup, and
                                                  the result can be other mode bits set.
                                              path:
                                                type: string
                                                description: >-
                                                  Required: Path is  the relative path
                                                  name of the file to be created. Must not
                                                  be absolute or contain the '..' path.
                                                  Must be utf-8 encoded. The first item of
                                                  the relative path must not start with
                                                  '..'
                                              fieldRef:
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  fieldPath:
                                                    type: string
                                                    description: >-
                                                      Path of the field to select in the
                                                      specified API version.
                                                  apiVersion:
                                                    type: string
                                                    description: >-
                                                      Version of the schema the FieldPath is
                                                      written in terms of, defaults to "v1".
                                                description: >-
                                                  Required: Selects a field of the pod:
                                                  only annotations, labels, name and
                                                  namespace are supported.
                                              resourceFieldRef:
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  divisor:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    pattern: >-
                                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    description: >-
                                                      Specifies the output format of the
                                                      exposed resources, defaults to "1"
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    type: string
                                                    description: 'Required: resource to select'
                                                  containerName:
                                                    type: string
                                                    description: >-
                                                      Container name: required for volumes,
                                                      optional for env vars
                                                description: >-
                                                  Selects a resource of the container:
                                                  only resources limits and requests
                                                  (limits.cpu, limits.memory, requests.cpu
                                                  and requests.memory) are currently
                                                  supported.
                                            description: >-
                                              DownwardAPIVolumeFile represents
                                              information to create the file
                                              containing the pod field
                                          description: >-
                                            Items is a list of downward API volume
                                            file
                                        defaultMode:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Optional: mode bits to use on created
                                            files by default. Must be a Optional:
                                            mode bits used to set permissions on
                                            created files by default. Must be an
                                            octal value between 0000 and 0777 or a
                                            decimal value between 0 and 511. YAML
                                            accepts both octal and decimal values,
                                            JSON requires decimal values for mode
                                            bits. Defaults to 0644. Directories
                                            within the path are not affected by this
                                            setting. This might be in conflict with
                                            other options that affect the file mode,
                                            like fsGroup, and the result can be
                                            other mode bits set.
                                      description: >-
                                        DownwardAPI represents downward API
                                        about the pod that should populate this
                                        volume
                                    vsphereVolume:
                                      type: object
                                      required:
                                        - volumePath
                                      properties:
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type to mount. Must be a
                                            filesystem type supported by the host
                                            operating system. Ex. "ext4", "xfs",
                                            "ntfs". Implicitly inferred to be "ext4"
                                            if unspecified.
                                        volumePath:
                                          type: string
                                          description: Path that identifies vSphere volume vmdk
                                        storagePolicyID:
                                          type: string
                                          description: >-
                                            Storage Policy Based Management (SPBM)
                                            profile ID associated with the
                                            StoragePolicyName.
                                        storagePolicyName:
                                          type: string
                                          description: >-
                                            Storage Policy Based Management (SPBM)
                                            profile name.
                                      description: >-
                                        VsphereVolume represents a vSphere
                                        volume attached and mounted on kubelets
                                        host machine
                                    portworxVolume:
                                      type: object
                                      required:
                                        - volumeID
                                      properties:
                                        fsType:
                                          type: string
                                          description: >-
                                            FSType represents the filesystem type to
                                            mount Must be a filesystem type
                                            supported by the host operating system.
                                            Ex. "ext4", "xfs". Implicitly inferred
                                            to be "ext4" if unspecified.
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Defaults to false (read/write). ReadOnly
                                            here will force the ReadOnly setting in
                                            VolumeMounts.
                                        volumeID:
                                          type: string
                                          description: >-
                                            VolumeID uniquely identifies a Portworx
                                            volume
                                      description: >-
                                        PortworxVolume represents a portworx
                                        volume attached and mounted on kubelets
                                        host machine
                                    gcePersistentDisk:
                                      type: object
                                      required:
                                        - pdName
                                      properties:
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type of the volume that you
                                            want to mount. Tip: Ensure that the
                                            filesystem type is supported by the host
                                            operating system. Examples: "ext4",
                                            "xfs", "ntfs". Implicitly inferred to be
                                            "ext4" if unspecified. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine
                                        pdName:
                                          type: string
                                          description: >-
                                            Unique name of the PD resource in GCE.
                                            Used to identify the disk in GCE. More
                                            info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            ReadOnly here will force the ReadOnly
                                            setting in VolumeMounts. Defaults to
                                            false. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                        partition:
                                          type: integer
                                          format: int32
                                          description: >-
                                            The partition in the volume that you
                                            want to mount. If omitted, the default
                                            is to mount by volume name. Examples:
                                            For volume /dev/sda1, you specify the
                                            partition as "1". Similarly, the volume
                                            partition for /dev/sda is "0" (or you
                                            can leave the property empty). More
                                            info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                      description: >-
                                        GCEPersistentDisk represents a GCE Disk
                                        resource that is attached to a kubelet's
                                        host machine and then exposed to the
                                        pod. More info:
                                        https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                    awsElasticBlockStore:
                                      type: object
                                      required:
                                        - volumeID
                                      properties:
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type of the volume that you
                                            want to mount. Tip: Ensure that the
                                            filesystem type is supported by the host
                                            operating system. Examples: "ext4",
                                            "xfs", "ntfs". Implicitly inferred to be
                                            "ext4" if unspecified. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Specify "true" to force and set the
                                            ReadOnly property in VolumeMounts to
                                            "true". If omitted, the default is
                                            "false". More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                        volumeID:
                                          type: string
                                          description: >-
                                            Unique ID of the persistent disk
                                            resource in AWS (Amazon EBS volume).
                                            More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                        partition:
                                          type: integer
                                          format: int32
                                          description: >-
                                            The partition in the volume that you
                                            want to mount. If omitted, the default
                                            is to mount by volume name. Examples:
                                            For volume /dev/sda1, you specify the
                                            partition as "1". Similarly, the volume
                                            partition for /dev/sda is "0" (or you
                                            can leave the property empty).
                                      description: >-
                                        AWSElasticBlockStore represents an AWS
                                        Disk resource that is attached to a
                                        kubelet's host machine and then exposed
                                        to the pod. More info:
                                        https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                    photonPersistentDisk:
                                      type: object
                                      required:
                                        - pdID
                                      properties:
                                        pdID:
                                          type: string
                                          description: >-
                                            ID that identifies Photon Controller
                                            persistent disk
                                        fsType:
                                          type: string
                                          description: >-
                                            Filesystem type to mount. Must be a
                                            filesystem type supported by the host
                                            operating system. Ex. "ext4", "xfs",
                                            "ntfs". Implicitly inferred to be "ext4"
                                            if unspecified.
                                      description: >-
                                        PhotonPersistentDisk represents a
                                        PhotonController persistent disk
                                        attached and mounted on kubelets host
                                        machine
                                    persistentVolumeClaim:
                                      type: object
                                      required:
                                        - claimName
                                      properties:
                                        readOnly:
                                          type: boolean
                                          description: >-
                                            Will force the ReadOnly setting in
                                            VolumeMounts. Default false.
                                        claimName:
                                          type: string
                                          description: >-
                                            ClaimName is the name of a
                                            PersistentVolumeClaim in the same
                                            namespace as the pod using this volume.
                                            More info:
                                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                      description: >-
                                        PersistentVolumeClaimVolumeSource
                                        represents a reference to a
                                        PersistentVolumeClaim in the same
                                        namespace. More info:
                                        https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                  description: >-
                                    Volume represents a named volume in a pod
                                    that may be accessed by any container in the
                                    pod.
                                description: >-
                                  List of volumes that can be mounted by
                                  containers belonging to the pod. More info:
                                  https://kubernetes.io/docs/concepts/storage/volumes
                              affinity:
                                type: object
                                properties:
                                  podAffinity:
                                    type: object
                                    properties:
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - topologyKey
                                          properties:
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                namespaces specifies which namespaces
                                                the labelSelector applies to (matches
                                                against); null or empty list means "this
                                                pod's namespace"
                                            topologyKey:
                                              type: string
                                              description: >-
                                                This pod should be co-located (affinity)
                                                or not co-located (anti-affinity) with
                                                the pods matching the labelSelector in
                                                the specified namespaces, where
                                                co-located is defined as running on a
                                                node whose value of the label with key
                                                topologyKey matches that of any node on
                                                which any of the selected pods is
                                                running. Empty topologyKey is not
                                                allowed.
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchLabels:
                                                  type: object
                                                  description: >-
                                                    matchLabels is a map of {key,value}
                                                    pairs. A single {key,value} in the
                                                    matchLabels map is equivalent to an
                                                    element of matchExpressions, whose key
                                                    field is "key", the operator is "In",
                                                    and the values array contains only
                                                    "value". The requirements are ANDed.
                                                  additionalProperties:
                                                    type: string
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        type: string
                                                        description: >-
                                                          key is the label key that the selector
                                                          applies to.
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          values is an array of string values. If
                                                          the operator is In or NotIn, the values
                                                          array must be non-empty. If the operator
                                                          is Exists or DoesNotExist, the values
                                                          array must be empty. This array is
                                                          replaced during a strategic merge patch.
                                                      operator:
                                                        type: string
                                                        description: >-
                                                          operator represents a key's relationship
                                                          to a set of values. Valid operators are
                                                          In, NotIn, Exists and DoesNotExist.
                                                    description: >-
                                                      A label selector requirement is a
                                                      selector that contains values, a key,
                                                      and an operator that relates the key and
                                                      values.
                                                  description: >-
                                                    matchExpressions is a list of label
                                                    selector requirements. The requirements
                                                    are ANDed.
                                              description: >-
                                                A label query over a set of resources,
                                                in this case pods.
                                          description: >-
                                            Defines a set of pods (namely those
                                            matching the labelSelector relative to
                                            the given namespace(s)) that this pod
                                            should be co-located (affinity) or not
                                            co-located (anti-affinity) with, where
                                            co-located is defined as running on a
                                            node whose value of the label with key
                                            <topologyKey> matches that of any node
                                            on which a pod of the set of pods is
                                            running
                                        description: >-
                                          If the affinity requirements specified
                                          by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the affinity requirements
                                          specified by this field cease to be met
                                          at some point during pod execution (e.g.
                                          due to a pod label update), the system
                                          may or may not try to eventually evict
                                          the pod from its node. When there are
                                          multiple elements, the lists of nodes
                                          corresponding to each podAffinityTerm
                                          are intersected, i.e. all terms must be
                                          satisfied.
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - podAffinityTerm
                                            - weight
                                          properties:
                                            weight:
                                              type: integer
                                              format: int32
                                              description: >-
                                                weight associated with matching the
                                                corresponding podAffinityTerm, in the
                                                range 1-100.
                                            podAffinityTerm:
                                              type: object
                                              required:
                                                - topologyKey
                                              properties:
                                                namespaces:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    namespaces specifies which namespaces
                                                    the labelSelector applies to (matches
                                                    against); null or empty list means "this
                                                    pod's namespace"
                                                topologyKey:
                                                  type: string
                                                  description: >-
                                                    This pod should be co-located (affinity)
                                                    or not co-located (anti-affinity) with
                                                    the pods matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running on a
                                                    node whose value of the label with key
                                                    topologyKey matches that of any node on
                                                    which any of the selected pods is
                                                    running. Empty topologyKey is not
                                                    allowed.
                                                labelSelector:
                                                  type: object
                                                  properties:
                                                    matchLabels:
                                                      type: object
                                                      description: >-
                                                        matchLabels is a map of {key,value}
                                                        pairs. A single {key,value} in the
                                                        matchLabels map is equivalent to an
                                                        element of matchExpressions, whose key
                                                        field is "key", the operator is "In",
                                                        and the values array contains only
                                                        "value". The requirements are ANDed.
                                                      additionalProperties:
                                                        type: string
                                                    matchExpressions:
                                                      type: array
                                                      items:
                                                        type: object
                                                        required:
                                                          - key
                                                          - operator
                                                        properties:
                                                          key:
                                                            type: string
                                                            description: >-
                                                              key is the label key that the selector
                                                              applies to.
                                                          values:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              values is an array of string values. If
                                                              the operator is In or NotIn, the values
                                                              array must be non-empty. If the operator
                                                              is Exists or DoesNotExist, the values
                                                              array must be empty. This array is
                                                              replaced during a strategic merge patch.
                                                          operator:
                                                            type: string
                                                            description: >-
                                                              operator represents a key's relationship
                                                              to a set of values. Valid operators are
                                                              In, NotIn, Exists and DoesNotExist.
                                                        description: >-
                                                          A label selector requirement is a
                                                          selector that contains values, a key,
                                                          and an operator that relates the key and
                                                          values.
                                                      description: >-
                                                        matchExpressions is a list of label
                                                        selector requirements. The requirements
                                                        are ANDed.
                                                  description: >-
                                                    A label query over a set of resources,
                                                    in this case pods.
                                              description: >-
                                                Required. A pod affinity term,
                                                associated with the corresponding
                                                weight.
                                          description: >-
                                            The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred
                                            node(s)
                                        description: >-
                                          The scheduler will prefer to schedule
                                          pods to nodes that satisfy the affinity
                                          expressions specified by this field, but
                                          it may choose a node that violates one
                                          or more of the expressions. The node
                                          that is most preferred is the one with
                                          the greatest sum of weights, i.e. for
                                          each node that meets all of the
                                          scheduling requirements (resource
                                          request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a
                                          sum by iterating through the elements of
                                          this field and adding "weight" to the
                                          sum if the node has pods which matches
                                          the corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the
                                          most preferred.
                                    description: >-
                                      Describes pod affinity scheduling rules
                                      (e.g. co-locate this pod in the same node,
                                      zone, etc. as some other pod(s)).
                                  nodeAffinity:
                                    type: object
                                    properties:
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        type: object
                                        required:
                                          - nodeSelectorTerms
                                        properties:
                                          nodeSelectorTerms:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                matchFields:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        type: string
                                                        description: >-
                                                          The label key that the selector applies
                                                          to.
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          An array of string values. If the
                                                          operator is In or NotIn, the values
                                                          array must be non-empty. If the operator
                                                          is Exists or DoesNotExist, the values
                                                          array must be empty. If the operator is
                                                          Gt or Lt, the values array must have a
                                                          single element, which will be
                                                          interpreted as an integer. This array is
                                                          replaced during a strategic merge patch.
                                                      operator:
                                                        type: string
                                                        description: >-
                                                          Represents a key's relationship to a set
                                                          of values. Valid operators are In,
                                                          NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    description: >-
                                                      A node selector requirement is a
                                                      selector that contains values, a key,
                                                      and an operator that relates the key and
                                                      values.
                                                  description: >-
                                                    A list of node selector requirements by
                                                    node's fields.
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        type: string
                                                        description: >-
                                                          The label key that the selector applies
                                                          to.
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          An array of string values. If the
                                                          operator is In or NotIn, the values
                                                          array must be non-empty. If the operator
                                                          is Exists or DoesNotExist, the values
                                                          array must be empty. If the operator is
                                                          Gt or Lt, the values array must have a
                                                          single element, which will be
                                                          interpreted as an integer. This array is
                                                          replaced during a strategic merge patch.
                                                      operator:
                                                        type: string
                                                        description: >-
                                                          Represents a key's relationship to a set
                                                          of values. Valid operators are In,
                                                          NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    description: >-
                                                      A node selector requirement is a
                                                      selector that contains values, a key,
                                                      and an operator that relates the key and
                                                      values.
                                                  description: >-
                                                    A list of node selector requirements by
                                                    node's labels.
                                              description: >-
                                                A null or empty node selector term
                                                matches no objects. The requirements of
                                                them are ANDed. The TopologySelectorTerm
                                                type implements a subset of the
                                                NodeSelectorTerm.
                                            description: >-
                                              Required. A list of node selector terms.
                                              The terms are ORed.
                                        description: >-
                                          If the affinity requirements specified
                                          by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the affinity requirements
                                          specified by this field cease to be met
                                          at some point during pod execution (e.g.
                                          due to an update), the system may or may
                                          not try to eventually evict the pod from
                                          its node.
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - preference
                                            - weight
                                          properties:
                                            weight:
                                              type: integer
                                              format: int32
                                              description: >-
                                                Weight associated with matching the
                                                corresponding nodeSelectorTerm, in the
                                                range 1-100.
                                            preference:
                                              type: object
                                              properties:
                                                matchFields:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        type: string
                                                        description: >-
                                                          The label key that the selector applies
                                                          to.
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          An array of string values. If the
                                                          operator is In or NotIn, the values
                                                          array must be non-empty. If the operator
                                                          is Exists or DoesNotExist, the values
                                                          array must be empty. If the operator is
                                                          Gt or Lt, the values array must have a
                                                          single element, which will be
                                                          interpreted as an integer. This array is
                                                          replaced during a strategic merge patch.
                                                      operator:
                                                        type: string
                                                        description: >-
                                                          Represents a key's relationship to a set
                                                          of values. Valid operators are In,
                                                          NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    description: >-
                                                      A node selector requirement is a
                                                      selector that contains values, a key,
                                                      and an operator that relates the key and
                                                      values.
                                                  description: >-
                                                    A list of node selector requirements by
                                                    node's fields.
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        type: string
                                                        description: >-
                                                          The label key that the selector applies
                                                          to.
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          An array of string values. If the
                                                          operator is In or NotIn, the values
                                                          array must be non-empty. If the operator
                                                          is Exists or DoesNotExist, the values
                                                          array must be empty. If the operator is
                                                          Gt or Lt, the values array must have a
                                                          single element, which will be
                                                          interpreted as an integer. This array is
                                                          replaced during a strategic merge patch.
                                                      operator:
                                                        type: string
                                                        description: >-
                                                          Represents a key's relationship to a set
                                                          of values. Valid operators are In,
                                                          NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    description: >-
                                                      A node selector requirement is a
                                                      selector that contains values, a key,
                                                      and an operator that relates the key and
                                                      values.
                                                  description: >-
                                                    A list of node selector requirements by
                                                    node's labels.
                                              description: >-
                                                A node selector term, associated with
                                                the corresponding weight.
                                          description: >-
                                            An empty preferred scheduling term
                                            matches all objects with implicit weight
                                            0 (i.e. it's a no-op). A null preferred
                                            scheduling term matches no objects (i.e.
                                            is also a no-op).
                                        description: >-
                                          The scheduler will prefer to schedule
                                          pods to nodes that satisfy the affinity
                                          expressions specified by this field, but
                                          it may choose a node that violates one
                                          or more of the expressions. The node
                                          that is most preferred is the one with
                                          the greatest sum of weights, i.e. for
                                          each node that meets all of the
                                          scheduling requirements (resource
                                          request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a
                                          sum by iterating through the elements of
                                          this field and adding "weight" to the
                                          sum if the node matches the
                                          corresponding matchExpressions; the
                                          node(s) with the highest sum are the
                                          most preferred.
                                    description: >-
                                      Describes node affinity scheduling rules
                                      for the pod.
                                  podAntiAffinity:
                                    type: object
                                    properties:
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - topologyKey
                                          properties:
                                            namespaces:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                namespaces specifies which namespaces
                                                the labelSelector applies to (matches
                                                against); null or empty list means "this
                                                pod's namespace"
                                            topologyKey:
                                              type: string
                                              description: >-
                                                This pod should be co-located (affinity)
                                                or not co-located (anti-affinity) with
                                                the pods matching the labelSelector in
                                                the specified namespaces, where
                                                co-located is defined as running on a
                                                node whose value of the label with key
                                                topologyKey matches that of any node on
                                                which any of the selected pods is
                                                running. Empty topologyKey is not
                                                allowed.
                                            labelSelector:
                                              type: object
                                              properties:
                                                matchLabels:
                                                  type: object
                                                  description: >-
                                                    matchLabels is a map of {key,value}
                                                    pairs. A single {key,value} in the
                                                    matchLabels map is equivalent to an
                                                    element of matchExpressions, whose key
                                                    field is "key", the operator is "In",
                                                    and the values array contains only
                                                    "value". The requirements are ANDed.
                                                  additionalProperties:
                                                    type: string
                                                matchExpressions:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - key
                                                      - operator
                                                    properties:
                                                      key:
                                                        type: string
                                                        description: >-
                                                          key is the label key that the selector
                                                          applies to.
                                                      values:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          values is an array of string values. If
                                                          the operator is In or NotIn, the values
                                                          array must be non-empty. If the operator
                                                          is Exists or DoesNotExist, the values
                                                          array must be empty. This array is
                                                          replaced during a strategic merge patch.
                                                      operator:
                                                        type: string
                                                        description: >-
                                                          operator represents a key's relationship
                                                          to a set of values. Valid operators are
                                                          In, NotIn, Exists and DoesNotExist.
                                                    description: >-
                                                      A label selector requirement is a
                                                      selector that contains values, a key,
                                                      and an operator that relates the key and
                                                      values.
                                                  description: >-
                                                    matchExpressions is a list of label
                                                    selector requirements. The requirements
                                                    are ANDed.
                                              description: >-
                                                A label query over a set of resources,
                                                in this case pods.
                                          description: >-
                                            Defines a set of pods (namely those
                                            matching the labelSelector relative to
                                            the given namespace(s)) that this pod
                                            should be co-located (affinity) or not
                                            co-located (anti-affinity) with, where
                                            co-located is defined as running on a
                                            node whose value of the label with key
                                            <topologyKey> matches that of any node
                                            on which a pod of the set of pods is
                                            running
                                        description: >-
                                          If the anti-affinity requirements
                                          specified by this field are not met at
                                          scheduling time, the pod will not be
                                          scheduled onto the node. If the
                                          anti-affinity requirements specified by
                                          this field cease to be met at some point
                                          during pod execution (e.g. due to a pod
                                          label update), the system may or may not
                                          try to eventually evict the pod from its
                                          node. When there are multiple elements,
                                          the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e.
                                          all terms must be satisfied.
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - podAffinityTerm
                                            - weight
                                          properties:
                                            weight:
                                              type: integer
                                              format: int32
                                              description: >-
                                                weight associated with matching the
                                                corresponding podAffinityTerm, in the
                                                range 1-100.
                                            podAffinityTerm:
                                              type: object
                                              required:
                                                - topologyKey
                                              properties:
                                                namespaces:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    namespaces specifies which namespaces
                                                    the labelSelector applies to (matches
                                                    against); null or empty list means "this
                                                    pod's namespace"
                                                topologyKey:
                                                  type: string
                                                  description: >-
                                                    This pod should be co-located (affinity)
                                                    or not co-located (anti-affinity) with
                                                    the pods matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running on a
                                                    node whose value of the label with key
                                                    topologyKey matches that of any node on
                                                    which any of the selected pods is
                                                    running. Empty topologyKey is not
                                                    allowed.
                                                labelSelector:
                                                  type: object
                                                  properties:
                                                    matchLabels:
                                                      type: object
                                                      description: >-
                                                        matchLabels is a map of {key,value}
                                                        pairs. A single {key,value} in the
                                                        matchLabels map is equivalent to an
                                                        element of matchExpressions, whose key
                                                        field is "key", the operator is "In",
                                                        and the values array contains only
                                                        "value". The requirements are ANDed.
                                                      additionalProperties:
                                                        type: string
                                                    matchExpressions:
                                                      type: array
                                                      items:
                                                        type: object
                                                        required:
                                                          - key
                                                          - operator
                                                        properties:
                                                          key:
                                                            type: string
                                                            description: >-
                                                              key is the label key that the selector
                                                              applies to.
                                                          values:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              values is an array of string values. If
                                                              the operator is In or NotIn, the values
                                                              array must be non-empty. If the operator
                                                              is Exists or DoesNotExist, the values
                                                              array must be empty. This array is
                                                              replaced during a strategic merge patch.
                                                          operator:
                                                            type: string
                                                            description: >-
                                                              operator represents a key's relationship
                                                              to a set of values. Valid operators are
                                                              In, NotIn, Exists and DoesNotExist.
                                                        description: >-
                                                          A label selector requirement is a
                                                          selector that contains values, a key,
                                                          and an operator that relates the key and
                                                          values.
                                                      description: >-
                                                        matchExpressions is a list of label
                                                        selector requirements. The requirements
                                                        are ANDed.
                                                  description: >-
                                                    A label query over a set of resources,
                                                    in this case pods.
                                              description: >-
                                                Required. A pod affinity term,
                                                associated with the corresponding
                                                weight.
                                          description: >-
                                            The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred
                                            node(s)
                                        description: >-
                                          The scheduler will prefer to schedule
                                          pods to nodes that satisfy the
                                          anti-affinity expressions specified by
                                          this field, but it may choose a node
                                          that violates one or more of the
                                          expressions. The node that is most
                                          preferred is the one with the greatest
                                          sum of weights, i.e. for each node that
                                          meets all of the scheduling requirements
                                          (resource request,
                                          requiredDuringScheduling anti-affinity
                                          expressions, etc.), compute a sum by
                                          iterating through the elements of this
                                          field and adding "weight" to the sum if
                                          the node has pods which matches the
                                          corresponding podAffinityTerm; the
                                          node(s) with the highest sum are the
                                          most preferred.
                                    description: >-
                                      Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the
                                      same node, zone, etc. as some other
                                      pod(s)).
                                description: 'If specified, the pod''s scheduling constraints'
                              hostname:
                                type: string
                                description: >-
                                  Specifies the hostname of the Pod If not
                                  specified, the pod's hostname will be set to a
                                  system-defined value.
                              nodeName:
                                type: string
                                description: >-
                                  NodeName is a request to schedule this pod
                                  onto a specific node. If it is non-empty, the
                                  scheduler simply schedules this pod onto that
                                  node, assuming that it fits resource
                                  requirements.
                              overhead:
                                type: object
                                description: >-
                                  Overhead represents the resource overhead
                                  associated with running a pod for a given
                                  RuntimeClass. This field will be autopopulated
                                  at admission time by the RuntimeClass
                                  admission controller. If the RuntimeClass
                                  admission controller is enabled, overhead must
                                  not be set in Pod create requests. The
                                  RuntimeClass admission controller will reject
                                  Pod create requests which have the overhead
                                  already set. If RuntimeClass is configured and
                                  selected in the PodSpec, Overhead will be set
                                  to the value defined in the corresponding
                                  RuntimeClass, otherwise it will remain unset
                                  and treated as zero. More info:
                                  https://git.k8s.io/enhancements/keps/sig-node/20190226-pod-overhead.md
                                  This field is alpha-level as of Kubernetes
                                  v1.16, and is only honored by servers that
                                  enable the PodOverhead feature.
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: >-
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              priority:
                                type: integer
                                format: int32
                                description: >-
                                  The priority value. Various system components
                                  use this field to find the priority of the
                                  pod. When Priority Admission Controller is
                                  enabled, it prevents users from setting this
                                  field. The admission controller populates this
                                  field from PriorityClassName. The higher the
                                  value, the higher the priority.
                              dnsConfig:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                          description: Required.
                                        value:
                                          type: string
                                      description: >-
                                        PodDNSConfigOption defines DNS resolver
                                        options of a pod.
                                    description: >-
                                      A list of DNS resolver options. This will
                                      be merged with the base options generated
                                      from DNSPolicy. Duplicated entries will be
                                      removed. Resolution options given in
                                      Options will override those that appear in
                                      the base DNSPolicy.
                                  searches:
                                    type: array
                                    items:
                                      type: string
                                    description: >-
                                      A list of DNS search domains for host-name
                                      lookup. This will be appended to the base
                                      search paths generated from DNSPolicy.
                                      Duplicated search paths will be removed.
                                  nameservers:
                                    type: array
                                    items:
                                      type: string
                                    description: >-
                                      A list of DNS name server IP addresses.
                                      This will be appended to the base
                                      nameservers generated from DNSPolicy.
                                      Duplicated nameservers will be removed.
                                description: >-
                                  Specifies the DNS parameters of a pod.
                                  Parameters specified here will be merged to
                                  the generated DNS configuration based on
                                  DNSPolicy.
                              dnsPolicy:
                                type: string
                                description: >-
                                  Set DNS policy for the pod. Defaults to
                                  "ClusterFirst". Valid values are
                                  'ClusterFirstWithHostNet', 'ClusterFirst',
                                  'Default' or 'None'. DNS parameters given in
                                  DNSConfig will be merged with the policy
                                  selected with DNSPolicy. To have DNS options
                                  set along with hostNetwork, you have to
                                  specify DNS policy explicitly to
                                  'ClusterFirstWithHostNet'.
                              subdomain:
                                type: string
                                description: >-
                                  If specified, the fully qualified Pod hostname
                                  will be "<hostname>.<subdomain>.<pod
                                  namespace>.svc.<cluster domain>". If not
                                  specified, the pod will not have a domainname
                                  at all.
                              containers:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    env:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - name
                                        properties:
                                          name:
                                            type: string
                                            description: >-
                                              Name of the environment variable. Must
                                              be a C_IDENTIFIER.
                                          value:
                                            type: string
                                            description: >-
                                              Variable references $(VAR_NAME) are
                                              expanded using the previous defined
                                              environment variables in the container
                                              and any service environment variables.
                                              If a variable cannot be resolved, the
                                              reference in the input string will be
                                              unchanged. The $(VAR_NAME) syntax can be
                                              escaped with a double $$, ie:
                                              $$(VAR_NAME). Escaped references will
                                              never be expanded, regardless of whether
                                              the variable exists or not. Defaults to
                                              "".
                                          valueFrom:
                                            type: object
                                            properties:
                                              fieldRef:
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  fieldPath:
                                                    type: string
                                                    description: >-
                                                      Path of the field to select in the
                                                      specified API version.
                                                  apiVersion:
                                                    type: string
                                                    description: >-
                                                      Version of the schema the FieldPath is
                                                      written in terms of, defaults to "v1".
                                                description: >-
                                                  Selects a field of the pod: supports
                                                  metadata.name, metadata.namespace,
                                                  `metadata.labels['<KEY>']`,
                                                  `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName,
                                                  status.hostIP, status.podIP,
                                                  status.podIPs.
                                              secretKeyRef:
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    type: string
                                                    description: >-
                                                      The key of the secret to select from. 
                                                      Must be a valid secret key.
                                                  name:
                                                    type: string
                                                    description: >-
                                                      Name of the referent. More info:
                                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?
                                                  optional:
                                                    type: boolean
                                                    description: >-
                                                      Specify whether the Secret or its key
                                                      must be defined
                                                description: >-
                                                  Selects a key of a secret in the pod's
                                                  namespace
                                              configMapKeyRef:
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    type: string
                                                    description: The key to select.
                                                  name:
                                                    type: string
                                                    description: >-
                                                      Name of the referent. More info:
                                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?
                                                  optional:
                                                    type: boolean
                                                    description: >-
                                                      Specify whether the ConfigMap or its key
                                                      must be defined
                                                description: Selects a key of a ConfigMap.
                                              resourceFieldRef:
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  divisor:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    pattern: >-
                                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    description: >-
                                                      Specifies the output format of the
                                                      exposed resources, defaults to "1"
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    type: string
                                                    description: 'Required: resource to select'
                                                  containerName:
                                                    type: string
                                                    description: >-
                                                      Container name: required for volumes,
                                                      optional for env vars
                                                description: >-
                                                  Selects a resource of the container:
                                                  only resources limits and requests
                                                  (limits.cpu, limits.memory,
                                                  limits.ephemeral-storage, requests.cpu,
                                                  requests.memory and
                                                  requests.ephemeral-storage) are
                                                  currently supported.
                                            description: >-
                                              Source for the environment variable's
                                              value. Cannot be used if value is not
                                              empty.
                                        description: >-
                                          EnvVar represents an environment
                                          variable present in a Container.
                                      description: >-
                                        List of environment variables to set in
                                        the container. Cannot be updated.
                                    tty:
                                      type: boolean
                                      description: >-
                                        Whether this container should allocate a
                                        TTY for itself, also requires 'stdin' to
                                        be true. Default is false.
                                    args:
                                      type: array
                                      items:
                                        type: string
                                      description: >-
                                        Arguments to the entrypoint. The docker
                                        image's CMD is used if this is not
                                        provided. Variable references
                                        $(VAR_NAME) are expanded using the
                                        container's environment. If a variable
                                        cannot be resolved, the reference in the
                                        input string will be unchanged. The
                                        $(VAR_NAME) syntax can be escaped with a
                                        double $$, ie: $$(VAR_NAME). Escaped
                                        references will never be expanded,
                                        regardless of whether the variable
                                        exists or not. Cannot be updated. More
                                        info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                    name:
                                      type: string
                                      description: >-
                                        Name of the container specified as a
                                        DNS_LABEL. Each container in a pod must
                                        have a unique name (DNS_LABEL). Cannot
                                        be updated.
                                    image:
                                      type: string
                                      description: >-
                                        Docker image name. More info:
                                        https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher
                                        level config management to default or
                                        override container images in workload
                                        controllers like Deployments and
                                        StatefulSets.
                                    ports:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - containerPort
                                        properties:
                                          name:
                                            type: string
                                            description: >-
                                              If specified, this must be an
                                              IANA_SVC_NAME and unique within the pod.
                                              Each named port in a pod must have a
                                              unique name. Name for the port that can
                                              be referred to by services.
                                          hostIP:
                                            type: string
                                            description: >-
                                              What host IP to bind the external port
                                              to.
                                          hostPort:
                                            type: integer
                                            format: int32
                                            description: >-
                                              Number of port to expose on the host. If
                                              specified, this must be a valid port
                                              number, 0 < x < 65536. If HostNetwork is
                                              specified, this must match
                                              ContainerPort. Most containers do not
                                              need this.
                                          protocol:
                                            type: string
                                            default: TCP
                                            description: >-
                                              Protocol for port. Must be UDP, TCP, or
                                              SCTP. Defaults to "TCP".
                                          containerPort:
                                            type: integer
                                            format: int32
                                            description: >-
                                              Number of port to expose on the pod's IP
                                              address. This must be a valid port
                                              number, 0 < x < 65536.
                                        description: >-
                                          ContainerPort represents a network port
                                          in a single container.
                                      description: >-
                                        List of ports to expose from the
                                        container. Exposing a port here gives
                                        the system additional information about
                                        the network connections a container
                                        uses, but is primarily informational.
                                        Not specifying a port here DOES NOT
                                        prevent that port from being exposed.
                                        Any port which is listening on the
                                        default "0.0.0.0" address inside a
                                        container will be accessible from the
                                        network. Cannot be updated.
                                      x-kubernetes-list-type: map
                                      x-kubernetes-list-map-keys:
                                        - containerPort
                                        - protocol
                                    stdin:
                                      type: boolean
                                      description: >-
                                        Whether this container should allocate a
                                        buffer for stdin in the container
                                        runtime. If this is not set, reads from
                                        stdin in the container will always
                                        result in EOF. Default is false.
                                    command:
                                      type: array
                                      items:
                                        type: string
                                      description: >-
                                        Entrypoint array. Not executed within a
                                        shell. The docker image's ENTRYPOINT is
                                        used if this is not provided. Variable
                                        references $(VAR_NAME) are expanded
                                        using the container's environment. If a
                                        variable cannot be resolved, the
                                        reference in the input string will be
                                        unchanged. The $(VAR_NAME) syntax can be
                                        escaped with a double $$, ie:
                                        $$(VAR_NAME). Escaped references will
                                        never be expanded, regardless of whether
                                        the variable exists or not. Cannot be
                                        updated. More info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                    envFrom:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          prefix:
                                            type: string
                                            description: >-
                                              An optional identifier to prepend to
                                              each key in the ConfigMap. Must be a
                                              C_IDENTIFIER.
                                          secretRef:
                                            type: object
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  Name of the referent. More info:
                                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields.
                                                  apiVersion, kind, uid?
                                              optional:
                                                type: boolean
                                                description: >-
                                                  Specify whether the Secret must be
                                                  defined
                                            description: The Secret to select from
                                          configMapRef:
                                            type: object
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  Name of the referent. More info:
                                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields.
                                                  apiVersion, kind, uid?
                                              optional:
                                                type: boolean
                                                description: >-
                                                  Specify whether the ConfigMap must be
                                                  defined
                                            description: The ConfigMap to select from
                                        description: >-
                                          EnvFromSource represents the source of a
                                          set of ConfigMaps
                                      description: >-
                                        List of sources to populate environment
                                        variables in the container. The keys
                                        defined within a source must be a
                                        C_IDENTIFIER. All invalid keys will be
                                        reported as an event when the container
                                        is starting. When a key exists in
                                        multiple sources, the value associated
                                        with the last source will take
                                        precedence. Values defined by an Env
                                        with a duplicate key will take
                                        precedence. Cannot be updated.
                                    lifecycle:
                                      type: object
                                      properties:
                                        preStop:
                                          type: object
                                          properties:
                                            exec:
                                              type: object
                                              properties:
                                                command:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    Command is the command line to execute
                                                    inside the container, the working
                                                    directory for the command  is root ('/')
                                                    in the container's filesystem. The
                                                    command is simply exec'd, it is not run
                                                    inside a shell, so traditional shell
                                                    instructions ('|', etc) won't work. To
                                                    use a shell, you need to explicitly call
                                                    out to that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero is
                                                    unhealthy.
                                              description: >-
                                                One and only one of the following should
                                                be specified. Exec specifies the action
                                                to take.
                                            httpGet:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Host name to connect to, defaults to the
                                                    pod IP. You probably want to set "Host"
                                                    in httpHeaders instead.
                                                path:
                                                  type: string
                                                  description: Path to access on the HTTP server.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Name or number of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  type: string
                                                  description: >-
                                                    Scheme to use for connecting to the
                                                    host. Defaults to HTTP.
                                                httpHeaders:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        type: string
                                                        description: The header field name
                                                      value:
                                                        type: string
                                                        description: The header field value
                                                    description: >-
                                                      HTTPHeader describes a custom header to
                                                      be used in HTTP probes
                                                  description: >-
                                                    Custom headers to set in the request.
                                                    HTTP allows repeated headers.
                                              description: >-
                                                HTTPGet specifies the http request to
                                                perform.
                                            tcpSocket:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Optional: Host name to connect to,
                                                    defaults to the pod IP.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Number or name of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              description: >-
                                                TCPSocket specifies an action involving
                                                a TCP port. TCP hooks not yet supported
                                                TODO: implement a realistic TCP
                                                lifecycle hook
                                          description: >-
                                            PreStop is called immediately before a
                                            container is terminated due to an API
                                            request or management event such as
                                            liveness/startup probe failure,
                                            preemption, resource contention, etc.
                                            The handler is not called if the
                                            container crashes or exits. The reason
                                            for termination is passed to the
                                            handler. The Pod's termination grace
                                            period countdown begins before the
                                            PreStop hooked is executed. Regardless
                                            of the outcome of the handler, the
                                            container will eventually terminate
                                            within the Pod's termination grace
                                            period. Other management of the
                                            container blocks until the hook
                                            completes or until the termination grace
                                            period is reached. More info:
                                            https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                        postStart:
                                          type: object
                                          properties:
                                            exec:
                                              type: object
                                              properties:
                                                command:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    Command is the command line to execute
                                                    inside the container, the working
                                                    directory for the command  is root ('/')
                                                    in the container's filesystem. The
                                                    command is simply exec'd, it is not run
                                                    inside a shell, so traditional shell
                                                    instructions ('|', etc) won't work. To
                                                    use a shell, you need to explicitly call
                                                    out to that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero is
                                                    unhealthy.
                                              description: >-
                                                One and only one of the following should
                                                be specified. Exec specifies the action
                                                to take.
                                            httpGet:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Host name to connect to, defaults to the
                                                    pod IP. You probably want to set "Host"
                                                    in httpHeaders instead.
                                                path:
                                                  type: string
                                                  description: Path to access on the HTTP server.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Name or number of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  type: string
                                                  description: >-
                                                    Scheme to use for connecting to the
                                                    host. Defaults to HTTP.
                                                httpHeaders:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        type: string
                                                        description: The header field name
                                                      value:
                                                        type: string
                                                        description: The header field value
                                                    description: >-
                                                      HTTPHeader describes a custom header to
                                                      be used in HTTP probes
                                                  description: >-
                                                    Custom headers to set in the request.
                                                    HTTP allows repeated headers.
                                              description: >-
                                                HTTPGet specifies the http request to
                                                perform.
                                            tcpSocket:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Optional: Host name to connect to,
                                                    defaults to the pod IP.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Number or name of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              description: >-
                                                TCPSocket specifies an action involving
                                                a TCP port. TCP hooks not yet supported
                                                TODO: implement a realistic TCP
                                                lifecycle hook
                                          description: >-
                                            PostStart is called immediately after a
                                            container is created. If the handler
                                            fails, the container is terminated and
                                            restarted according to its restart
                                            policy. Other management of the
                                            container blocks until the hook
                                            completes. More info:
                                            https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      description: >-
                                        Actions that the management system
                                        should take in response to container
                                        lifecycle events. Cannot be updated.
                                    resources:
                                      type: object
                                      properties:
                                        limits:
                                          type: object
                                          description: >-
                                            Limits describes the maximum amount of
                                            compute resources allowed. More info:
                                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: >-
                                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                        requests:
                                          type: object
                                          description: >-
                                            Requests describes the minimum amount of
                                            compute resources required. If Requests
                                            is omitted for a container, it defaults
                                            to Limits if that is explicitly
                                            specified, otherwise to an
                                            implementation-defined value. More info:
                                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: >-
                                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                      description: >-
                                        Compute Resources required by this
                                        container. Cannot be updated. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                    stdinOnce:
                                      type: boolean
                                      description: >-
                                        Whether the container runtime should
                                        close the stdin channel after it has
                                        been opened by a single attach. When
                                        stdin is true the stdin stream will
                                        remain open across multiple attach
                                        sessions. If stdinOnce is set to true,
                                        stdin is opened on container start, is
                                        empty until the first client attaches to
                                        stdin, and then remains open and accepts
                                        data until the client disconnects, at
                                        which time stdin is closed and remains
                                        closed until the container is restarted.
                                        If this flag is false, a container
                                        processes that reads from stdin will
                                        never receive an EOF. Default is false
                                    workingDir:
                                      type: string
                                      description: >-
                                        Container's working directory. If not
                                        specified, the container runtime's
                                        default will be used, which might be
                                        configured in the container image.
                                        Cannot be updated.
                                    startupProbe:
                                      type: object
                                      properties:
                                        exec:
                                          type: object
                                          properties:
                                            command:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                Command is the command line to execute
                                                inside the container, the working
                                                directory for the command  is root ('/')
                                                in the container's filesystem. The
                                                command is simply exec'd, it is not run
                                                inside a shell, so traditional shell
                                                instructions ('|', etc) won't work. To
                                                use a shell, you need to explicitly call
                                                out to that shell. Exit status of 0 is
                                                treated as live/healthy and non-zero is
                                                unhealthy.
                                          description: >-
                                            One and only one of the following should
                                            be specified. Exec specifies the action
                                            to take.
                                        httpGet:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Host name to connect to, defaults to the
                                                pod IP. You probably want to set "Host"
                                                in httpHeaders instead.
                                            path:
                                              type: string
                                              description: Path to access on the HTTP server.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Name or number of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              type: string
                                              description: >-
                                                Scheme to use for connecting to the
                                                host. Defaults to HTTP.
                                            httpHeaders:
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    type: string
                                                    description: The header field name
                                                  value:
                                                    type: string
                                                    description: The header field value
                                                description: >-
                                                  HTTPHeader describes a custom header to
                                                  be used in HTTP probes
                                              description: >-
                                                Custom headers to set in the request.
                                                HTTP allows repeated headers.
                                          description: >-
                                            HTTPGet specifies the http request to
                                            perform.
                                        tcpSocket:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Optional: Host name to connect to,
                                                defaults to the pod IP.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Number or name of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          description: >-
                                            TCPSocket specifies an action involving
                                            a TCP port. TCP hooks not yet supported
                                            TODO: implement a realistic TCP
                                            lifecycle hook
                                        periodSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            How often (in seconds) to perform the
                                            probe. Default to 10 seconds. Minimum
                                            value is 1.
                                        timeoutSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after which the probe
                                            times out. Defaults to 1 second. Minimum
                                            value is 1. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        failureThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive failures for the
                                            probe to be considered failed after
                                            having succeeded. Defaults to 3. Minimum
                                            value is 1.
                                        successThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive successes for the
                                            probe to be considered successful after
                                            having failed. Defaults to 1. Must be 1
                                            for liveness and startup. Minimum value
                                            is 1.
                                        initialDelaySeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after the container
                                            has started before liveness probes are
                                            initiated. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      description: >-
                                        StartupProbe indicates that the Pod has
                                        successfully initialized. If specified,
                                        no other probes are executed until this
                                        completes successfully. If this probe
                                        fails, the Pod will be restarted, just
                                        as if the livenessProbe failed. This can
                                        be used to provide different probe
                                        parameters at the beginning of a Pod's
                                        lifecycle, when it might take a long
                                        time to load data or warm a cache, than
                                        during steady-state operation. This
                                        cannot be updated. This is a beta
                                        feature enabled by the StartupProbe
                                        feature flag. More info:
                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                    volumeMounts:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - mountPath
                                          - name
                                        properties:
                                          name:
                                            type: string
                                            description: This must match the Name of a Volume.
                                          subPath:
                                            type: string
                                            description: >-
                                              Path within the volume from which the
                                              container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                          readOnly:
                                            type: boolean
                                            description: >-
                                              Mounted read-only if true, read-write
                                              otherwise (false or unspecified).
                                              Defaults to false.
                                          mountPath:
                                            type: string
                                            description: >-
                                              Path within the container at which the
                                              volume should be mounted.  Must not
                                              contain ':'.
                                          subPathExpr:
                                            type: string
                                            description: >-
                                              Expanded path within the volume from
                                              which the container's volume should be
                                              mounted. Behaves similarly to SubPath
                                              but environment variable references
                                              $(VAR_NAME) are expanded using the
                                              container's environment. Defaults to ""
                                              (volume's root). SubPathExpr and SubPath
                                              are mutually exclusive.
                                          mountPropagation:
                                            type: string
                                            description: >-
                                              mountPropagation determines how mounts
                                              are propagated from the host to
                                              container and the other way around. When
                                              not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                        description: >-
                                          VolumeMount describes a mounting of a
                                          Volume within a container.
                                      description: >-
                                        Pod volumes to mount into the
                                        container's filesystem. Cannot be
                                        updated.
                                    livenessProbe:
                                      type: object
                                      properties:
                                        exec:
                                          type: object
                                          properties:
                                            command:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                Command is the command line to execute
                                                inside the container, the working
                                                directory for the command  is root ('/')
                                                in the container's filesystem. The
                                                command is simply exec'd, it is not run
                                                inside a shell, so traditional shell
                                                instructions ('|', etc) won't work. To
                                                use a shell, you need to explicitly call
                                                out to that shell. Exit status of 0 is
                                                treated as live/healthy and non-zero is
                                                unhealthy.
                                          description: >-
                                            One and only one of the following should
                                            be specified. Exec specifies the action
                                            to take.
                                        httpGet:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Host name to connect to, defaults to the
                                                pod IP. You probably want to set "Host"
                                                in httpHeaders instead.
                                            path:
                                              type: string
                                              description: Path to access on the HTTP server.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Name or number of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              type: string
                                              description: >-
                                                Scheme to use for connecting to the
                                                host. Defaults to HTTP.
                                            httpHeaders:
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    type: string
                                                    description: The header field name
                                                  value:
                                                    type: string
                                                    description: The header field value
                                                description: >-
                                                  HTTPHeader describes a custom header to
                                                  be used in HTTP probes
                                              description: >-
                                                Custom headers to set in the request.
                                                HTTP allows repeated headers.
                                          description: >-
                                            HTTPGet specifies the http request to
                                            perform.
                                        tcpSocket:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Optional: Host name to connect to,
                                                defaults to the pod IP.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Number or name of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          description: >-
                                            TCPSocket specifies an action involving
                                            a TCP port. TCP hooks not yet supported
                                            TODO: implement a realistic TCP
                                            lifecycle hook
                                        periodSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            How often (in seconds) to perform the
                                            probe. Default to 10 seconds. Minimum
                                            value is 1.
                                        timeoutSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after which the probe
                                            times out. Defaults to 1 second. Minimum
                                            value is 1. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        failureThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive failures for the
                                            probe to be considered failed after
                                            having succeeded. Defaults to 3. Minimum
                                            value is 1.
                                        successThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive successes for the
                                            probe to be considered successful after
                                            having failed. Defaults to 1. Must be 1
                                            for liveness and startup. Minimum value
                                            is 1.
                                        initialDelaySeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after the container
                                            has started before liveness probes are
                                            initiated. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      description: >-
                                        Periodic probe of container liveness.
                                        Container will be restarted if the probe
                                        fails. Cannot be updated. More info:
                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                    volumeDevices:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - devicePath
                                          - name
                                        properties:
                                          name:
                                            type: string
                                            description: >-
                                              name must match the name of a
                                              persistentVolumeClaim in the pod
                                          devicePath:
                                            type: string
                                            description: >-
                                              devicePath is the path inside of the
                                              container that the device will be mapped
                                              to.
                                        description: >-
                                          volumeDevice describes a mapping of a
                                          raw block device within a container.
                                      description: >-
                                        volumeDevices is the list of block
                                        devices to be used by the container.
                                    readinessProbe:
                                      type: object
                                      properties:
                                        exec:
                                          type: object
                                          properties:
                                            command:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                Command is the command line to execute
                                                inside the container, the working
                                                directory for the command  is root ('/')
                                                in the container's filesystem. The
                                                command is simply exec'd, it is not run
                                                inside a shell, so traditional shell
                                                instructions ('|', etc) won't work. To
                                                use a shell, you need to explicitly call
                                                out to that shell. Exit status of 0 is
                                                treated as live/healthy and non-zero is
                                                unhealthy.
                                          description: >-
                                            One and only one of the following should
                                            be specified. Exec specifies the action
                                            to take.
                                        httpGet:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Host name to connect to, defaults to the
                                                pod IP. You probably want to set "Host"
                                                in httpHeaders instead.
                                            path:
                                              type: string
                                              description: Path to access on the HTTP server.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Name or number of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              type: string
                                              description: >-
                                                Scheme to use for connecting to the
                                                host. Defaults to HTTP.
                                            httpHeaders:
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    type: string
                                                    description: The header field name
                                                  value:
                                                    type: string
                                                    description: The header field value
                                                description: >-
                                                  HTTPHeader describes a custom header to
                                                  be used in HTTP probes
                                              description: >-
                                                Custom headers to set in the request.
                                                HTTP allows repeated headers.
                                          description: >-
                                            HTTPGet specifies the http request to
                                            perform.
                                        tcpSocket:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Optional: Host name to connect to,
                                                defaults to the pod IP.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Number or name of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          description: >-
                                            TCPSocket specifies an action involving
                                            a TCP port. TCP hooks not yet supported
                                            TODO: implement a realistic TCP
                                            lifecycle hook
                                        periodSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            How often (in seconds) to perform the
                                            probe. Default to 10 seconds. Minimum
                                            value is 1.
                                        timeoutSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after which the probe
                                            times out. Defaults to 1 second. Minimum
                                            value is 1. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        failureThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive failures for the
                                            probe to be considered failed after
                                            having succeeded. Defaults to 3. Minimum
                                            value is 1.
                                        successThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive successes for the
                                            probe to be considered successful after
                                            having failed. Defaults to 1. Must be 1
                                            for liveness and startup. Minimum value
                                            is 1.
                                        initialDelaySeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after the container
                                            has started before liveness probes are
                                            initiated. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      description: >-
                                        Periodic probe of container service
                                        readiness. Container will be removed
                                        from service endpoints if the probe
                                        fails. Cannot be updated. More info:
                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                    imagePullPolicy:
                                      type: string
                                      description: >-
                                        Image pull policy. One of Always, Never,
                                        IfNotPresent. Defaults to Always if
                                        :latest tag is specified, or
                                        IfNotPresent otherwise. Cannot be
                                        updated. More info:
                                        https://kubernetes.io/docs/concepts/containers/images#updating-images
                                    securityContext:
                                      type: object
                                      properties:
                                        procMount:
                                          type: string
                                          description: >-
                                            procMount denotes the type of proc mount
                                            to use for the containers. The default
                                            is DefaultProcMount which uses the
                                            container runtime defaults for readonly
                                            paths and masked paths. This requires
                                            the ProcMountType feature flag to be
                                            enabled.
                                        runAsUser:
                                          type: integer
                                          format: int64
                                          description: >-
                                            The UID to run the entrypoint of the
                                            container process. Defaults to user
                                            specified in image metadata if
                                            unspecified. May also be set in
                                            PodSecurityContext.  If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                        privileged:
                                          type: boolean
                                          description: >-
                                            Run container in privileged mode.
                                            Processes in privileged containers are
                                            essentially equivalent to root on the
                                            host. Defaults to false.
                                        runAsGroup:
                                          type: integer
                                          format: int64
                                          description: >-
                                            The GID to run the entrypoint of the
                                            container process. Uses runtime default
                                            if unset. May also be set in
                                            PodSecurityContext.  If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                        capabilities:
                                          type: object
                                          properties:
                                            add:
                                              type: array
                                              items:
                                                type: string
                                                description: >-
                                                  Capability represent POSIX capabilities
                                                  type
                                              description: Added capabilities
                                            drop:
                                              type: array
                                              items:
                                                type: string
                                                description: >-
                                                  Capability represent POSIX capabilities
                                                  type
                                              description: Removed capabilities
                                          description: >-
                                            The capabilities to add/drop when
                                            running containers. Defaults to the
                                            default set of capabilities granted by
                                            the container runtime.
                                        runAsNonRoot:
                                          type: boolean
                                          description: >-
                                            Indicates that the container must run as
                                            a non-root user. If true, the Kubelet
                                            will validate the image at runtime to
                                            ensure that it does not run as UID 0
                                            (root) and fail to start the container
                                            if it does. If unset or false, no such
                                            validation will be performed. May also
                                            be set in PodSecurityContext.  If set in
                                            both SecurityContext and
                                            PodSecurityContext, the value specified
                                            in SecurityContext takes precedence.
                                        seLinuxOptions:
                                          type: object
                                          properties:
                                            role:
                                              type: string
                                              description: >-
                                                Role is a SELinux role label that
                                                applies to the container.
                                            type:
                                              type: string
                                              description: >-
                                                Type is a SELinux type label that
                                                applies to the container.
                                            user:
                                              type: string
                                              description: >-
                                                User is a SELinux user label that
                                                applies to the container.
                                            level:
                                              type: string
                                              description: >-
                                                Level is SELinux level label that
                                                applies to the container.
                                          description: >-
                                            The SELinux context to be applied to the
                                            container. If unspecified, the container
                                            runtime will allocate a random SELinux
                                            context for each container.  May also be
                                            set in PodSecurityContext.  If set in
                                            both SecurityContext and
                                            PodSecurityContext, the value specified
                                            in SecurityContext takes precedence.
                                        seccompProfile:
                                          type: object
                                          required:
                                            - type
                                          properties:
                                            type:
                                              type: string
                                              description: >-
                                                type indicates which kind of seccomp
                                                profile will be applied. Valid options
                                                are: 
                                                 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                                            localhostProfile:
                                              type: string
                                              description: >-
                                                localhostProfile indicates a profile
                                                defined in a file on the node should be
                                                used. The profile must be preconfigured
                                                on the node to work. Must be a
                                                descending path, relative to the
                                                kubelet's configured seccomp profile
                                                location. Must only be set if type is
                                                "Localhost".
                                          description: >-
                                            The seccomp options to use by this
                                            container. If seccomp options are
                                            provided at both the pod & container
                                            level, the container options override
                                            the pod options.
                                        windowsOptions:
                                          type: object
                                          properties:
                                            runAsUserName:
                                              type: string
                                              description: >-
                                                The UserName in Windows to run the
                                                entrypoint of the container process.
                                                Defaults to the user specified in image
                                                metadata if unspecified. May also be set
                                                in PodSecurityContext. If set in both
                                                SecurityContext and PodSecurityContext,
                                                the value specified in SecurityContext
                                                takes precedence.
                                            gmsaCredentialSpec:
                                              type: string
                                              description: >-
                                                GMSACredentialSpec is where the GMSA
                                                admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa)
                                                inlines the contents of the GMSA
                                                credential spec named by the
                                                GMSACredentialSpecName field.
                                            gmsaCredentialSpecName:
                                              type: string
                                              description: >-
                                                GMSACredentialSpecName is the name of
                                                the GMSA credential spec to use.
                                          description: >-
                                            The Windows specific settings applied to
                                            all containers. If unspecified, the
                                            options from the PodSecurityContext will
                                            be used. If set in both SecurityContext
                                            and PodSecurityContext, the value
                                            specified in SecurityContext takes
                                            precedence.
                                        readOnlyRootFilesystem:
                                          type: boolean
                                          description: >-
                                            Whether this container has a read-only
                                            root filesystem. Default is false.
                                        allowPrivilegeEscalation:
                                          type: boolean
                                          description: >-
                                            AllowPrivilegeEscalation controls
                                            whether a process can gain more
                                            privileges than its parent process. This
                                            bool directly controls if the
                                            no_new_privs flag will be set on the
                                            container process.
                                            AllowPrivilegeEscalation is true always
                                            when the container is: 1) run as
                                            Privileged 2) has CAP_SYS_ADMIN
                                      description: >-
                                        Security options the pod should run
                                        with. More info:
                                        https://kubernetes.io/docs/concepts/policy/security-context/
                                        More info:
                                        https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                    terminationMessagePath:
                                      type: string
                                      description: >-
                                        Optional: Path at which the file to
                                        which the container's termination
                                        message will be written is mounted into
                                        the container's filesystem. Message
                                        written is intended to be brief final
                                        status, such as an assertion failure
                                        message. Will be truncated by the node
                                        if greater than 4096 bytes. The total
                                        message length across all containers
                                        will be limited to 12kb. Defaults to
                                        /dev/termination-log. Cannot be updated.
                                    terminationMessagePolicy:
                                      type: string
                                      description: >-
                                        Indicate how the termination message
                                        should be populated. File will use the
                                        contents of terminationMessagePath to
                                        populate the container status message on
                                        both success and failure.
                                        FallbackToLogsOnError will use the last
                                        chunk of container log output if the
                                        termination message file is empty and
                                        the container exited with an error. The
                                        log output is limited to 2048 bytes or
                                        80 lines, whichever is smaller. Defaults
                                        to File. Cannot be updated.
                                  description: >-
                                    A single application container that you want
                                    to run within a pod.
                                description: >-
                                  List of containers belonging to the pod.
                                  Containers cannot currently be added or
                                  removed. There must be at least one container
                                  in a Pod. Cannot be updated.
                              hostAliases:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    ip:
                                      type: string
                                      description: IP address of the host file entry.
                                    hostnames:
                                      type: array
                                      items:
                                        type: string
                                      description: Hostnames for the above IP address.
                                  description: >-
                                    HostAlias holds the mapping between IP and
                                    hostnames that will be injected as an entry
                                    in the pod's hosts file.
                                description: >-
                                  HostAliases is an optional list of hosts and
                                  IPs that will be injected into the pod's hosts
                                  file if specified. This is only valid for
                                  non-hostNetwork pods.
                              hostNetwork:
                                type: boolean
                                description: >-
                                  Host networking requested for this pod. Use
                                  the host's network namespace. If this option
                                  is set, the ports that will be used must be
                                  specified. Default to false.
                              tolerations:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    key:
                                      type: string
                                      description: >-
                                        Key is the taint key that the toleration
                                        applies to. Empty means match all taint
                                        keys. If the key is empty, operator must
                                        be Exists; this combination means to
                                        match all values and all keys.
                                    value:
                                      type: string
                                      description: >-
                                        Value is the taint value the toleration
                                        matches to. If the operator is Exists,
                                        the value should be empty, otherwise
                                        just a regular string.
                                    effect:
                                      type: string
                                      description: >-
                                        Effect indicates the taint effect to
                                        match. Empty means match all taint
                                        effects. When specified, allowed values
                                        are NoSchedule, PreferNoSchedule and
                                        NoExecute.
                                    operator:
                                      type: string
                                      description: >-
                                        Operator represents a key's relationship
                                        to the value. Valid operators are Exists
                                        and Equal. Defaults to Equal. Exists is
                                        equivalent to wildcard for value, so
                                        that a pod can tolerate all taints of a
                                        particular category.
                                    tolerationSeconds:
                                      type: integer
                                      format: int64
                                      description: >-
                                        TolerationSeconds represents the period
                                        of time the toleration (which must be of
                                        effect NoExecute, otherwise this field
                                        is ignored) tolerates the taint. By
                                        default, it is not set, which means
                                        tolerate the taint forever (do not
                                        evict). Zero and negative values will be
                                        treated as 0 (evict immediately) by the
                                        system.
                                  description: >-
                                    The pod this Toleration is attached to
                                    tolerates any taint that matches the triple
                                    <key,value,effect> using the matching
                                    operator <operator>.
                                description: 'If specified, the pod''s tolerations.'
                              nodeSelector:
                                type: object
                                description: >-
                                  NodeSelector is a selector which must be true
                                  for the pod to fit on a node. Selector which
                                  must match a node's labels for the pod to be
                                  scheduled on that node. More info:
                                  https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                additionalProperties:
                                  type: string
                              restartPolicy:
                                type: string
                                description: >-
                                  Restart policy for all containers within the
                                  pod. One of Always, OnFailure, Never. Default
                                  to Always. More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
                              schedulerName:
                                type: string
                                description: >-
                                  If specified, the pod will be dispatched by
                                  specified scheduler. If not specified, the pod
                                  will be dispatched by default scheduler.
                              initContainers:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    env:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - name
                                        properties:
                                          name:
                                            type: string
                                            description: >-
                                              Name of the environment variable. Must
                                              be a C_IDENTIFIER.
                                          value:
                                            type: string
                                            description: >-
                                              Variable references $(VAR_NAME) are
                                              expanded using the previous defined
                                              environment variables in the container
                                              and any service environment variables.
                                              If a variable cannot be resolved, the
                                              reference in the input string will be
                                              unchanged. The $(VAR_NAME) syntax can be
                                              escaped with a double $$, ie:
                                              $$(VAR_NAME). Escaped references will
                                              never be expanded, regardless of whether
                                              the variable exists or not. Defaults to
                                              "".
                                          valueFrom:
                                            type: object
                                            properties:
                                              fieldRef:
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  fieldPath:
                                                    type: string
                                                    description: >-
                                                      Path of the field to select in the
                                                      specified API version.
                                                  apiVersion:
                                                    type: string
                                                    description: >-
                                                      Version of the schema the FieldPath is
                                                      written in terms of, defaults to "v1".
                                                description: >-
                                                  Selects a field of the pod: supports
                                                  metadata.name, metadata.namespace,
                                                  `metadata.labels['<KEY>']`,
                                                  `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName,
                                                  status.hostIP, status.podIP,
                                                  status.podIPs.
                                              secretKeyRef:
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    type: string
                                                    description: >-
                                                      The key of the secret to select from. 
                                                      Must be a valid secret key.
                                                  name:
                                                    type: string
                                                    description: >-
                                                      Name of the referent. More info:
                                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?
                                                  optional:
                                                    type: boolean
                                                    description: >-
                                                      Specify whether the Secret or its key
                                                      must be defined
                                                description: >-
                                                  Selects a key of a secret in the pod's
                                                  namespace
                                              configMapKeyRef:
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    type: string
                                                    description: The key to select.
                                                  name:
                                                    type: string
                                                    description: >-
                                                      Name of the referent. More info:
                                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?
                                                  optional:
                                                    type: boolean
                                                    description: >-
                                                      Specify whether the ConfigMap or its key
                                                      must be defined
                                                description: Selects a key of a ConfigMap.
                                              resourceFieldRef:
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  divisor:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    pattern: >-
                                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    description: >-
                                                      Specifies the output format of the
                                                      exposed resources, defaults to "1"
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    type: string
                                                    description: 'Required: resource to select'
                                                  containerName:
                                                    type: string
                                                    description: >-
                                                      Container name: required for volumes,
                                                      optional for env vars
                                                description: >-
                                                  Selects a resource of the container:
                                                  only resources limits and requests
                                                  (limits.cpu, limits.memory,
                                                  limits.ephemeral-storage, requests.cpu,
                                                  requests.memory and
                                                  requests.ephemeral-storage) are
                                                  currently supported.
                                            description: >-
                                              Source for the environment variable's
                                              value. Cannot be used if value is not
                                              empty.
                                        description: >-
                                          EnvVar represents an environment
                                          variable present in a Container.
                                      description: >-
                                        List of environment variables to set in
                                        the container. Cannot be updated.
                                    tty:
                                      type: boolean
                                      description: >-
                                        Whether this container should allocate a
                                        TTY for itself, also requires 'stdin' to
                                        be true. Default is false.
                                    args:
                                      type: array
                                      items:
                                        type: string
                                      description: >-
                                        Arguments to the entrypoint. The docker
                                        image's CMD is used if this is not
                                        provided. Variable references
                                        $(VAR_NAME) are expanded using the
                                        container's environment. If a variable
                                        cannot be resolved, the reference in the
                                        input string will be unchanged. The
                                        $(VAR_NAME) syntax can be escaped with a
                                        double $$, ie: $$(VAR_NAME). Escaped
                                        references will never be expanded,
                                        regardless of whether the variable
                                        exists or not. Cannot be updated. More
                                        info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                    name:
                                      type: string
                                      description: >-
                                        Name of the container specified as a
                                        DNS_LABEL. Each container in a pod must
                                        have a unique name (DNS_LABEL). Cannot
                                        be updated.
                                    image:
                                      type: string
                                      description: >-
                                        Docker image name. More info:
                                        https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher
                                        level config management to default or
                                        override container images in workload
                                        controllers like Deployments and
                                        StatefulSets.
                                    ports:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - containerPort
                                        properties:
                                          name:
                                            type: string
                                            description: >-
                                              If specified, this must be an
                                              IANA_SVC_NAME and unique within the pod.
                                              Each named port in a pod must have a
                                              unique name. Name for the port that can
                                              be referred to by services.
                                          hostIP:
                                            type: string
                                            description: >-
                                              What host IP to bind the external port
                                              to.
                                          hostPort:
                                            type: integer
                                            format: int32
                                            description: >-
                                              Number of port to expose on the host. If
                                              specified, this must be a valid port
                                              number, 0 < x < 65536. If HostNetwork is
                                              specified, this must match
                                              ContainerPort. Most containers do not
                                              need this.
                                          protocol:
                                            type: string
                                            default: TCP
                                            description: >-
                                              Protocol for port. Must be UDP, TCP, or
                                              SCTP. Defaults to "TCP".
                                          containerPort:
                                            type: integer
                                            format: int32
                                            description: >-
                                              Number of port to expose on the pod's IP
                                              address. This must be a valid port
                                              number, 0 < x < 65536.
                                        description: >-
                                          ContainerPort represents a network port
                                          in a single container.
                                      description: >-
                                        List of ports to expose from the
                                        container. Exposing a port here gives
                                        the system additional information about
                                        the network connections a container
                                        uses, but is primarily informational.
                                        Not specifying a port here DOES NOT
                                        prevent that port from being exposed.
                                        Any port which is listening on the
                                        default "0.0.0.0" address inside a
                                        container will be accessible from the
                                        network. Cannot be updated.
                                      x-kubernetes-list-type: map
                                      x-kubernetes-list-map-keys:
                                        - containerPort
                                        - protocol
                                    stdin:
                                      type: boolean
                                      description: >-
                                        Whether this container should allocate a
                                        buffer for stdin in the container
                                        runtime. If this is not set, reads from
                                        stdin in the container will always
                                        result in EOF. Default is false.
                                    command:
                                      type: array
                                      items:
                                        type: string
                                      description: >-
                                        Entrypoint array. Not executed within a
                                        shell. The docker image's ENTRYPOINT is
                                        used if this is not provided. Variable
                                        references $(VAR_NAME) are expanded
                                        using the container's environment. If a
                                        variable cannot be resolved, the
                                        reference in the input string will be
                                        unchanged. The $(VAR_NAME) syntax can be
                                        escaped with a double $$, ie:
                                        $$(VAR_NAME). Escaped references will
                                        never be expanded, regardless of whether
                                        the variable exists or not. Cannot be
                                        updated. More info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                    envFrom:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          prefix:
                                            type: string
                                            description: >-
                                              An optional identifier to prepend to
                                              each key in the ConfigMap. Must be a
                                              C_IDENTIFIER.
                                          secretRef:
                                            type: object
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  Name of the referent. More info:
                                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields.
                                                  apiVersion, kind, uid?
                                              optional:
                                                type: boolean
                                                description: >-
                                                  Specify whether the Secret must be
                                                  defined
                                            description: The Secret to select from
                                          configMapRef:
                                            type: object
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  Name of the referent. More info:
                                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields.
                                                  apiVersion, kind, uid?
                                              optional:
                                                type: boolean
                                                description: >-
                                                  Specify whether the ConfigMap must be
                                                  defined
                                            description: The ConfigMap to select from
                                        description: >-
                                          EnvFromSource represents the source of a
                                          set of ConfigMaps
                                      description: >-
                                        List of sources to populate environment
                                        variables in the container. The keys
                                        defined within a source must be a
                                        C_IDENTIFIER. All invalid keys will be
                                        reported as an event when the container
                                        is starting. When a key exists in
                                        multiple sources, the value associated
                                        with the last source will take
                                        precedence. Values defined by an Env
                                        with a duplicate key will take
                                        precedence. Cannot be updated.
                                    lifecycle:
                                      type: object
                                      properties:
                                        preStop:
                                          type: object
                                          properties:
                                            exec:
                                              type: object
                                              properties:
                                                command:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    Command is the command line to execute
                                                    inside the container, the working
                                                    directory for the command  is root ('/')
                                                    in the container's filesystem. The
                                                    command is simply exec'd, it is not run
                                                    inside a shell, so traditional shell
                                                    instructions ('|', etc) won't work. To
                                                    use a shell, you need to explicitly call
                                                    out to that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero is
                                                    unhealthy.
                                              description: >-
                                                One and only one of the following should
                                                be specified. Exec specifies the action
                                                to take.
                                            httpGet:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Host name to connect to, defaults to the
                                                    pod IP. You probably want to set "Host"
                                                    in httpHeaders instead.
                                                path:
                                                  type: string
                                                  description: Path to access on the HTTP server.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Name or number of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  type: string
                                                  description: >-
                                                    Scheme to use for connecting to the
                                                    host. Defaults to HTTP.
                                                httpHeaders:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        type: string
                                                        description: The header field name
                                                      value:
                                                        type: string
                                                        description: The header field value
                                                    description: >-
                                                      HTTPHeader describes a custom header to
                                                      be used in HTTP probes
                                                  description: >-
                                                    Custom headers to set in the request.
                                                    HTTP allows repeated headers.
                                              description: >-
                                                HTTPGet specifies the http request to
                                                perform.
                                            tcpSocket:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Optional: Host name to connect to,
                                                    defaults to the pod IP.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Number or name of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              description: >-
                                                TCPSocket specifies an action involving
                                                a TCP port. TCP hooks not yet supported
                                                TODO: implement a realistic TCP
                                                lifecycle hook
                                          description: >-
                                            PreStop is called immediately before a
                                            container is terminated due to an API
                                            request or management event such as
                                            liveness/startup probe failure,
                                            preemption, resource contention, etc.
                                            The handler is not called if the
                                            container crashes or exits. The reason
                                            for termination is passed to the
                                            handler. The Pod's termination grace
                                            period countdown begins before the
                                            PreStop hooked is executed. Regardless
                                            of the outcome of the handler, the
                                            container will eventually terminate
                                            within the Pod's termination grace
                                            period. Other management of the
                                            container blocks until the hook
                                            completes or until the termination grace
                                            period is reached. More info:
                                            https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                        postStart:
                                          type: object
                                          properties:
                                            exec:
                                              type: object
                                              properties:
                                                command:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    Command is the command line to execute
                                                    inside the container, the working
                                                    directory for the command  is root ('/')
                                                    in the container's filesystem. The
                                                    command is simply exec'd, it is not run
                                                    inside a shell, so traditional shell
                                                    instructions ('|', etc) won't work. To
                                                    use a shell, you need to explicitly call
                                                    out to that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero is
                                                    unhealthy.
                                              description: >-
                                                One and only one of the following should
                                                be specified. Exec specifies the action
                                                to take.
                                            httpGet:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Host name to connect to, defaults to the
                                                    pod IP. You probably want to set "Host"
                                                    in httpHeaders instead.
                                                path:
                                                  type: string
                                                  description: Path to access on the HTTP server.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Name or number of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  type: string
                                                  description: >-
                                                    Scheme to use for connecting to the
                                                    host. Defaults to HTTP.
                                                httpHeaders:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        type: string
                                                        description: The header field name
                                                      value:
                                                        type: string
                                                        description: The header field value
                                                    description: >-
                                                      HTTPHeader describes a custom header to
                                                      be used in HTTP probes
                                                  description: >-
                                                    Custom headers to set in the request.
                                                    HTTP allows repeated headers.
                                              description: >-
                                                HTTPGet specifies the http request to
                                                perform.
                                            tcpSocket:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Optional: Host name to connect to,
                                                    defaults to the pod IP.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Number or name of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              description: >-
                                                TCPSocket specifies an action involving
                                                a TCP port. TCP hooks not yet supported
                                                TODO: implement a realistic TCP
                                                lifecycle hook
                                          description: >-
                                            PostStart is called immediately after a
                                            container is created. If the handler
                                            fails, the container is terminated and
                                            restarted according to its restart
                                            policy. Other management of the
                                            container blocks until the hook
                                            completes. More info:
                                            https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      description: >-
                                        Actions that the management system
                                        should take in response to container
                                        lifecycle events. Cannot be updated.
                                    resources:
                                      type: object
                                      properties:
                                        limits:
                                          type: object
                                          description: >-
                                            Limits describes the maximum amount of
                                            compute resources allowed. More info:
                                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: >-
                                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                        requests:
                                          type: object
                                          description: >-
                                            Requests describes the minimum amount of
                                            compute resources required. If Requests
                                            is omitted for a container, it defaults
                                            to Limits if that is explicitly
                                            specified, otherwise to an
                                            implementation-defined value. More info:
                                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: >-
                                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                      description: >-
                                        Compute Resources required by this
                                        container. Cannot be updated. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                    stdinOnce:
                                      type: boolean
                                      description: >-
                                        Whether the container runtime should
                                        close the stdin channel after it has
                                        been opened by a single attach. When
                                        stdin is true the stdin stream will
                                        remain open across multiple attach
                                        sessions. If stdinOnce is set to true,
                                        stdin is opened on container start, is
                                        empty until the first client attaches to
                                        stdin, and then remains open and accepts
                                        data until the client disconnects, at
                                        which time stdin is closed and remains
                                        closed until the container is restarted.
                                        If this flag is false, a container
                                        processes that reads from stdin will
                                        never receive an EOF. Default is false
                                    workingDir:
                                      type: string
                                      description: >-
                                        Container's working directory. If not
                                        specified, the container runtime's
                                        default will be used, which might be
                                        configured in the container image.
                                        Cannot be updated.
                                    startupProbe:
                                      type: object
                                      properties:
                                        exec:
                                          type: object
                                          properties:
                                            command:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                Command is the command line to execute
                                                inside the container, the working
                                                directory for the command  is root ('/')
                                                in the container's filesystem. The
                                                command is simply exec'd, it is not run
                                                inside a shell, so traditional shell
                                                instructions ('|', etc) won't work. To
                                                use a shell, you need to explicitly call
                                                out to that shell. Exit status of 0 is
                                                treated as live/healthy and non-zero is
                                                unhealthy.
                                          description: >-
                                            One and only one of the following should
                                            be specified. Exec specifies the action
                                            to take.
                                        httpGet:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Host name to connect to, defaults to the
                                                pod IP. You probably want to set "Host"
                                                in httpHeaders instead.
                                            path:
                                              type: string
                                              description: Path to access on the HTTP server.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Name or number of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              type: string
                                              description: >-
                                                Scheme to use for connecting to the
                                                host. Defaults to HTTP.
                                            httpHeaders:
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    type: string
                                                    description: The header field name
                                                  value:
                                                    type: string
                                                    description: The header field value
                                                description: >-
                                                  HTTPHeader describes a custom header to
                                                  be used in HTTP probes
                                              description: >-
                                                Custom headers to set in the request.
                                                HTTP allows repeated headers.
                                          description: >-
                                            HTTPGet specifies the http request to
                                            perform.
                                        tcpSocket:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Optional: Host name to connect to,
                                                defaults to the pod IP.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Number or name of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          description: >-
                                            TCPSocket specifies an action involving
                                            a TCP port. TCP hooks not yet supported
                                            TODO: implement a realistic TCP
                                            lifecycle hook
                                        periodSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            How often (in seconds) to perform the
                                            probe. Default to 10 seconds. Minimum
                                            value is 1.
                                        timeoutSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after which the probe
                                            times out. Defaults to 1 second. Minimum
                                            value is 1. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        failureThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive failures for the
                                            probe to be considered failed after
                                            having succeeded. Defaults to 3. Minimum
                                            value is 1.
                                        successThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive successes for the
                                            probe to be considered successful after
                                            having failed. Defaults to 1. Must be 1
                                            for liveness and startup. Minimum value
                                            is 1.
                                        initialDelaySeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after the container
                                            has started before liveness probes are
                                            initiated. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      description: >-
                                        StartupProbe indicates that the Pod has
                                        successfully initialized. If specified,
                                        no other probes are executed until this
                                        completes successfully. If this probe
                                        fails, the Pod will be restarted, just
                                        as if the livenessProbe failed. This can
                                        be used to provide different probe
                                        parameters at the beginning of a Pod's
                                        lifecycle, when it might take a long
                                        time to load data or warm a cache, than
                                        during steady-state operation. This
                                        cannot be updated. This is a beta
                                        feature enabled by the StartupProbe
                                        feature flag. More info:
                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                    volumeMounts:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - mountPath
                                          - name
                                        properties:
                                          name:
                                            type: string
                                            description: This must match the Name of a Volume.
                                          subPath:
                                            type: string
                                            description: >-
                                              Path within the volume from which the
                                              container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                          readOnly:
                                            type: boolean
                                            description: >-
                                              Mounted read-only if true, read-write
                                              otherwise (false or unspecified).
                                              Defaults to false.
                                          mountPath:
                                            type: string
                                            description: >-
                                              Path within the container at which the
                                              volume should be mounted.  Must not
                                              contain ':'.
                                          subPathExpr:
                                            type: string
                                            description: >-
                                              Expanded path within the volume from
                                              which the container's volume should be
                                              mounted. Behaves similarly to SubPath
                                              but environment variable references
                                              $(VAR_NAME) are expanded using the
                                              container's environment. Defaults to ""
                                              (volume's root). SubPathExpr and SubPath
                                              are mutually exclusive.
                                          mountPropagation:
                                            type: string
                                            description: >-
                                              mountPropagation determines how mounts
                                              are propagated from the host to
                                              container and the other way around. When
                                              not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                        description: >-
                                          VolumeMount describes a mounting of a
                                          Volume within a container.
                                      description: >-
                                        Pod volumes to mount into the
                                        container's filesystem. Cannot be
                                        updated.
                                    livenessProbe:
                                      type: object
                                      properties:
                                        exec:
                                          type: object
                                          properties:
                                            command:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                Command is the command line to execute
                                                inside the container, the working
                                                directory for the command  is root ('/')
                                                in the container's filesystem. The
                                                command is simply exec'd, it is not run
                                                inside a shell, so traditional shell
                                                instructions ('|', etc) won't work. To
                                                use a shell, you need to explicitly call
                                                out to that shell. Exit status of 0 is
                                                treated as live/healthy and non-zero is
                                                unhealthy.
                                          description: >-
                                            One and only one of the following should
                                            be specified. Exec specifies the action
                                            to take.
                                        httpGet:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Host name to connect to, defaults to the
                                                pod IP. You probably want to set "Host"
                                                in httpHeaders instead.
                                            path:
                                              type: string
                                              description: Path to access on the HTTP server.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Name or number of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              type: string
                                              description: >-
                                                Scheme to use for connecting to the
                                                host. Defaults to HTTP.
                                            httpHeaders:
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    type: string
                                                    description: The header field name
                                                  value:
                                                    type: string
                                                    description: The header field value
                                                description: >-
                                                  HTTPHeader describes a custom header to
                                                  be used in HTTP probes
                                              description: >-
                                                Custom headers to set in the request.
                                                HTTP allows repeated headers.
                                          description: >-
                                            HTTPGet specifies the http request to
                                            perform.
                                        tcpSocket:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Optional: Host name to connect to,
                                                defaults to the pod IP.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Number or name of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          description: >-
                                            TCPSocket specifies an action involving
                                            a TCP port. TCP hooks not yet supported
                                            TODO: implement a realistic TCP
                                            lifecycle hook
                                        periodSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            How often (in seconds) to perform the
                                            probe. Default to 10 seconds. Minimum
                                            value is 1.
                                        timeoutSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after which the probe
                                            times out. Defaults to 1 second. Minimum
                                            value is 1. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        failureThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive failures for the
                                            probe to be considered failed after
                                            having succeeded. Defaults to 3. Minimum
                                            value is 1.
                                        successThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive successes for the
                                            probe to be considered successful after
                                            having failed. Defaults to 1. Must be 1
                                            for liveness and startup. Minimum value
                                            is 1.
                                        initialDelaySeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after the container
                                            has started before liveness probes are
                                            initiated. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      description: >-
                                        Periodic probe of container liveness.
                                        Container will be restarted if the probe
                                        fails. Cannot be updated. More info:
                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                    volumeDevices:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - devicePath
                                          - name
                                        properties:
                                          name:
                                            type: string
                                            description: >-
                                              name must match the name of a
                                              persistentVolumeClaim in the pod
                                          devicePath:
                                            type: string
                                            description: >-
                                              devicePath is the path inside of the
                                              container that the device will be mapped
                                              to.
                                        description: >-
                                          volumeDevice describes a mapping of a
                                          raw block device within a container.
                                      description: >-
                                        volumeDevices is the list of block
                                        devices to be used by the container.
                                    readinessProbe:
                                      type: object
                                      properties:
                                        exec:
                                          type: object
                                          properties:
                                            command:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                Command is the command line to execute
                                                inside the container, the working
                                                directory for the command  is root ('/')
                                                in the container's filesystem. The
                                                command is simply exec'd, it is not run
                                                inside a shell, so traditional shell
                                                instructions ('|', etc) won't work. To
                                                use a shell, you need to explicitly call
                                                out to that shell. Exit status of 0 is
                                                treated as live/healthy and non-zero is
                                                unhealthy.
                                          description: >-
                                            One and only one of the following should
                                            be specified. Exec specifies the action
                                            to take.
                                        httpGet:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Host name to connect to, defaults to the
                                                pod IP. You probably want to set "Host"
                                                in httpHeaders instead.
                                            path:
                                              type: string
                                              description: Path to access on the HTTP server.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Name or number of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              type: string
                                              description: >-
                                                Scheme to use for connecting to the
                                                host. Defaults to HTTP.
                                            httpHeaders:
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    type: string
                                                    description: The header field name
                                                  value:
                                                    type: string
                                                    description: The header field value
                                                description: >-
                                                  HTTPHeader describes a custom header to
                                                  be used in HTTP probes
                                              description: >-
                                                Custom headers to set in the request.
                                                HTTP allows repeated headers.
                                          description: >-
                                            HTTPGet specifies the http request to
                                            perform.
                                        tcpSocket:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Optional: Host name to connect to,
                                                defaults to the pod IP.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Number or name of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          description: >-
                                            TCPSocket specifies an action involving
                                            a TCP port. TCP hooks not yet supported
                                            TODO: implement a realistic TCP
                                            lifecycle hook
                                        periodSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            How often (in seconds) to perform the
                                            probe. Default to 10 seconds. Minimum
                                            value is 1.
                                        timeoutSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after which the probe
                                            times out. Defaults to 1 second. Minimum
                                            value is 1. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        failureThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive failures for the
                                            probe to be considered failed after
                                            having succeeded. Defaults to 3. Minimum
                                            value is 1.
                                        successThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive successes for the
                                            probe to be considered successful after
                                            having failed. Defaults to 1. Must be 1
                                            for liveness and startup. Minimum value
                                            is 1.
                                        initialDelaySeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after the container
                                            has started before liveness probes are
                                            initiated. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      description: >-
                                        Periodic probe of container service
                                        readiness. Container will be removed
                                        from service endpoints if the probe
                                        fails. Cannot be updated. More info:
                                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                    imagePullPolicy:
                                      type: string
                                      description: >-
                                        Image pull policy. One of Always, Never,
                                        IfNotPresent. Defaults to Always if
                                        :latest tag is specified, or
                                        IfNotPresent otherwise. Cannot be
                                        updated. More info:
                                        https://kubernetes.io/docs/concepts/containers/images#updating-images
                                    securityContext:
                                      type: object
                                      properties:
                                        procMount:
                                          type: string
                                          description: >-
                                            procMount denotes the type of proc mount
                                            to use for the containers. The default
                                            is DefaultProcMount which uses the
                                            container runtime defaults for readonly
                                            paths and masked paths. This requires
                                            the ProcMountType feature flag to be
                                            enabled.
                                        runAsUser:
                                          type: integer
                                          format: int64
                                          description: >-
                                            The UID to run the entrypoint of the
                                            container process. Defaults to user
                                            specified in image metadata if
                                            unspecified. May also be set in
                                            PodSecurityContext.  If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                        privileged:
                                          type: boolean
                                          description: >-
                                            Run container in privileged mode.
                                            Processes in privileged containers are
                                            essentially equivalent to root on the
                                            host. Defaults to false.
                                        runAsGroup:
                                          type: integer
                                          format: int64
                                          description: >-
                                            The GID to run the entrypoint of the
                                            container process. Uses runtime default
                                            if unset. May also be set in
                                            PodSecurityContext.  If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                        capabilities:
                                          type: object
                                          properties:
                                            add:
                                              type: array
                                              items:
                                                type: string
                                                description: >-
                                                  Capability represent POSIX capabilities
                                                  type
                                              description: Added capabilities
                                            drop:
                                              type: array
                                              items:
                                                type: string
                                                description: >-
                                                  Capability represent POSIX capabilities
                                                  type
                                              description: Removed capabilities
                                          description: >-
                                            The capabilities to add/drop when
                                            running containers. Defaults to the
                                            default set of capabilities granted by
                                            the container runtime.
                                        runAsNonRoot:
                                          type: boolean
                                          description: >-
                                            Indicates that the container must run as
                                            a non-root user. If true, the Kubelet
                                            will validate the image at runtime to
                                            ensure that it does not run as UID 0
                                            (root) and fail to start the container
                                            if it does. If unset or false, no such
                                            validation will be performed. May also
                                            be set in PodSecurityContext.  If set in
                                            both SecurityContext and
                                            PodSecurityContext, the value specified
                                            in SecurityContext takes precedence.
                                        seLinuxOptions:
                                          type: object
                                          properties:
                                            role:
                                              type: string
                                              description: >-
                                                Role is a SELinux role label that
                                                applies to the container.
                                            type:
                                              type: string
                                              description: >-
                                                Type is a SELinux type label that
                                                applies to the container.
                                            user:
                                              type: string
                                              description: >-
                                                User is a SELinux user label that
                                                applies to the container.
                                            level:
                                              type: string
                                              description: >-
                                                Level is SELinux level label that
                                                applies to the container.
                                          description: >-
                                            The SELinux context to be applied to the
                                            container. If unspecified, the container
                                            runtime will allocate a random SELinux
                                            context for each container.  May also be
                                            set in PodSecurityContext.  If set in
                                            both SecurityContext and
                                            PodSecurityContext, the value specified
                                            in SecurityContext takes precedence.
                                        seccompProfile:
                                          type: object
                                          required:
                                            - type
                                          properties:
                                            type:
                                              type: string
                                              description: >-
                                                type indicates which kind of seccomp
                                                profile will be applied. Valid options
                                                are: 
                                                 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                                            localhostProfile:
                                              type: string
                                              description: >-
                                                localhostProfile indicates a profile
                                                defined in a file on the node should be
                                                used. The profile must be preconfigured
                                                on the node to work. Must be a
                                                descending path, relative to the
                                                kubelet's configured seccomp profile
                                                location. Must only be set if type is
                                                "Localhost".
                                          description: >-
                                            The seccomp options to use by this
                                            container. If seccomp options are
                                            provided at both the pod & container
                                            level, the container options override
                                            the pod options.
                                        windowsOptions:
                                          type: object
                                          properties:
                                            runAsUserName:
                                              type: string
                                              description: >-
                                                The UserName in Windows to run the
                                                entrypoint of the container process.
                                                Defaults to the user specified in image
                                                metadata if unspecified. May also be set
                                                in PodSecurityContext. If set in both
                                                SecurityContext and PodSecurityContext,
                                                the value specified in SecurityContext
                                                takes precedence.
                                            gmsaCredentialSpec:
                                              type: string
                                              description: >-
                                                GMSACredentialSpec is where the GMSA
                                                admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa)
                                                inlines the contents of the GMSA
                                                credential spec named by the
                                                GMSACredentialSpecName field.
                                            gmsaCredentialSpecName:
                                              type: string
                                              description: >-
                                                GMSACredentialSpecName is the name of
                                                the GMSA credential spec to use.
                                          description: >-
                                            The Windows specific settings applied to
                                            all containers. If unspecified, the
                                            options from the PodSecurityContext will
                                            be used. If set in both SecurityContext
                                            and PodSecurityContext, the value
                                            specified in SecurityContext takes
                                            precedence.
                                        readOnlyRootFilesystem:
                                          type: boolean
                                          description: >-
                                            Whether this container has a read-only
                                            root filesystem. Default is false.
                                        allowPrivilegeEscalation:
                                          type: boolean
                                          description: >-
                                            AllowPrivilegeEscalation controls
                                            whether a process can gain more
                                            privileges than its parent process. This
                                            bool directly controls if the
                                            no_new_privs flag will be set on the
                                            container process.
                                            AllowPrivilegeEscalation is true always
                                            when the container is: 1) run as
                                            Privileged 2) has CAP_SYS_ADMIN
                                      description: >-
                                        Security options the pod should run
                                        with. More info:
                                        https://kubernetes.io/docs/concepts/policy/security-context/
                                        More info:
                                        https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                    terminationMessagePath:
                                      type: string
                                      description: >-
                                        Optional: Path at which the file to
                                        which the container's termination
                                        message will be written is mounted into
                                        the container's filesystem. Message
                                        written is intended to be brief final
                                        status, such as an assertion failure
                                        message. Will be truncated by the node
                                        if greater than 4096 bytes. The total
                                        message length across all containers
                                        will be limited to 12kb. Defaults to
                                        /dev/termination-log. Cannot be updated.
                                    terminationMessagePolicy:
                                      type: string
                                      description: >-
                                        Indicate how the termination message
                                        should be populated. File will use the
                                        contents of terminationMessagePath to
                                        populate the container status message on
                                        both success and failure.
                                        FallbackToLogsOnError will use the last
                                        chunk of container log output if the
                                        termination message file is empty and
                                        the container exited with an error. The
                                        log output is limited to 2048 bytes or
                                        80 lines, whichever is smaller. Defaults
                                        to File. Cannot be updated.
                                  description: >-
                                    A single application container that you want
                                    to run within a pod.
                                description: >-
                                  List of initialization containers belonging to
                                  the pod. Init containers are executed in order
                                  prior to containers being started. If any init
                                  container fails, the pod is considered to have
                                  failed and is handled according to its
                                  restartPolicy. The name for an init container
                                  or normal container must be unique among all
                                  containers. Init containers may not have
                                  Lifecycle actions, Readiness probes, Liveness
                                  probes, or Startup probes. The
                                  resourceRequirements of an init container are
                                  taken into account during scheduling by
                                  finding the highest request/limit for each
                                  resource type, and then using the max of of
                                  that value or the sum of the normal
                                  containers. Limits are applied to init
                                  containers in a similar fashion. Init
                                  containers cannot currently be added or
                                  removed. Cannot be updated. More info:
                                  https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                              readinessGates:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - conditionType
                                  properties:
                                    conditionType:
                                      type: string
                                      description: >-
                                        ConditionType refers to a condition in
                                        the pod's condition list with matching
                                        type.
                                  description: >-
                                    PodReadinessGate contains the reference to a
                                    pod condition
                                description: >-
                                  If specified, all readiness gates will be
                                  evaluated for pod readiness. A pod is ready
                                  when all its containers are ready AND all
                                  conditions specified in the readiness gates
                                  have status equal to "True" More info:
                                  https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md
                              serviceAccount:
                                type: string
                                description: >-
                                  DeprecatedServiceAccount is a depreciated
                                  alias for ServiceAccountName. Deprecated: Use
                                  serviceAccountName instead.
                              securityContext:
                                type: object
                                properties:
                                  fsGroup:
                                    type: integer
                                    format: int64
                                    description: >-
                                      A special supplemental group that applies
                                      to all containers in a pod. Some volume
                                      types allow the Kubelet to change the
                                      ownership of that volume to be owned by
                                      the pod: 
                                       1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- 
                                       If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                  sysctls:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - value
                                      properties:
                                        name:
                                          type: string
                                          description: Name of a property to set
                                        value:
                                          type: string
                                          description: Value of a property to set
                                      description: >-
                                        Sysctl defines a kernel parameter to be
                                        set
                                    description: >-
                                      Sysctls hold a list of namespaced sysctls
                                      used for the pod. Pods with unsupported
                                      sysctls (by the container runtime) might
                                      fail to launch.
                                  runAsUser:
                                    type: integer
                                    format: int64
                                    description: >-
                                      The UID to run the entrypoint of the
                                      container process. Defaults to user
                                      specified in image metadata if
                                      unspecified. May also be set in
                                      SecurityContext.  If set in both
                                      SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext
                                      takes precedence for that container.
                                  runAsGroup:
                                    type: integer
                                    format: int64
                                    description: >-
                                      The GID to run the entrypoint of the
                                      container process. Uses runtime default if
                                      unset. May also be set in
                                      SecurityContext.  If set in both
                                      SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext
                                      takes precedence for that container.
                                  runAsNonRoot:
                                    type: boolean
                                    description: >-
                                      Indicates that the container must run as a
                                      non-root user. If true, the Kubelet will
                                      validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and
                                      fail to start the container if it does. If
                                      unset or false, no such validation will be
                                      performed. May also be set in
                                      SecurityContext.  If set in both
                                      SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext
                                      takes precedence.
                                  seLinuxOptions:
                                    type: object
                                    properties:
                                      role:
                                        type: string
                                        description: >-
                                          Role is a SELinux role label that
                                          applies to the container.
                                      type:
                                        type: string
                                        description: >-
                                          Type is a SELinux type label that
                                          applies to the container.
                                      user:
                                        type: string
                                        description: >-
                                          User is a SELinux user label that
                                          applies to the container.
                                      level:
                                        type: string
                                        description: >-
                                          Level is SELinux level label that
                                          applies to the container.
                                    description: >-
                                      The SELinux context to be applied to all
                                      containers. If unspecified, the container
                                      runtime will allocate a random SELinux
                                      context for each container.  May also be
                                      set in SecurityContext.  If set in both
                                      SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext
                                      takes precedence for that container.
                                  seccompProfile:
                                    type: object
                                    required:
                                      - type
                                    properties:
                                      type:
                                        type: string
                                        description: >-
                                          type indicates which kind of seccomp
                                          profile will be applied. Valid options
                                          are: 
                                           Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                                      localhostProfile:
                                        type: string
                                        description: >-
                                          localhostProfile indicates a profile
                                          defined in a file on the node should be
                                          used. The profile must be preconfigured
                                          on the node to work. Must be a
                                          descending path, relative to the
                                          kubelet's configured seccomp profile
                                          location. Must only be set if type is
                                          "Localhost".
                                    description: >-
                                      The seccomp options to use by the
                                      containers in this pod.
                                  windowsOptions:
                                    type: object
                                    properties:
                                      runAsUserName:
                                        type: string
                                        description: >-
                                          The UserName in Windows to run the
                                          entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both
                                          SecurityContext and PodSecurityContext,
                                          the value specified in SecurityContext
                                          takes precedence.
                                      gmsaCredentialSpec:
                                        type: string
                                        description: >-
                                          GMSACredentialSpec is where the GMSA
                                          admission webhook
                                          (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA
                                          credential spec named by the
                                          GMSACredentialSpecName field.
                                      gmsaCredentialSpecName:
                                        type: string
                                        description: >-
                                          GMSACredentialSpecName is the name of
                                          the GMSA credential spec to use.
                                    description: >-
                                      The Windows specific settings applied to
                                      all containers. If unspecified, the
                                      options within a container's
                                      SecurityContext will be used. If set in
                                      both SecurityContext and
                                      PodSecurityContext, the value specified in
                                      SecurityContext takes precedence.
                                  supplementalGroups:
                                    type: array
                                    items:
                                      type: integer
                                      format: int64
                                    description: >-
                                      A list of groups applied to the first
                                      process run in each container, in addition
                                      to the container's primary GID.  If
                                      unspecified, no groups will be added to
                                      any container.
                                  fsGroupChangePolicy:
                                    type: string
                                    description: >-
                                      fsGroupChangePolicy defines behavior of
                                      changing ownership and permission of the
                                      volume before being exposed inside Pod.
                                      This field will only apply to volume types
                                      which support fsGroup based ownership(and
                                      permissions). It will have no effect on
                                      ephemeral volume types such as: secret,
                                      configmaps and emptydir. Valid values are
                                      "OnRootMismatch" and "Always". If not
                                      specified defaults to "Always".
                                description: >-
                                  SecurityContext holds pod-level security
                                  attributes and common container settings.
                                  Optional: Defaults to empty.  See type
                                  description for default values of each field.
                              imagePullSecrets:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      description: >-
                                        Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields.
                                        apiVersion, kind, uid?
                                  description: >-
                                    LocalObjectReference contains enough
                                    information to let you locate the referenced
                                    object inside the same namespace.
                                description: >-
                                  ImagePullSecrets is an optional list of
                                  references to secrets in the same namespace to
                                  use for pulling any of the images used by this
                                  PodSpec. If specified, these secrets will be
                                  passed to individual puller implementations
                                  for them to use. For example, in the case of
                                  docker, only DockerConfig type secrets are
                                  honored. More info:
                                  https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
                              preemptionPolicy:
                                type: string
                                description: >-
                                  PreemptionPolicy is the Policy for preempting
                                  pods with lower priority. One of Never,
                                  PreemptLowerPriority. Defaults to
                                  PreemptLowerPriority if unset. This field is
                                  beta-level, gated by the NonPreemptingPriority
                                  feature-gate.
                              runtimeClassName:
                                type: string
                                description: >-
                                  RuntimeClassName refers to a RuntimeClass
                                  object in the node.k8s.io group, which should
                                  be used to run this pod.  If no RuntimeClass
                                  resource matches the named class, the pod will
                                  not be run. If unset or empty, the "legacy"
                                  RuntimeClass will be used, which is an
                                  implicit class with an empty definition that
                                  uses the default runtime handler. More info:
                                  https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
                                  This is a beta feature as of Kubernetes v1.14.
                              priorityClassName:
                                type: string
                                description: >-
                                  If specified, indicates the pod's priority.
                                  "system-node-critical" and
                                  "system-cluster-critical" are two special
                                  keywords which indicate the highest priorities
                                  with the former being the highest priority.
                                  Any other name must be defined by creating a
                                  PriorityClass object with that name. If not
                                  specified, the pod priority will be default or
                                  zero if there is no default.
                              setHostnameAsFQDN:
                                type: boolean
                                description: >-
                                  If true the pod's hostname will be configured
                                  as the pod's FQDN, rather than the leaf name
                                  (the default). In Linux containers, this means
                                  setting the FQDN in the hostname field of the
                                  kernel (the nodename field of struct utsname).
                                  In Windows containers, this means setting the
                                  registry value of hostname for the registry
                                  key
                                  HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters
                                  to FQDN. If a pod does not have FQDN, this has
                                  no effect. Default to false.
                              enableServiceLinks:
                                type: boolean
                                description: >-
                                  EnableServiceLinks indicates whether
                                  information about services should be injected
                                  into pod's environment variables, matching the
                                  syntax of Docker links. Optional: Defaults to
                                  true.
                              serviceAccountName:
                                type: string
                                description: >-
                                  ServiceAccountName is the name of the
                                  ServiceAccount to use to run this pod. More
                                  info:
                                  https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                              ephemeralContainers:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    env:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - name
                                        properties:
                                          name:
                                            type: string
                                            description: >-
                                              Name of the environment variable. Must
                                              be a C_IDENTIFIER.
                                          value:
                                            type: string
                                            description: >-
                                              Variable references $(VAR_NAME) are
                                              expanded using the previous defined
                                              environment variables in the container
                                              and any service environment variables.
                                              If a variable cannot be resolved, the
                                              reference in the input string will be
                                              unchanged. The $(VAR_NAME) syntax can be
                                              escaped with a double $$, ie:
                                              $$(VAR_NAME). Escaped references will
                                              never be expanded, regardless of whether
                                              the variable exists or not. Defaults to
                                              "".
                                          valueFrom:
                                            type: object
                                            properties:
                                              fieldRef:
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  fieldPath:
                                                    type: string
                                                    description: >-
                                                      Path of the field to select in the
                                                      specified API version.
                                                  apiVersion:
                                                    type: string
                                                    description: >-
                                                      Version of the schema the FieldPath is
                                                      written in terms of, defaults to "v1".
                                                description: >-
                                                  Selects a field of the pod: supports
                                                  metadata.name, metadata.namespace,
                                                  `metadata.labels['<KEY>']`,
                                                  `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName,
                                                  status.hostIP, status.podIP,
                                                  status.podIPs.
                                              secretKeyRef:
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    type: string
                                                    description: >-
                                                      The key of the secret to select from. 
                                                      Must be a valid secret key.
                                                  name:
                                                    type: string
                                                    description: >-
                                                      Name of the referent. More info:
                                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?
                                                  optional:
                                                    type: boolean
                                                    description: >-
                                                      Specify whether the Secret or its key
                                                      must be defined
                                                description: >-
                                                  Selects a key of a secret in the pod's
                                                  namespace
                                              configMapKeyRef:
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    type: string
                                                    description: The key to select.
                                                  name:
                                                    type: string
                                                    description: >-
                                                      Name of the referent. More info:
                                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?
                                                  optional:
                                                    type: boolean
                                                    description: >-
                                                      Specify whether the ConfigMap or its key
                                                      must be defined
                                                description: Selects a key of a ConfigMap.
                                              resourceFieldRef:
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  divisor:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    pattern: >-
                                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    description: >-
                                                      Specifies the output format of the
                                                      exposed resources, defaults to "1"
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    type: string
                                                    description: 'Required: resource to select'
                                                  containerName:
                                                    type: string
                                                    description: >-
                                                      Container name: required for volumes,
                                                      optional for env vars
                                                description: >-
                                                  Selects a resource of the container:
                                                  only resources limits and requests
                                                  (limits.cpu, limits.memory,
                                                  limits.ephemeral-storage, requests.cpu,
                                                  requests.memory and
                                                  requests.ephemeral-storage) are
                                                  currently supported.
                                            description: >-
                                              Source for the environment variable's
                                              value. Cannot be used if value is not
                                              empty.
                                        description: >-
                                          EnvVar represents an environment
                                          variable present in a Container.
                                      description: >-
                                        List of environment variables to set in
                                        the container. Cannot be updated.
                                    tty:
                                      type: boolean
                                      description: >-
                                        Whether this container should allocate a
                                        TTY for itself, also requires 'stdin' to
                                        be true. Default is false.
                                    args:
                                      type: array
                                      items:
                                        type: string
                                      description: >-
                                        Arguments to the entrypoint. The docker
                                        image's CMD is used if this is not
                                        provided. Variable references
                                        $(VAR_NAME) are expanded using the
                                        container's environment. If a variable
                                        cannot be resolved, the reference in the
                                        input string will be unchanged. The
                                        $(VAR_NAME) syntax can be escaped with a
                                        double $$, ie: $$(VAR_NAME). Escaped
                                        references will never be expanded,
                                        regardless of whether the variable
                                        exists or not. Cannot be updated. More
                                        info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                    name:
                                      type: string
                                      description: >-
                                        Name of the ephemeral container
                                        specified as a DNS_LABEL. This name must
                                        be unique among all containers, init
                                        containers and ephemeral containers.
                                    image:
                                      type: string
                                      description: >-
                                        Docker image name. More info:
                                        https://kubernetes.io/docs/concepts/containers/images
                                    ports:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - containerPort
                                        properties:
                                          name:
                                            type: string
                                            description: >-
                                              If specified, this must be an
                                              IANA_SVC_NAME and unique within the pod.
                                              Each named port in a pod must have a
                                              unique name. Name for the port that can
                                              be referred to by services.
                                          hostIP:
                                            type: string
                                            description: >-
                                              What host IP to bind the external port
                                              to.
                                          hostPort:
                                            type: integer
                                            format: int32
                                            description: >-
                                              Number of port to expose on the host. If
                                              specified, this must be a valid port
                                              number, 0 < x < 65536. If HostNetwork is
                                              specified, this must match
                                              ContainerPort. Most containers do not
                                              need this.
                                          protocol:
                                            type: string
                                            default: TCP
                                            description: >-
                                              Protocol for port. Must be UDP, TCP, or
                                              SCTP. Defaults to "TCP".
                                          containerPort:
                                            type: integer
                                            format: int32
                                            description: >-
                                              Number of port to expose on the pod's IP
                                              address. This must be a valid port
                                              number, 0 < x < 65536.
                                        description: >-
                                          ContainerPort represents a network port
                                          in a single container.
                                      description: >-
                                        Ports are not allowed for ephemeral
                                        containers.
                                    stdin:
                                      type: boolean
                                      description: >-
                                        Whether this container should allocate a
                                        buffer for stdin in the container
                                        runtime. If this is not set, reads from
                                        stdin in the container will always
                                        result in EOF. Default is false.
                                    command:
                                      type: array
                                      items:
                                        type: string
                                      description: >-
                                        Entrypoint array. Not executed within a
                                        shell. The docker image's ENTRYPOINT is
                                        used if this is not provided. Variable
                                        references $(VAR_NAME) are expanded
                                        using the container's environment. If a
                                        variable cannot be resolved, the
                                        reference in the input string will be
                                        unchanged. The $(VAR_NAME) syntax can be
                                        escaped with a double $$, ie:
                                        $$(VAR_NAME). Escaped references will
                                        never be expanded, regardless of whether
                                        the variable exists or not. Cannot be
                                        updated. More info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                    envFrom:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          prefix:
                                            type: string
                                            description: >-
                                              An optional identifier to prepend to
                                              each key in the ConfigMap. Must be a
                                              C_IDENTIFIER.
                                          secretRef:
                                            type: object
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  Name of the referent. More info:
                                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields.
                                                  apiVersion, kind, uid?
                                              optional:
                                                type: boolean
                                                description: >-
                                                  Specify whether the Secret must be
                                                  defined
                                            description: The Secret to select from
                                          configMapRef:
                                            type: object
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  Name of the referent. More info:
                                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields.
                                                  apiVersion, kind, uid?
                                              optional:
                                                type: boolean
                                                description: >-
                                                  Specify whether the ConfigMap must be
                                                  defined
                                            description: The ConfigMap to select from
                                        description: >-
                                          EnvFromSource represents the source of a
                                          set of ConfigMaps
                                      description: >-
                                        List of sources to populate environment
                                        variables in the container. The keys
                                        defined within a source must be a
                                        C_IDENTIFIER. All invalid keys will be
                                        reported as an event when the container
                                        is starting. When a key exists in
                                        multiple sources, the value associated
                                        with the last source will take
                                        precedence. Values defined by an Env
                                        with a duplicate key will take
                                        precedence. Cannot be updated.
                                    lifecycle:
                                      type: object
                                      properties:
                                        preStop:
                                          type: object
                                          properties:
                                            exec:
                                              type: object
                                              properties:
                                                command:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    Command is the command line to execute
                                                    inside the container, the working
                                                    directory for the command  is root ('/')
                                                    in the container's filesystem. The
                                                    command is simply exec'd, it is not run
                                                    inside a shell, so traditional shell
                                                    instructions ('|', etc) won't work. To
                                                    use a shell, you need to explicitly call
                                                    out to that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero is
                                                    unhealthy.
                                              description: >-
                                                One and only one of the following should
                                                be specified. Exec specifies the action
                                                to take.
                                            httpGet:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Host name to connect to, defaults to the
                                                    pod IP. You probably want to set "Host"
                                                    in httpHeaders instead.
                                                path:
                                                  type: string
                                                  description: Path to access on the HTTP server.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Name or number of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  type: string
                                                  description: >-
                                                    Scheme to use for connecting to the
                                                    host. Defaults to HTTP.
                                                httpHeaders:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        type: string
                                                        description: The header field name
                                                      value:
                                                        type: string
                                                        description: The header field value
                                                    description: >-
                                                      HTTPHeader describes a custom header to
                                                      be used in HTTP probes
                                                  description: >-
                                                    Custom headers to set in the request.
                                                    HTTP allows repeated headers.
                                              description: >-
                                                HTTPGet specifies the http request to
                                                perform.
                                            tcpSocket:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Optional: Host name to connect to,
                                                    defaults to the pod IP.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Number or name of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              description: >-
                                                TCPSocket specifies an action involving
                                                a TCP port. TCP hooks not yet supported
                                                TODO: implement a realistic TCP
                                                lifecycle hook
                                          description: >-
                                            PreStop is called immediately before a
                                            container is terminated due to an API
                                            request or management event such as
                                            liveness/startup probe failure,
                                            preemption, resource contention, etc.
                                            The handler is not called if the
                                            container crashes or exits. The reason
                                            for termination is passed to the
                                            handler. The Pod's termination grace
                                            period countdown begins before the
                                            PreStop hooked is executed. Regardless
                                            of the outcome of the handler, the
                                            container will eventually terminate
                                            within the Pod's termination grace
                                            period. Other management of the
                                            container blocks until the hook
                                            completes or until the termination grace
                                            period is reached. More info:
                                            https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                        postStart:
                                          type: object
                                          properties:
                                            exec:
                                              type: object
                                              properties:
                                                command:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    Command is the command line to execute
                                                    inside the container, the working
                                                    directory for the command  is root ('/')
                                                    in the container's filesystem. The
                                                    command is simply exec'd, it is not run
                                                    inside a shell, so traditional shell
                                                    instructions ('|', etc) won't work. To
                                                    use a shell, you need to explicitly call
                                                    out to that shell. Exit status of 0 is
                                                    treated as live/healthy and non-zero is
                                                    unhealthy.
                                              description: >-
                                                One and only one of the following should
                                                be specified. Exec specifies the action
                                                to take.
                                            httpGet:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Host name to connect to, defaults to the
                                                    pod IP. You probably want to set "Host"
                                                    in httpHeaders instead.
                                                path:
                                                  type: string
                                                  description: Path to access on the HTTP server.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Name or number of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  type: string
                                                  description: >-
                                                    Scheme to use for connecting to the
                                                    host. Defaults to HTTP.
                                                httpHeaders:
                                                  type: array
                                                  items:
                                                    type: object
                                                    required:
                                                      - name
                                                      - value
                                                    properties:
                                                      name:
                                                        type: string
                                                        description: The header field name
                                                      value:
                                                        type: string
                                                        description: The header field value
                                                    description: >-
                                                      HTTPHeader describes a custom header to
                                                      be used in HTTP probes
                                                  description: >-
                                                    Custom headers to set in the request.
                                                    HTTP allows repeated headers.
                                              description: >-
                                                HTTPGet specifies the http request to
                                                perform.
                                            tcpSocket:
                                              type: object
                                              required:
                                                - port
                                              properties:
                                                host:
                                                  type: string
                                                  description: >-
                                                    Optional: Host name to connect to,
                                                    defaults to the pod IP.
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: >-
                                                    Number or name of the port to access on
                                                    the container. Number must be in the
                                                    range 1 to 65535. Name must be an
                                                    IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              description: >-
                                                TCPSocket specifies an action involving
                                                a TCP port. TCP hooks not yet supported
                                                TODO: implement a realistic TCP
                                                lifecycle hook
                                          description: >-
                                            PostStart is called immediately after a
                                            container is created. If the handler
                                            fails, the container is terminated and
                                            restarted according to its restart
                                            policy. Other management of the
                                            container blocks until the hook
                                            completes. More info:
                                            https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      description: >-
                                        Lifecycle is not allowed for ephemeral
                                        containers.
                                    resources:
                                      type: object
                                      properties:
                                        limits:
                                          type: object
                                          description: >-
                                            Limits describes the maximum amount of
                                            compute resources allowed. More info:
                                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: >-
                                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                        requests:
                                          type: object
                                          description: >-
                                            Requests describes the minimum amount of
                                            compute resources required. If Requests
                                            is omitted for a container, it defaults
                                            to Limits if that is explicitly
                                            specified, otherwise to an
                                            implementation-defined value. More info:
                                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: >-
                                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                      description: >-
                                        Resources are not allowed for ephemeral
                                        containers. Ephemeral containers use
                                        spare resources already allocated to the
                                        pod.
                                    stdinOnce:
                                      type: boolean
                                      description: >-
                                        Whether the container runtime should
                                        close the stdin channel after it has
                                        been opened by a single attach. When
                                        stdin is true the stdin stream will
                                        remain open across multiple attach
                                        sessions. If stdinOnce is set to true,
                                        stdin is opened on container start, is
                                        empty until the first client attaches to
                                        stdin, and then remains open and accepts
                                        data until the client disconnects, at
                                        which time stdin is closed and remains
                                        closed until the container is restarted.
                                        If this flag is false, a container
                                        processes that reads from stdin will
                                        never receive an EOF. Default is false
                                    workingDir:
                                      type: string
                                      description: >-
                                        Container's working directory. If not
                                        specified, the container runtime's
                                        default will be used, which might be
                                        configured in the container image.
                                        Cannot be updated.
                                    startupProbe:
                                      type: object
                                      properties:
                                        exec:
                                          type: object
                                          properties:
                                            command:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                Command is the command line to execute
                                                inside the container, the working
                                                directory for the command  is root ('/')
                                                in the container's filesystem. The
                                                command is simply exec'd, it is not run
                                                inside a shell, so traditional shell
                                                instructions ('|', etc) won't work. To
                                                use a shell, you need to explicitly call
                                                out to that shell. Exit status of 0 is
                                                treated as live/healthy and non-zero is
                                                unhealthy.
                                          description: >-
                                            One and only one of the following should
                                            be specified. Exec specifies the action
                                            to take.
                                        httpGet:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Host name to connect to, defaults to the
                                                pod IP. You probably want to set "Host"
                                                in httpHeaders instead.
                                            path:
                                              type: string
                                              description: Path to access on the HTTP server.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Name or number of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              type: string
                                              description: >-
                                                Scheme to use for connecting to the
                                                host. Defaults to HTTP.
                                            httpHeaders:
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    type: string
                                                    description: The header field name
                                                  value:
                                                    type: string
                                                    description: The header field value
                                                description: >-
                                                  HTTPHeader describes a custom header to
                                                  be used in HTTP probes
                                              description: >-
                                                Custom headers to set in the request.
                                                HTTP allows repeated headers.
                                          description: >-
                                            HTTPGet specifies the http request to
                                            perform.
                                        tcpSocket:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Optional: Host name to connect to,
                                                defaults to the pod IP.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Number or name of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          description: >-
                                            TCPSocket specifies an action involving
                                            a TCP port. TCP hooks not yet supported
                                            TODO: implement a realistic TCP
                                            lifecycle hook
                                        periodSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            How often (in seconds) to perform the
                                            probe. Default to 10 seconds. Minimum
                                            value is 1.
                                        timeoutSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after which the probe
                                            times out. Defaults to 1 second. Minimum
                                            value is 1. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        failureThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive failures for the
                                            probe to be considered failed after
                                            having succeeded. Defaults to 3. Minimum
                                            value is 1.
                                        successThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive successes for the
                                            probe to be considered successful after
                                            having failed. Defaults to 1. Must be 1
                                            for liveness and startup. Minimum value
                                            is 1.
                                        initialDelaySeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after the container
                                            has started before liveness probes are
                                            initiated. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      description: >-
                                        Probes are not allowed for ephemeral
                                        containers.
                                    volumeMounts:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - mountPath
                                          - name
                                        properties:
                                          name:
                                            type: string
                                            description: This must match the Name of a Volume.
                                          subPath:
                                            type: string
                                            description: >-
                                              Path within the volume from which the
                                              container's volume should be mounted.
                                              Defaults to "" (volume's root).
                                          readOnly:
                                            type: boolean
                                            description: >-
                                              Mounted read-only if true, read-write
                                              otherwise (false or unspecified).
                                              Defaults to false.
                                          mountPath:
                                            type: string
                                            description: >-
                                              Path within the container at which the
                                              volume should be mounted.  Must not
                                              contain ':'.
                                          subPathExpr:
                                            type: string
                                            description: >-
                                              Expanded path within the volume from
                                              which the container's volume should be
                                              mounted. Behaves similarly to SubPath
                                              but environment variable references
                                              $(VAR_NAME) are expanded using the
                                              container's environment. Defaults to ""
                                              (volume's root). SubPathExpr and SubPath
                                              are mutually exclusive.
                                          mountPropagation:
                                            type: string
                                            description: >-
                                              mountPropagation determines how mounts
                                              are propagated from the host to
                                              container and the other way around. When
                                              not set, MountPropagationNone is used.
                                              This field is beta in 1.10.
                                        description: >-
                                          VolumeMount describes a mounting of a
                                          Volume within a container.
                                      description: >-
                                        Pod volumes to mount into the
                                        container's filesystem. Cannot be
                                        updated.
                                    livenessProbe:
                                      type: object
                                      properties:
                                        exec:
                                          type: object
                                          properties:
                                            command:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                Command is the command line to execute
                                                inside the container, the working
                                                directory for the command  is root ('/')
                                                in the container's filesystem. The
                                                command is simply exec'd, it is not run
                                                inside a shell, so traditional shell
                                                instructions ('|', etc) won't work. To
                                                use a shell, you need to explicitly call
                                                out to that shell. Exit status of 0 is
                                                treated as live/healthy and non-zero is
                                                unhealthy.
                                          description: >-
                                            One and only one of the following should
                                            be specified. Exec specifies the action
                                            to take.
                                        httpGet:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Host name to connect to, defaults to the
                                                pod IP. You probably want to set "Host"
                                                in httpHeaders instead.
                                            path:
                                              type: string
                                              description: Path to access on the HTTP server.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Name or number of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              type: string
                                              description: >-
                                                Scheme to use for connecting to the
                                                host. Defaults to HTTP.
                                            httpHeaders:
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    type: string
                                                    description: The header field name
                                                  value:
                                                    type: string
                                                    description: The header field value
                                                description: >-
                                                  HTTPHeader describes a custom header to
                                                  be used in HTTP probes
                                              description: >-
                                                Custom headers to set in the request.
                                                HTTP allows repeated headers.
                                          description: >-
                                            HTTPGet specifies the http request to
                                            perform.
                                        tcpSocket:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Optional: Host name to connect to,
                                                defaults to the pod IP.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Number or name of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          description: >-
                                            TCPSocket specifies an action involving
                                            a TCP port. TCP hooks not yet supported
                                            TODO: implement a realistic TCP
                                            lifecycle hook
                                        periodSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            How often (in seconds) to perform the
                                            probe. Default to 10 seconds. Minimum
                                            value is 1.
                                        timeoutSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after which the probe
                                            times out. Defaults to 1 second. Minimum
                                            value is 1. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        failureThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive failures for the
                                            probe to be considered failed after
                                            having succeeded. Defaults to 3. Minimum
                                            value is 1.
                                        successThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive successes for the
                                            probe to be considered successful after
                                            having failed. Defaults to 1. Must be 1
                                            for liveness and startup. Minimum value
                                            is 1.
                                        initialDelaySeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after the container
                                            has started before liveness probes are
                                            initiated. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      description: >-
                                        Probes are not allowed for ephemeral
                                        containers.
                                    volumeDevices:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - devicePath
                                          - name
                                        properties:
                                          name:
                                            type: string
                                            description: >-
                                              name must match the name of a
                                              persistentVolumeClaim in the pod
                                          devicePath:
                                            type: string
                                            description: >-
                                              devicePath is the path inside of the
                                              container that the device will be mapped
                                              to.
                                        description: >-
                                          volumeDevice describes a mapping of a
                                          raw block device within a container.
                                      description: >-
                                        volumeDevices is the list of block
                                        devices to be used by the container.
                                    readinessProbe:
                                      type: object
                                      properties:
                                        exec:
                                          type: object
                                          properties:
                                            command:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                Command is the command line to execute
                                                inside the container, the working
                                                directory for the command  is root ('/')
                                                in the container's filesystem. The
                                                command is simply exec'd, it is not run
                                                inside a shell, so traditional shell
                                                instructions ('|', etc) won't work. To
                                                use a shell, you need to explicitly call
                                                out to that shell. Exit status of 0 is
                                                treated as live/healthy and non-zero is
                                                unhealthy.
                                          description: >-
                                            One and only one of the following should
                                            be specified. Exec specifies the action
                                            to take.
                                        httpGet:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Host name to connect to, defaults to the
                                                pod IP. You probably want to set "Host"
                                                in httpHeaders instead.
                                            path:
                                              type: string
                                              description: Path to access on the HTTP server.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Name or number of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              type: string
                                              description: >-
                                                Scheme to use for connecting to the
                                                host. Defaults to HTTP.
                                            httpHeaders:
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - name
                                                  - value
                                                properties:
                                                  name:
                                                    type: string
                                                    description: The header field name
                                                  value:
                                                    type: string
                                                    description: The header field value
                                                description: >-
                                                  HTTPHeader describes a custom header to
                                                  be used in HTTP probes
                                              description: >-
                                                Custom headers to set in the request.
                                                HTTP allows repeated headers.
                                          description: >-
                                            HTTPGet specifies the http request to
                                            perform.
                                        tcpSocket:
                                          type: object
                                          required:
                                            - port
                                          properties:
                                            host:
                                              type: string
                                              description: >-
                                                Optional: Host name to connect to,
                                                defaults to the pod IP.
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: >-
                                                Number or name of the port to access on
                                                the container. Number must be in the
                                                range 1 to 65535. Name must be an
                                                IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          description: >-
                                            TCPSocket specifies an action involving
                                            a TCP port. TCP hooks not yet supported
                                            TODO: implement a realistic TCP
                                            lifecycle hook
                                        periodSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            How often (in seconds) to perform the
                                            probe. Default to 10 seconds. Minimum
                                            value is 1.
                                        timeoutSeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after which the probe
                                            times out. Defaults to 1 second. Minimum
                                            value is 1. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        failureThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive failures for the
                                            probe to be considered failed after
                                            having succeeded. Defaults to 3. Minimum
                                            value is 1.
                                        successThreshold:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Minimum consecutive successes for the
                                            probe to be considered successful after
                                            having failed. Defaults to 1. Must be 1
                                            for liveness and startup. Minimum value
                                            is 1.
                                        initialDelaySeconds:
                                          type: integer
                                          format: int32
                                          description: >-
                                            Number of seconds after the container
                                            has started before liveness probes are
                                            initiated. More info:
                                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      description: >-
                                        Probes are not allowed for ephemeral
                                        containers.
                                    imagePullPolicy:
                                      type: string
                                      description: >-
                                        Image pull policy. One of Always, Never,
                                        IfNotPresent. Defaults to Always if
                                        :latest tag is specified, or
                                        IfNotPresent otherwise. Cannot be
                                        updated. More info:
                                        https://kubernetes.io/docs/concepts/containers/images#updating-images
                                    securityContext:
                                      type: object
                                      properties:
                                        procMount:
                                          type: string
                                          description: >-
                                            procMount denotes the type of proc mount
                                            to use for the containers. The default
                                            is DefaultProcMount which uses the
                                            container runtime defaults for readonly
                                            paths and masked paths. This requires
                                            the ProcMountType feature flag to be
                                            enabled.
                                        runAsUser:
                                          type: integer
                                          format: int64
                                          description: >-
                                            The UID to run the entrypoint of the
                                            container process. Defaults to user
                                            specified in image metadata if
                                            unspecified. May also be set in
                                            PodSecurityContext.  If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                        privileged:
                                          type: boolean
                                          description: >-
                                            Run container in privileged mode.
                                            Processes in privileged containers are
                                            essentially equivalent to root on the
                                            host. Defaults to false.
                                        runAsGroup:
                                          type: integer
                                          format: int64
                                          description: >-
                                            The GID to run the entrypoint of the
                                            container process. Uses runtime default
                                            if unset. May also be set in
                                            PodSecurityContext.  If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                        capabilities:
                                          type: object
                                          properties:
                                            add:
                                              type: array
                                              items:
                                                type: string
                                                description: >-
                                                  Capability represent POSIX capabilities
                                                  type
                                              description: Added capabilities
                                            drop:
                                              type: array
                                              items:
                                                type: string
                                                description: >-
                                                  Capability represent POSIX capabilities
                                                  type
                                              description: Removed capabilities
                                          description: >-
                                            The capabilities to add/drop when
                                            running containers. Defaults to the
                                            default set of capabilities granted by
                                            the container runtime.
                                        runAsNonRoot:
                                          type: boolean
                                          description: >-
                                            Indicates that the container must run as
                                            a non-root user. If true, the Kubelet
                                            will validate the image at runtime to
                                            ensure that it does not run as UID 0
                                            (root) and fail to start the container
                                            if it does. If unset or false, no such
                                            validation will be performed. May also
                                            be set in PodSecurityContext.  If set in
                                            both SecurityContext and
                                            PodSecurityContext, the value specified
                                            in SecurityContext takes precedence.
                                        seLinuxOptions:
                                          type: object
                                          properties:
                                            role:
                                              type: string
                                              description: >-
                                                Role is a SELinux role label that
                                                applies to the container.
                                            type:
                                              type: string
                                              description: >-
                                                Type is a SELinux type label that
                                                applies to the container.
                                            user:
                                              type: string
                                              description: >-
                                                User is a SELinux user label that
                                                applies to the container.
                                            level:
                                              type: string
                                              description: >-
                                                Level is SELinux level label that
                                                applies to the container.
                                          description: >-
                                            The SELinux context to be applied to the
                                            container. If unspecified, the container
                                            runtime will allocate a random SELinux
                                            context for each container.  May also be
                                            set in PodSecurityContext.  If set in
                                            both SecurityContext and
                                            PodSecurityContext, the value specified
                                            in SecurityContext takes precedence.
                                        seccompProfile:
                                          type: object
                                          required:
                                            - type
                                          properties:
                                            type:
                                              type: string
                                              description: >-
                                                type indicates which kind of seccomp
                                                profile will be applied. Valid options
                                                are: 
                                                 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                                            localhostProfile:
                                              type: string
                                              description: >-
                                                localhostProfile indicates a profile
                                                defined in a file on the node should be
                                                used. The profile must be preconfigured
                                                on the node to work. Must be a
                                                descending path, relative to the
                                                kubelet's configured seccomp profile
                                                location. Must only be set if type is
                                                "Localhost".
                                          description: >-
                                            The seccomp options to use by this
                                            container. If seccomp options are
                                            provided at both the pod & container
                                            level, the container options override
                                            the pod options.
                                        windowsOptions:
                                          type: object
                                          properties:
                                            runAsUserName:
                                              type: string
                                              description: >-
                                                The UserName in Windows to run the
                                                entrypoint of the container process.
                                                Defaults to the user specified in image
                                                metadata if unspecified. May also be set
                                                in PodSecurityContext. If set in both
                                                SecurityContext and PodSecurityContext,
                                                the value specified in SecurityContext
                                                takes precedence.
                                            gmsaCredentialSpec:
                                              type: string
                                              description: >-
                                                GMSACredentialSpec is where the GMSA
                                                admission webhook
                                                (https://github.com/kubernetes-sigs/windows-gmsa)
                                                inlines the contents of the GMSA
                                                credential spec named by the
                                                GMSACredentialSpecName field.
                                            gmsaCredentialSpecName:
                                              type: string
                                              description: >-
                                                GMSACredentialSpecName is the name of
                                                the GMSA credential spec to use.
                                          description: >-
                                            The Windows specific settings applied to
                                            all containers. If unspecified, the
                                            options from the PodSecurityContext will
                                            be used. If set in both SecurityContext
                                            and PodSecurityContext, the value
                                            specified in SecurityContext takes
                                            precedence.
                                        readOnlyRootFilesystem:
                                          type: boolean
                                          description: >-
                                            Whether this container has a read-only
                                            root filesystem. Default is false.
                                        allowPrivilegeEscalation:
                                          type: boolean
                                          description: >-
                                            AllowPrivilegeEscalation controls
                                            whether a process can gain more
                                            privileges than its parent process. This
                                            bool directly controls if the
                                            no_new_privs flag will be set on the
                                            container process.
                                            AllowPrivilegeEscalation is true always
                                            when the container is: 1) run as
                                            Privileged 2) has CAP_SYS_ADMIN
                                      description: >-
                                        SecurityContext is not allowed for
                                        ephemeral containers.
                                    targetContainerName:
                                      type: string
                                      description: >-
                                        If set, the name of the container from
                                        PodSpec that this ephemeral container
                                        targets. The ephemeral container will be
                                        run in the namespaces (IPC, PID, etc) of
                                        this container. If not set then the
                                        ephemeral container is run in whatever
                                        namespaces are shared for the pod. Note
                                        that the container runtime must support
                                        this feature.
                                    terminationMessagePath:
                                      type: string
                                      description: >-
                                        Optional: Path at which the file to
                                        which the container's termination
                                        message will be written is mounted into
                                        the container's filesystem. Message
                                        written is intended to be brief final
                                        status, such as an assertion failure
                                        message. Will be truncated by the node
                                        if greater than 4096 bytes. The total
                                        message length across all containers
                                        will be limited to 12kb. Defaults to
                                        /dev/termination-log. Cannot be updated.
                                    terminationMessagePolicy:
                                      type: string
                                      description: >-
                                        Indicate how the termination message
                                        should be populated. File will use the
                                        contents of terminationMessagePath to
                                        populate the container status message on
                                        both success and failure.
                                        FallbackToLogsOnError will use the last
                                        chunk of container log output if the
                                        termination message file is empty and
                                        the container exited with an error. The
                                        log output is limited to 2048 bytes or
                                        80 lines, whichever is smaller. Defaults
                                        to File. Cannot be updated.
                                  description: >-
                                    An EphemeralContainer is a container that
                                    may be added temporarily to an existing pod
                                    for user-initiated activities such as
                                    debugging. Ephemeral containers have no
                                    resource or scheduling guarantees, and they
                                    will not be restarted when they exit or when
                                    a pod is removed or restarted. If an
                                    ephemeral container causes a pod to exceed
                                    its resource allocation, the pod may be
                                    evicted. Ephemeral containers may not be
                                    added by directly updating the pod spec.
                                    They must be added via the pod's
                                    ephemeralcontainers subresource, and they
                                    will appear in the pod spec once added. This
                                    is an alpha feature enabled by the
                                    EphemeralContainers feature flag.
                                description: >-
                                  List of ephemeral containers run in this pod.
                                  Ephemeral containers may be run in an existing
                                  pod to perform user-initiated actions such as
                                  debugging. This list cannot be specified when
                                  creating a pod, and it cannot be modified by
                                  updating the pod spec. In order to add an
                                  ephemeral container to an existing pod, use
                                  the pod's ephemeralcontainers subresource.
                                  This field is alpha-level and is only honored
                                  by servers that enable the EphemeralContainers
                                  feature.
                              activeDeadlineSeconds:
                                type: integer
                                format: int64
                                description: >-
                                  Optional duration in seconds the pod may be
                                  active on the node relative to StartTime
                                  before the system will actively try to mark it
                                  failed and kill associated containers. Value
                                  must be a positive integer.
                              shareProcessNamespace:
                                type: boolean
                                description: >-
                                  Share a single process namespace between all
                                  of the containers in a pod. When this is set
                                  containers will be able to view and signal
                                  processes from other containers in the same
                                  pod, and the first process in each container
                                  will not be assigned PID 1. HostPID and
                                  ShareProcessNamespace cannot both be set.
                                  Optional: Default to false.
                              topologySpreadConstraints:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - maxSkew
                                    - topologyKey
                                    - whenUnsatisfiable
                                  properties:
                                    maxSkew:
                                      type: integer
                                      format: int32
                                      description: >-
                                        MaxSkew describes the degree to which
                                        pods may be unevenly distributed. When
                                        `whenUnsatisfiable=DoNotSchedule`, it is
                                        the maximum permitted difference between
                                        the number of matching pods in the
                                        target topology and the global minimum.
                                        For example, in a 3-zone cluster,
                                        MaxSkew is set to 1, and pods with the
                                        same labelSelector spread as 1/1/0: |
                                        zone1 | zone2 | zone3 | |   P   |   P  
                                        |       | - if MaxSkew is 1, incoming
                                        pod can only be scheduled to zone3 to
                                        become 1/1/1; scheduling it onto
                                        zone1(zone2) would make the
                                        ActualSkew(2-0) on zone1(zone2) violate
                                        MaxSkew(1). - if MaxSkew is 2, incoming
                                        pod can be scheduled onto any zone. When
                                        `whenUnsatisfiable=ScheduleAnyway`, it
                                        is used to give higher precedence to
                                        topologies that satisfy it. It's a
                                        required field. Default value is 1 and 0
                                        is not allowed.
                                    topologyKey:
                                      type: string
                                      description: >-
                                        TopologyKey is the key of node labels.
                                        Nodes that have a label with this key
                                        and identical values are considered to
                                        be in the same topology. We consider
                                        each <key, value> as a "bucket", and try
                                        to put balanced number of pods into each
                                        bucket. It's a required field.
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchLabels:
                                          type: object
                                          description: >-
                                            matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the
                                            matchLabels map is equivalent to an
                                            element of matchExpressions, whose key
                                            field is "key", the operator is "In",
                                            and the values array contains only
                                            "value". The requirements are ANDed.
                                          additionalProperties:
                                            type: string
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - key
                                              - operator
                                            properties:
                                              key:
                                                type: string
                                                description: >-
                                                  key is the label key that the selector
                                                  applies to.
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                                description: >-
                                                  values is an array of string values. If
                                                  the operator is In or NotIn, the values
                                                  array must be non-empty. If the operator
                                                  is Exists or DoesNotExist, the values
                                                  array must be empty. This array is
                                                  replaced during a strategic merge patch.
                                              operator:
                                                type: string
                                                description: >-
                                                  operator represents a key's relationship
                                                  to a set of values. Valid operators are
                                                  In, NotIn, Exists and DoesNotExist.
                                            description: >-
                                              A label selector requirement is a
                                              selector that contains values, a key,
                                              and an operator that relates the key and
                                              values.
                                          description: >-
                                            matchExpressions is a list of label
                                            selector requirements. The requirements
                                            are ANDed.
                                      description: >-
                                        LabelSelector is used to find matching
                                        pods. Pods that match this label
                                        selector are counted to determine the
                                        number of pods in their corresponding
                                        topology domain.
                                    whenUnsatisfiable:
                                      type: string
                                      description: >-
                                        WhenUnsatisfiable indicates how to deal
                                        with a pod if it doesn't satisfy the
                                        spread constraint. - DoNotSchedule
                                        (default) tells the scheduler not to
                                        schedule it. - ScheduleAnyway tells the
                                        scheduler to schedule the pod in any
                                        location,   but giving higher precedence
                                        to topologies that would help reduce
                                        the   skew. A constraint is considered
                                        "Unsatisfiable" for an incoming pod if
                                        and only if every possible node
                                        assigment for that pod would violate
                                        "MaxSkew" on some topology. For example,
                                        in a 3-zone cluster, MaxSkew is set to
                                        1, and pods with the same labelSelector
                                        spread as 3/1/1: | zone1 | zone2 | zone3
                                        | | P P P |   P   |   P   | If
                                        WhenUnsatisfiable is set to
                                        DoNotSchedule, incoming pod can only be
                                        scheduled to zone2(zone3) to become
                                        3/2/1(3/1/2) as ActualSkew(2-1) on
                                        zone2(zone3) satisfies MaxSkew(1). In
                                        other words, the cluster can still be
                                        imbalanced, but scheduler won't make it
                                        *more* imbalanced. It's a required
                                        field.
                                  description: >-
                                    TopologySpreadConstraint specifies how to
                                    spread matching pods among the given
                                    topology.
                                description: >-
                                  TopologySpreadConstraints describes how a
                                  group of pods ought to spread across topology
                                  domains. Scheduler will schedule pods in a way
                                  which abides by the constraints. All
                                  topologySpreadConstraints are ANDed.
                                x-kubernetes-list-type: map
                                x-kubernetes-list-map-keys:
                                  - topologyKey
                                  - whenUnsatisfiable
                              automountServiceAccountToken:
                                type: boolean
                                description: >-
                                  AutomountServiceAccountToken indicates whether
                                  a service account token should be
                                  automatically mounted.
                              terminationGracePeriodSeconds:
                                type: integer
                                format: int64
                                description: >-
                                  Optional duration in seconds the pod needs to
                                  terminate gracefully. May be decreased in
                                  delete request. Value must be non-negative
                                  integer. The value zero indicates delete
                                  immediately. If this value is nil, the default
                                  grace period will be used instead. The grace
                                  period is the duration in seconds after the
                                  processes running in the pod are sent a
                                  termination signal and the time when the
                                  processes are forcibly halted with a kill
                                  signal. Set this value longer than the
                                  expected cleanup time for your process.
                                  Defaults to 30 seconds.
                            description: >-
                              Specification of the desired behavior of the pod.
                              More info:
                              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                          metadata:
                            type: object
                            description: >-
                              Standard object's metadata. More info:
                              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                        description: >-
                          Specifies the pod that will be created for this
                          TaskSpec when executing a Job
                      minAvailable:
                        type: integer
                        format: int32
                        description: >-
                          The minimal available pods to run for this Task
                          Defaults to the task replicas
                      topologyPolicy:
                        type: string
                        description: Specifies the topology policy of task
                    description: TaskSpec specifies the task specification of Job.
                  description: Tasks specifies the task specification of Job
                plugins:
                  type: object
                  description: >-
                    Specifies the plugin of job Key is plugin name, value is the
                    arguments of the plugin
                  additionalProperties:
                    type: array
                    items:
                      type: string
                volumes:
                  type: array
                  items:
                    type: object
                    required:
                      - mountPath
                    properties:
                      mountPath:
                        type: string
                        description: >-
                          Path within the container at which the volume should
                          be mounted.  Must not contain ':'.
                      volumeClaim:
                        type: object
                        properties:
                          selector:
                            type: object
                            properties:
                              matchLabels:
                                type: object
                                description: >-
                                  matchLabels is a map of {key,value} pairs. A
                                  single {key,value} in the matchLabels map is
                                  equivalent to an element of matchExpressions,
                                  whose key field is "key", the operator is
                                  "In", and the values array contains only
                                  "value". The requirements are ANDed.
                                additionalProperties:
                                  type: string
                              matchExpressions:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      type: string
                                      description: >-
                                        key is the label key that the selector
                                        applies to.
                                    values:
                                      type: array
                                      items:
                                        type: string
                                      description: >-
                                        values is an array of string values. If
                                        the operator is In or NotIn, the values
                                        array must be non-empty. If the operator
                                        is Exists or DoesNotExist, the values
                                        array must be empty. This array is
                                        replaced during a strategic merge patch.
                                    operator:
                                      type: string
                                      description: >-
                                        operator represents a key's relationship
                                        to a set of values. Valid operators are
                                        In, NotIn, Exists and DoesNotExist.
                                  description: >-
                                    A label selector requirement is a selector
                                    that contains values, a key, and an operator
                                    that relates the key and values.
                                description: >-
                                  matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                            description: >-
                              A label query over volumes to consider for
                              binding.
                          resources:
                            type: object
                            properties:
                              limits:
                                type: object
                                description: >-
                                  Limits describes the maximum amount of compute
                                  resources allowed. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: >-
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              requests:
                                type: object
                                description: >-
                                  Requests describes the minimum amount of
                                  compute resources required. If Requests is
                                  omitted for a container, it defaults to Limits
                                  if that is explicitly specified, otherwise to
                                  an implementation-defined value. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: >-
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                            description: >-
                              Resources represents the minimum resources the
                              volume should have. More info:
                              https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                          dataSource:
                            type: object
                            required:
                              - kind
                              - name
                            properties:
                              kind:
                                type: string
                                description: Kind is the type of resource being referenced
                              name:
                                type: string
                                description: Name is the name of resource being referenced
                              apiGroup:
                                type: string
                                description: >-
                                  APIGroup is the group for the resource being
                                  referenced. If APIGroup is not specified, the
                                  specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is
                                  required.
                            description: >-
                              This field can be used to specify either: * An
                              existing VolumeSnapshot object
                              (snapshot.storage.k8s.io/VolumeSnapshot - Beta) *
                              An existing PVC (PersistentVolumeClaim) * An
                              existing custom resource/object that implements
                              data population (Alpha) In order to use
                              VolumeSnapshot object types, the appropriate
                              feature gate must be enabled
                              (VolumeSnapshotDataSource or AnyVolumeDataSource)
                              If the provisioner or an external controller can
                              support the specified data source, it will create
                              a new volume based on the contents of the
                              specified data source. If the specified data
                              source is not supported, the volume will not be
                              created and the failure will be reported as an
                              event. In the future, we plan to support more data
                              source types and the behavior of the provisioner
                              may change.
                          volumeMode:
                            type: string
                            description: >-
                              volumeMode defines what type of volume is required
                              by the claim. Value of Filesystem is implied when
                              not included in claim spec.
                          volumeName:
                            type: string
                            description: >-
                              VolumeName is the binding reference to the
                              PersistentVolume backing this claim.
                          accessModes:
                            type: array
                            items:
                              type: string
                            description: >-
                              AccessModes contains the desired access modes the
                              volume should have. More info:
                              https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                          storageClassName:
                            type: string
                            description: >-
                              Name of the StorageClass required by the claim.
                              More info:
                              https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                        description: VolumeClaim defines the PVC used by the VolumeMount.
                      volumeClaimName:
                        type: string
                        description: defined the PVC name
                    description: 'VolumeSpec defines the specification of Volume, e.g. PVC.'
                  description: The volumes mount on Job
                maxRetry:
                  type: integer
                  format: int32
                  description: >-
                    Specifies the maximum number of retries before marking this
                    Job failed. Defaults to 3.
                policies:
                  type: array
                  items:
                    type: object
                    properties:
                      event:
                        type: string
                        description: >-
                          The Event recorded by scheduler; the controller takes
                          actions according to this Event.
                      action:
                        type: string
                        description: >-
                          The action that will be taken to the PodGroup
                          according to Event. One of "Restart", "None". Default
                          to None.
                      events:
                        type: array
                        items:
                          type: string
                          description: 'Event represent the phase of Job, e.g. pod-failed.'
                        description: >-
                          The Events recorded by scheduler; the controller takes
                          actions according to this Events.
                      timeout:
                        type: string
                        description: >-
                          Timeout is the grace period for controller to take
                          actions. Default to nil (take action immediately).
                      exitCode:
                        type: integer
                        format: int32
                        description: >-
                          The exit code of the pod container, controller will
                          take action according to this code. Note: only one of
                          `Event` or `ExitCode` can be specified.
                    description: >-
                      LifecyclePolicy specifies the lifecycle and error handling
                      of task and job.
                  description: Specifies the default lifecycle of tasks
                minSuccess:
                  type: integer
                  format: int32
                  minimum: 1
                  description: The minimal success pods to run for this Job
                minAvailable:
                  type: integer
                  format: int32
                  description: >-
                    The minimal available pods to run for this Job Defaults to
                    the summary of tasks' replicas
                schedulerName:
                  type: string
                  description: >-
                    SchedulerName is the default value of
                    `tasks.template.spec.schedulerName`.
                runningEstimate:
                  type: string
                  description: >-
                    Running Estimate is a user running duration estimate for the
                    job Default to nil
                priorityClassName:
                  type: string
                  description: 'If specified, indicates the job''s priority.'
                ttlSecondsAfterFinished:
                  type: integer
                  format: int32
                  description: >-
                    ttlSecondsAfterFinished limits the lifetime of a Job that
                    has finished execution (either Completed or Failed). If this
                    field is set, ttlSecondsAfterFinished after the Job
                    finishes, it is eligible to be automatically deleted. If
                    this field is unset, the Job won't be automatically deleted.
                    If this field is set to zero, the Job becomes eligible to be
                    deleted immediately after it finishes.
              description: >-
                Specification of the desired behavior of the volcano job,
                including the minAvailable
            status:
              type: object
              properties:
                state:
                  type: object
                  properties:
                    phase:
                      type: string
                      description: The phase of Job.
                    reason:
                      type: string
                      description: >-
                        Unique, one-word, CamelCase reason for the phase's last
                        transition.
                    message:
                      type: string
                      description: >-
                        Human-readable message indicating details about last
                        transition.
                    lastTransitionTime:
                      type: string
                      format: date-time
                      description: >-
                        Last time the condition transit from one phase to
                        another.
                  description: Current state of Job.
                failed:
                  type: integer
                  format: int32
                  description: The number of pods which reached phase Failed.
                pending:
                  type: integer
                  format: int32
                  description: The number of pending pods.
                running:
                  type: integer
                  format: int32
                  description: The number of running pods.
                unknown:
                  type: integer
                  format: int32
                  description: The number of pods which reached phase Unknown.
                version:
                  type: integer
                  format: int32
                  description: Current version of job
                succeeded:
                  type: integer
                  format: int32
                  description: The number of pods which reached phase Succeeded.
                retryCount:
                  type: integer
                  format: int32
                  description: The number of Job retries.
                terminating:
                  type: integer
                  format: int32
                  description: The number of pods which reached phase Terminating.
                minAvailable:
                  type: integer
                  format: int32
                  description: The minimal available pods to run for this Job
                runningDuration:
                  type: string
                  description: >-
                    The job running duration is the length of time from job
                    running to complete.
                taskStatusCount:
                  type: object
                  description: The status of pods for each task
                  additionalProperties:
                    type: object
                    properties:
                      phase:
                        type: object
                        description: The phase of Task.
                        additionalProperties:
                          type: integer
                          format: int32
                    description: >-
                      TaskState contains details for the current state of the
                      task.
                controlledResources:
                  type: object
                  description: >-
                    The resources that controlled by this job, e.g. Service,
                    ConfigMap
                  additionalProperties:
                    type: string
              description: Current status of the volcano Job
            metadata:
              type: object
            apiVersion:
              type: string
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          description: Job defines the volcano job.
      served: true
      storage: true
      subresources:
        status: {}
  conversion:
    strategy: None
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: podgroups.scheduling.volcano.sh
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
spec:
  group: scheduling.volcano.sh
  names:
    kind: PodGroup
    plural: podgroups
    listKind: PodGroupList
    singular: podgroup
    shortNames:
      - pg
      - podgroup-v1beta1
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            kind:
              type: string
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            spec:
              type: object
              properties:
                queue:
                  type: string
                  description: >-
                    Queue defines the queue to allocate resource for PodGroup;
                    if queue does not exist, the PodGroup will not be scheduled.
                    Defaults to `default` Queue with the lowest weight.
                minMember:
                  type: integer
                  format: int32
                  description: >-
                    MinMember defines the minimal number of members/tasks to run
                    the pod group; if there's not enough resources to start all
                    tasks, the scheduler will not start anyone.
                minResources:
                  type: object
                  description: >-
                    MinResources defines the minimal resource of members/tasks
                    to run the pod group; if there's not enough resources to
                    start all tasks, the scheduler will not start anyone.
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: >-
                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                minTaskMember:
                  type: object
                  description: >-
                    MinTaskMember defines the minimal number of pods to run each
                    task in the pod group; if there's not enough resources to
                    start each task, the scheduler will not start anyone.
                  additionalProperties:
                    type: integer
                    format: int32
                priorityClassName:
                  type: string
                  description: >-
                    If specified, indicates the PodGroup's priority.
                    "system-node-critical" and "system-cluster-critical" are two
                    special keywords which indicate the highest priorities with
                    the former being the highest priority. Any other name must
                    be defined by creating a PriorityClass object with that
                    name. If not specified, the PodGroup priority will be
                    default or zero if there is no default.
              description: >-
                Specification of the desired behavior of the pod group. More
                info:
                https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            status:
              type: object
              properties:
                phase:
                  type: string
                  description: Current phase of PodGroup.
                failed:
                  type: integer
                  format: int32
                  description: The number of pods which reached phase Failed.
                running:
                  type: integer
                  format: int32
                  description: The number of actively running pods.
                succeeded:
                  type: integer
                  format: int32
                  description: The number of pods which reached phase Succeeded.
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        description: Type is the type of the condition
                      reason:
                        type: string
                        description: >-
                          Unique, one-word, CamelCase reason for the phase's
                          last transition.
                      status:
                        type: string
                        description: Status is the status of the condition.
                      message:
                        type: string
                        description: >-
                          Human-readable message indicating details about last
                          transition.
                      transitionID:
                        type: string
                        description: The ID of condition transition.
                      lastTransitionTime:
                        type: string
                        format: date-time
                        description: >-
                          Last time the phase transitioned from another to
                          current phase.
                    description: >-
                      PodGroupCondition contains details for the current state
                      of this pod group.
                  description: The conditions of PodGroup.
              description: >-
                Status represents the current information about a pod group.
                This data may not be up to date.
            metadata:
              type: object
            apiVersion:
              type: string
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          description: PodGroup is a collection of Pod; used for batch workload.
      served: true
      storage: true
  conversion:
    strategy: None
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: queues.scheduling.volcano.sh
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
spec:
  group: scheduling.volcano.sh
  names:
    kind: Queue
    plural: queues
    listKind: QueueList
    singular: queue
    shortNames:
      - q
      - queue-v1beta1
  scope: Cluster
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            kind:
              type: string
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            spec:
              type: object
              properties:
                weight:
                  type: integer
                  format: int32
                capability:
                  type: object
                  description: 'ResourceList is a set of (resource name, quantity) pairs.'
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: >-
                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                reclaimable:
                  type: boolean
                  description: >-
                    Reclaimable indicate whether the queue can be reclaimed by
                    other queue
              description: >-
                Specification of the desired behavior of the queue. More info:
                https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
            status:
              type: object
              properties:
                state:
                  type: string
                  description: State is state of queue
                inqueue:
                  type: integer
                  format: int32
                  description: The number of `Inqueue` PodGroup in this queue.
                pending:
                  type: integer
                  format: int32
                  description: The number of 'Pending' PodGroup in this queue.
                running:
                  type: integer
                  format: int32
                  description: The number of 'Running' PodGroup in this queue.
                unknown:
                  type: integer
                  format: int32
                  description: The number of 'Unknown' PodGroup in this queue.
              description: The status of queue.
            metadata:
              type: object
            apiVersion:
              type: string
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          description: Queue is a queue of PodGroup.
      served: true
      storage: true
      subresources:
        status: {}
  conversion:
    strategy: None
---