---
# Source: pfchart/charts/paddleflow-server/templates/ServiceAccount-paddleflow-server.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: paddleflow-server
  namespace: 'paddleflow'
---
# Source: pfchart/charts/paddleflow-server/templates/paddleflow-server-secret.yaml
kind: Secret
apiVersion: v1
metadata:
    labels:
        app: 'paddleflow-server'
        app.kubernetes.io/instance: 'paddleflow-server'
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/name: 'paddleflow-server'
        chart: 'paddleflow-server-0.10.61-rrnw8z'
        helm.sh/chart: 'paddleflow-server-0.10.61-rrnw8z'
        heritage: 'Helm'
        release: 'paddleflow-server'
    name: 'paddleflow-server'
data: {}
---
# Source: pfchart/charts/paddleflow-server/templates/paddleflow-server-configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
    labels:
        app: 'paddleflow-server'
        app.kubernetes.io/instance: 'paddleflow-server'
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/name: 'paddleflow-server'
        chart: 'paddleflow-server-0.10.61-rrnw8z'
        helm.sh/chart: 'paddleflow-server-0.10.61-rrnw8z'
        heritage: 'Helm'
        release: 'paddleflow-server'
    name: 'paddleflow-server'
data:
    default_pv.yaml: |4-
          kind: PersistentVolume
          metadata:
            name: pfs-$(pfs.fs.id)-$(namespace)-pv
            annotations:
              pv.kubernetes.io/provisioned-by: paddleflowstorage
          spec:
            accessModes:
              - ReadWriteMany
            persistentVolumeReclaimPolicy: Delete
            storageClassName: paddleflowstorage
            capacity:
              storage: 400Gi
            csi:
              driver: paddleflowstorage
              fsType: ext4
              volumeAttributes:
                pfs.fs.id: $(pfs.fs.id)
                pfs.server: $(pfs.server)
              volumeHandle: pfs-$(pfs.fs.id)-$(namespace)-pv
    default_pvc.yaml: |4-
          kind: PersistentVolumeClaim
          metadata:
            name: pfs-$(pfs.fs.id)-pvc
            namespace: $(namespace)
          spec:
            accessModes:
              - ReadWriteMany
            resources:
              requests:
                storage: 100Gi
            storageClassName: paddleflowstorage
            volumeMode: Filesystem
            volumeName: pfs-$(pfs.fs.id)-$(namespace)-pv
    job_template.yaml: |
        apiVersion: v1
        kind: Pod
        metadata:
          name: default-name
          namespace: default
        spec:
          containers:
            - image: nginx
              imagePullPolicy: IfNotPresent
              name: job-default-name
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          priorityClassName: normal
          restartPolicy: Never
          schedulerName: volcano
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
        # single-job
        ---
        apiVersion: sparkoperator.k8s.io/v1beta2
        kind: SparkApplication
        metadata:
          name: sparkName
          namespace: default
        spec:
          driver:
            serviceAccount: spark
            terminationGracePeriodSeconds: 30
          executor:
            terminationGracePeriodSeconds: 30
          image:
          imagePullPolicy: IfNotPresent
          mainApplicationFile:
          mainClass:
          mode: cluster
          restartPolicy:
            onSubmissionFailureRetries: 3
            onSubmissionFailureRetryInterval: 5
            type: Never
          sparkConf:
            spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version: "2"
          sparkVersion: 3.0.0
          type: Scala
          batchSchedulerOptions:
            queue:
            priorityClass:
        # spark-job
        ---
        apiVersion: batch.paddlepaddle.org/v1
        kind: PaddleJob
        metadata:
          name: default-name
        spec:
          withGloo: 1
          intranet: PodIP
          cleanPodPolicy: OnCompletion
          worker:
            replicas: 2
            template:
              spec:
                containers:
                  - name: paddle
                    image: registry.baidubce.com/paddle-operator/demo-wide-and-deep:v1
                terminationGracePeriodSeconds: 30
                restartPolicy: Never
          ps:
            replicas: 2
            template:
              spec:
                containers:
                  - name: paddle
                    image: registry.baidubce.com/paddle-operator/demo-wide-and-deep:v1
                terminationGracePeriodSeconds: 30
                restartPolicy: Never
        # paddle-ps-job
        ---
        apiVersion: batch.paddlepaddle.org/v1
        kind: PaddleJob
        metadata:
          name: default-name
        spec:
          cleanPodPolicy: Never
          worker:
            replicas: 2
            template:
              spec:
                containers:
                  - name: worker-name
                    image: registry.baidubce.com/paddle-operator/demo-resnet:v1
                terminationGracePeriodSeconds: 30
                restartPolicy: Never
        # paddle-collective-job
        ---
        apiVersion: "kubeflow.org/v1"
        kind: "PyTorchJob"
        metadata:
          name: "pytorch-dist-sendrecv"
        spec:
          pytorchReplicaSpecs:
            Master:
              replicas: 1
              restartPolicy: Never
              template:
                spec:
                  containers:
                    - name: pytorch
                      command:
                        - /bin/sh
                        - -c
                        - sleep 10
                      image: paddleflow/pytorch-dist-sendrecv-test:1.12.0
            Worker:
              replicas: 1
              restartPolicy: Never
              template:
                spec:
                  containers:
                    - name: pytorch
                      command:
                        - /bin/sh
                        - -c
                        - sleep 10
                      image: paddleflow/pytorch-dist-sendrecv-test:1.12.0
        # pytorch-ps-job
        ---
        apiVersion: "kubeflow.org/v1"
        kind: "TFJob"
        metadata:
          name: "tf-mnist-dist"
        spec:
          tfReplicaSpecs:
            PS:
              replicas: 1
              restartPolicy: Never
              template:
                spec:
                  containers:
                    - name: tensorflow
                      image: tf-mnist-dist:1.2
                      command:
                        - "python"
                        - "/var/tf_dist_mnist/dist_mnist.py"
                        - "--num_gpus=0"
                        # faster trainning
                        - "--train_steps=1"
            Worker:
              replicas: 1
              restartPolicy: Never
              template:
                spec:
                  containers:
                    - name: tensorflow
                      image: tf-mnist-dist:1.2
                      command:
                        - "python"
                        - "/var/tf_dist_mnist/dist_mnist.py"
                        - "--num_gpus=0"
                        - "--train_steps=1"
        # tensorflow-ps-job
        ---
        apiVersion: ray.io/v1alpha1
        kind: RayJob
        metadata:
          name: rayjob-sample
        spec:
          entrypoint: sleep 60
          shutdownAfterJobFinishes: true
          rayClusterSpec:
            rayVersion: '2.0.0'
            enableInTreeAutoscaling: true
            headGroupSpec:
              serviceType: ClusterIP
              replicas: 1
              rayStartParams:
                node-ip-address: $MY_POD_IP
                block: 'true'
              template:
                metadata:
                  labels:
                    rayCluster: raycluster-heterogeneous
                    rayNodeType: head
                    groupName: headgroup
                  annotations:
                    key: value
                spec:
                  containers:
                    - name: ray-head
                      image: rayproject/ray:2.0.0
                      env:
                        - name: MY_POD_IP
                          valueFrom:
                            fieldRef:
                              fieldPath: status.podIP
            workerGroupSpecs:
              - replicas: 1
                minReplicas: 1
                maxReplicas: 5
                groupName: small-group
                rayStartParams:
                  node-ip-address: $MY_POD_IP
                  block: 'true'
                template:
                  metadata:
                    labels:
                      key: value
                    annotations:
                      key: value
                  spec:
                    initContainers:
                      - name: init-myservice
                        image: busybox:1
                        command: [ 'sh', '-c', "until nslookup $RAY_IP.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done" ]
                    containers:
                      - name: machine-learning
                        image: rayproject/ray:2.0.0
                        env:
                          - name: RAY_DISABLE_DOCKER_CPU_WARNING
                            value: "1"
                          - name: TYPE
                            value: "worker"
                          - name: CPU_REQUEST
                            valueFrom:
                              resourceFieldRef:
                                containerName: machine-learning
                                resource: requests.cpu
                          - name: CPU_LIMITS
                            valueFrom:
                              resourceFieldRef:
                                containerName: machine-learning
                                resource: limits.cpu
                          - name: MEMORY_LIMITS
                            valueFrom:
                              resourceFieldRef:
                                containerName: machine-learning
                                resource: limits.memory
                          - name: MEMORY_REQUESTS
                            valueFrom:
                              resourceFieldRef:
                                containerName: machine-learning
                                resource: requests.memory
                          - name: MY_POD_NAME
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.name
                          - name: MY_POD_IP
                            valueFrom:
                              fieldRef:
                                fieldPath: status.podIP
                        ports:
                          - containerPort: 80
                            name: client
                        lifecycle:
                          preStop:
                            exec:
                              command: [ "/bin/sh","-c","ray stop" ]
        # ray-job
        ---
        apiVersion: kubeflow.org/v1
        kind: MPIJob
        metadata:
          name: tensorflow-mnist
        spec:
          slotsPerWorker: 1
          runPolicy:
            cleanPodPolicy: Running
          mpiReplicaSpecs:
            Launcher:
              replicas: 1
              template:
                spec:
                  containers:
                    - image: horovod/horovod:0.20.0-tf2.3.0-torch1.6.0-mxnet1.5.0-py3.7-cpu
                      name: mpi
                      command:
                        - mpirun
                      args:
                        - -np
                        - "2"
                        - --allow-run-as-root
                        - -bind-to
                        - none
                        - -map-by
                        - slot
                        - -x
                        - LD_LIBRARY_PATH
                        - -x
                        - PATH
                        - -mca
                        - pml
                        - ob1
                        - -mca
                        - btl
                        - ^openib
                        - python
                        - /examples/tensorflow2_mnist.py
                      resources:
                        limits:
                          cpu: 1
                          memory: 2Gi
            Worker:
              replicas: 2
              template:
                spec:
                  containers:
                    - image: horovod/horovod:0.20.0-tf2.3.0-torch1.6.0-mxnet1.5.0-py3.7-cpu
                      name: mpi
                      resources:
                        limits:
                          cpu: 2
                          memory: 4Gi
        # mpi-job
        ---
    paddleserver.yaml: |
        database:
          driver: sqlite
          host: mysql-standalone
          port: 3306
          user: root
          password: Paddle@2022
          database: paddleflow
        monitor:
          server: "http://127.0.0.1:8395"
        metrics:
          port: 8231
          enable: true
        log:
          dir: ./
          filePrefix: log
          level: INFO
          maxKeepDays: 7
          maxFileNum: 7
          maxFileSizeInMB: 100
          isCompress: true
        traceLog:
          dir: ./
          filePrefix: trace-log
          level: INFO
          maxKeepDays: 7
          maxFileNum: 7
          maxFileSizeInMB: 100
          isCompress: true
          timeout: 2h
          maxCacheSize: 10000
          syncInterval: 30s
          deleteInterval: 10s
        apiServer:
          host: paddleflow-server
          port: 8999
          tokenExpirationHour: -1
        fs:
          defaultPVPath: "./config/fs/default_pv.yaml"
          defaultPVCPath: "./config/fs/default_pvc.yaml"
          servicePort: 8999
        job:
          reclaim:
            isCleanJob: true
            isSkipCleanFailedJob: false
            succeededJobTTLSeconds: 3600
            failedJobTTLSeconds: 36000
          schedulerName: volcano
          clusterSyncPeriod: 30
          defaultJobYamlDir: "./config/server/default/job"
          defaultJobYamlPath: "./config/server/default/job/job_template.yaml"
          isSingleCluster: true
        pipeline: pipeline
        imageRepository:
          server: ""
          namespace: ""
          username: ""
          password: ""
          concurrency: 10
          removeLocalImage: true
    telegraf.conf: |4
        [global_tags]
binaryData: {}
---
# Source: pfchart/charts/paddleflow-server/templates/ClusterRole-paddleflow-server.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: paddleflow-server
rules:
- apiGroups:
  - ""
  resources:
  - events
  - pods
  - pods/log
  - services
  - persistentvolumeclaims
  - persistentvolumes
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - sparkoperator.k8s.io
  - batch.paddlepaddle.org
  - scheduling.incubator.k8s.io
  - scheduling.volcano.sh
  - bus.volcano.sh
  - batch.volcano.sh
  - argoproj.io
  - kubeflow.org
  - ray.io
  resources:
  - '*'
  verbs:
  - '*'
---
# Source: pfchart/charts/paddleflow-server/templates/ClusterRoleBinding-paddleflow-server.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: paddleflow-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: paddleflow-server
subjects:
- kind: ServiceAccount
  name: paddleflow-server
  namespace: paddleflow
---
# Source: pfchart/charts/paddleflow-server/templates/paddleflow-server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: paddleflow-server
  labels:
    app: paddleflow-server
    chart: "paddleflow-server-0.10.61-rrnw8z"
    release: "paddleflow-server"
    heritage: "Helm"
    app.kubernetes.io/managed-by: 'Helm'
    app.kubernetes.io/instance: 'paddleflow-server'
    helm.sh/chart: 'paddleflow-server-0.10.61-rrnw8z'
    app.kubernetes.io/name: 'paddleflow-server'

  annotations:
spec:
  type: NodePort
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: port-0
    port: 8999
    nodePort: 8999
    protocol: TCP
    targetPort: 8999
  - name: port-2
    port: 8231
    nodePort: 8231
    protocol: TCP
    targetPort: 8231
  selector:
    app: paddleflow-server
---
# Source: pfchart/charts/paddleflow-server/templates/paddleflow-server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  #文件里的所有paddleflow-server、paddleflow_server都替换成实际名称
  name: paddleflow-server
  labels:
    app: paddleflow-server
    chart: "paddleflow-server-0.10.61-rrnw8z"
    release: "paddleflow-server"
    heritage: "Helm"
    app.kubernetes.io/managed-by: 'Helm'
    app.kubernetes.io/instance: 'paddleflow-server'
    helm.sh/chart: 'paddleflow-server-0.10.61-rrnw8z'
    app.kubernetes.io/name: 'paddleflow-server'
  annotations:
    reloader.stakater.com/auto: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paddleflow-server
  template:
    metadata:
      labels:
        app: paddleflow-server
        app.kubernetes.io/managed-by: 'Helm'
        app.kubernetes.io/instance: 'paddleflow-server'
        helm.sh/chart: 'paddleflow-server-0.10.61-rrnw8z'
        app.kubernetes.io/name: 'paddleflow-server'
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      serviceAccountName: paddleflow-server
      containers:
      - name: paddleflow-server
        image: "paddleflow/paddleflow-server:1.4.6"
        imagePullPolicy: "IfNotPresent"
        command:
        - /bin/sh
        args:
        #container_args list
          - -c
          - cd /home/paddleflow/server && ./paddleflow
        securityContext:
          privileged: false
          runAsGroup: 1000
          runAsUser: 1000
        #服务启动暴露的端口，list形式，根据服务情况增加或删减
        #注意：这个要跟paddleflow_server-service.yaml里的ports一一对应
        ports:
        #服务的环境变量，list形式，根据服务情况增加或删减
        env:
        #container_envs list
        - name: "KUBE_NODE_NAME"
          valueFrom:
              fieldRef:
                  fieldPath: spec.nodeName
          
        #注意：这里的name跟后面volumes里name是一一对应的
        volumeMounts:
        - name: conf
          #容器里配置文件存放路径
          mountPath: /home/paddleflow/server/config/server/default/paddleserver.yaml
          #容器里配置文件名称
          subPath: paddleserver.yaml
        - name: conf
          #容器里配置文件存放路径
          mountPath: /home/paddleflow/server/config/fs/default_pvc.yaml
          #容器里配置文件名称
          subPath: default_pvc.yaml
        - name: conf
          #容器里配置文件存放路径
          mountPath: /home/paddleflow/server/config/fs/default_pv.yaml
          #容器里配置文件名称
          subPath: default_pv.yaml
        - name: conf
          #容器里配置文件存放路径
          mountPath: /home/paddleflow/server/config/server/default/job/job_template.yaml
          #容器里配置文件名称
          subPath: job_template.yaml
      initContainers:
      volumes:
      - name: paddleflowdir
        hostPath: 
          path: /mnt/paddleflow
          type: DirectoryOrCreate
      # 集群已存在的configMap和secret
      - name: conf
        configMap:
          name: paddleflow-server

