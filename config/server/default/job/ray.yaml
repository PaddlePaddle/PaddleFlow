apiVersion: ray.io/v1alpha1
kind: RayJob
metadata:
  name: rayjob-sample
spec:
  entrypoint: sleep 60
  shutdownAfterJobFinishes: true
  rayClusterSpec:
    rayVersion: '2.0.0'
    enableInTreeAutoscaling: true
    headGroupSpec:
      serviceType: ClusterIP
      replicas: 1
      rayStartParams:
        node-ip-address: $MY_POD_IP
        block: 'true'
      template:
        metadata:
          labels:
            rayCluster: raycluster-heterogeneous
            rayNodeType: head
            groupName: headgroup
          annotations:
            key: value
        spec:
          containers:
            - name: ray-head
              image: rayproject/ray:2.0.0
              env:
                - name: MY_POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
    workerGroupSpecs:
      - replicas: 1
        minReplicas: 1
        maxReplicas: 5
        groupName: small-group
        rayStartParams:
          node-ip-address: $MY_POD_IP
          block: 'true'
        template:
          metadata:
            labels:
              key: value
            annotations:
              key: value
          spec:
            initContainers:
              - name: init-myservice
                image: busybox:1
                command: [ 'sh', '-c', "until nslookup $RAY_IP.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done" ]
            containers:
              - name: machine-learning
                image: rayproject/ray:2.0.0
                env:
                  - name: RAY_DISABLE_DOCKER_CPU_WARNING
                    value: "1"
                  - name: TYPE
                    value: "worker"
                  - name: CPU_REQUEST
                    valueFrom:
                      resourceFieldRef:
                        containerName: machine-learning
                        resource: requests.cpu
                  - name: CPU_LIMITS
                    valueFrom:
                      resourceFieldRef:
                        containerName: machine-learning
                        resource: limits.cpu
                  - name: MEMORY_LIMITS
                    valueFrom:
                      resourceFieldRef:
                        containerName: machine-learning
                        resource: limits.memory
                  - name: MEMORY_REQUESTS
                    valueFrom:
                      resourceFieldRef:
                        containerName: machine-learning
                        resource: requests.memory
                  - name: MY_POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: MY_POD_IP
                    valueFrom:
                      fieldRef:
                        fieldPath: status.podIP
                ports:
                  - containerPort: 80
                    name: client
                lifecycle:
                  preStop:
                    exec:
                      command: [ "/bin/sh","-c","ray stop" ]