name: myproject

docker_env: images/training.tgz

entry_points:

  data_preprocess:
    parameters:
      data_path: "./LINK/mybos_dir/data"
      process_data_file: "./data/pre"
    command: "python data_preprocess.py --input {{data_path}} --output {{process_data_file}}"
    env:
      PF_JOB_QUEUE: CPU-32G
      PF_JOB_PRIORITY: high
      PF_JOB_QUEUE_NAME: qdh
      PF_JOB_TYPE: vcjob
    artifacts:
      input:
        data1: "{{ data_path }}"
      output:
        train_data: "/path/to/{{PF_RUN_ID}}/train"
        validate_data: "/path/to/{{PF_RUN_ID}}/validate"


  main:
    deps: data_preprocess
    parameters:
      p3: {"type": "string", "default":"dictparam"}
      p4: {"type": "float", "default": 0.66}
      p5: {"type": "path", "default": "/path/to/anywhere"}
      data_file: "{{ data_preprocess.process_data_file }}"
      regularization:  0.1                                              
      model: "./data/model"
      iteration: 100
    command: "python train.py -r {{regularization}} -d {{data_file}} --output {{model}}"
    env:
      PF_JOB_QUEUE: v100-16G
      PF_JOB_QUEUE_NAME: qdh
      PF_JOB_PRIORITY: high
      PF_JOB_FLAVOUR: v100-10
      PF_JOB_TYPE: vcjob
      PF_PS_NUM: 1
      PF_WORKER_NUM: 4
    artifacts:
      input:
        train_data: "{{ data_preprocess.train_data }}"
      output:
        train_model: "{{ model }}"

  validate:
    deps: main,data_preprocess
    parameters:
      report: "./data/report"
      refSystem: "{{ PF_RUN_ID }}"
      ref: "{{ main.data_file }}"
    command: "python validate.py --model {{ main.model }} --report {{report}}"
    env:
      PF_JOB_QUEUE: CPU-32G
      PF_JOB_PRIORITY: low
      PF_JOB_QUEUE_NAME: qdh
      PF_JOB_TYPE: vcjob
    artifacts:
      input:
        data: "{{ data_preprocess.validate_data }}"
        model: "{{ main.train_model }}"
cache:
  enable: false
  max_expired_time: 400
  fs_scope: "/path/to/run,/path/to/run2"

parallelism: 5